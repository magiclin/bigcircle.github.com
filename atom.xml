<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hi, I’m dayuan]]></title>
  <link href="http://Bigcircle.github.com/atom.xml" rel="self"/>
  <link href="http://Bigcircle.github.com/"/>
  <updated>2012-08-31T00:10:16+08:00</updated>
  <id>http://Bigcircle.github.com/</id>
  <author>
    <name><![CDATA[bigcircle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[你可能错过的 Rails 技巧(二)]]></title>
    <link href="http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-2.html/"/>
    <updated>2012-08-30T21:39:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-2</id>
    <content type="html"><![CDATA[<p>接着上期说 <a href="http://dayuan.im/blog/10-things-you-didnt-know-rails-could-do-1.html/">你可能错过的 Rails 技巧(一)</a></p>

<h6 id="section">11 - 显示数据迁移记录</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate:status</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会输出 migration 的状态，这在解决迁移版本冲突的时候很有用</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">database</span><span class="p">:</span> <span class="n">db</span><span class="o">/</span><span class="n">development</span><span class="o">.</span><span class="n">sqlite3</span>
</span><span class="line">
</span><span class="line"> <span class="n">status</span>   <span class="no">Migration</span> <span class="no">ID</span>    <span class="no">Migration</span> <span class="no">Name</span>
</span><span class="line"> <span class="o">---------------------------------------</span>
</span><span class="line">   <span class="n">up</span>     <span class="mi">20120414155612</span>  <span class="no">Create</span> <span class="n">users</span>
</span><span class="line">   <span class="n">up</span>     <span class="mi">20120414160528</span>  <span class="no">Create</span> <span class="n">articles</span>
</span><span class="line">  <span class="n">down</span>    <span class="mi">20120414161355</span>  <span class="no">Create</span> <span class="n">comments</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="csv-">12 - 导入 csv 文件</h6>

<p>csv 文件内容如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Name</span><span class="p">,</span><span class="no">Email</span>
</span><span class="line"><span class="no">James</span><span class="p">,</span><span class="n">james</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span>
</span><span class="line"><span class="no">Dana</span><span class="p">,</span><span class="n">dana</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span>
</span><span class="line"><span class="no">Summer</span><span class="p">,</span><span class="n">summer</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建 rake 任务导入 users 表</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
</span><span class="line"><span class="n">namespace</span> <span class="ss">:users</span> <span class="k">do</span>
</span><span class="line">  <span class="n">desc</span> <span class="s2">&quot;Import users from a CSV file&quot;</span>
</span><span class="line">  <span class="n">task</span> <span class="ss">:import</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class="line">    <span class="n">path</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;CSV_FILE&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">      <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="o">*</span><span class="sx">%w[.. .. db data users.csv]</span><span class="p">)</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="no">CSV</span><span class="o">.</span><span class="n">foreach</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">headers</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="n">header_converters</span><span class="p">:</span> <span class="ss">:symbol</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">row</span><span class="o">|</span>
</span><span class="line">      <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">row</span><span class="o">.</span><span class="n">to_hash</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="csv">13 - 数据库中储存 csv</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span>  <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
</span><span class="line">  <span class="k">module</span> <span class="nn">CSVSerializer</span>
</span><span class="line">    <span class="kp">module_function</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">load</span><span class="p">(</span><span class="n">field</span><span class="p">);</span> <span class="n">field</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">parse_csv</span><span class="p">;</span> <span class="k">end</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">dump</span><span class="p">(</span><span class="n">object</span><span class="p">);</span> <span class="nb">Array</span><span class="p">(</span><span class="n">object</span><span class="p">)</span><span class="o">.</span><span class="n">to_csv</span><span class="p">;</span> <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="n">serialize</span> <span class="ss">:categories</span><span class="p">,</span> <span class="no">CSVSerializer</span>
</span><span class="line">
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span><span class="p">,</span> <span class="ss">:categories</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>serialize 用于在文本字段储存序列化的值，如序列，Hash，Array等，例如</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:preferences</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;background&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;black&quot;</span><span class="p">,</span> <span class="s2">&quot;display&quot;</span> <span class="o">=&gt;</span> <span class="n">large</span> <span class="p">})</span>
</span><span class="line"><span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">preferences</span> <span class="c1"># =&gt; { &quot;background&quot; =&gt; &quot;black&quot;, &quot;display&quot; =&gt; large }</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个例子中将 CSVSerializer to_csv序列化之后储存在 categories 这个文本类型字段中</p>

<h6 id="pluck-">14 - 用 pluck 查询</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="n">loading</span> <span class="n">development</span> <span class="n">environment</span><span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:email</span><span class="p">)</span>
</span><span class="line">  <span class="no">User</span> <span class="no">Load</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="n">email</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;james@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;dana@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;summer@example.com&quot;</span><span class="o">]</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span>
</span><span class="line">   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="n">email</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;james@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;dana@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;summer@example.com&quot;</span><span class="o">]</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span>
</span><span class="line">   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="no">DISTINCT</span> <span class="n">email</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;james@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;dana@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;summer@example.com&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>pluck 的实现方式其实也是 select 之后再 map</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">pluck</span><span class="p">(</span><span class="n">column_name</span><span class="p">)</span>
</span><span class="line">  <span class="n">column_name</span> <span class="o">=</span> <span class="n">column_name</span><span class="o">.</span><span class="n">to_s</span>
</span><span class="line">  <span class="n">klass</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">select_all</span><span class="p">(</span><span class="nb">select</span><span class="p">(</span><span class="n">column_name</span><span class="p">)</span><span class="o">.</span><span class="n">arel</span><span class="p">)</span><span class="o">.</span><span class="n">map!</span> <span class="k">do</span> <span class="o">|</span><span class="n">attributes</span><span class="o">|</span>
</span><span class="line">    <span class="n">klass</span><span class="o">.</span><span class="n">type_cast_attribute</span><span class="p">(</span><span class="n">attributes</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">first</span><span class="p">,</span> <span class="n">klass</span><span class="o">.</span><span class="n">initialize_attributes</span><span class="p">(</span><span class="n">attributes</span><span class="p">))</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="group-count">15 - 使用 group count</h6>

<p>创建 article 关联 model event</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">event</span> <span class="n">article</span><span class="ss">:belongs_to</span> <span class="n">triggle</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建3条 edit 记录和10条 view 记录。 Event.count 标明有13条记录， <br />
group(:triggle).count 表示统计 triggle group 之后的数量，也可以用 count(:group =&gt; :trigger)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">article</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">last</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id:1, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">edit</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span> <span class="n">view</span><span class="p">:</span><span class="mi">10</span><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">trigger</span><span class="p">,</span> <span class="n">count</span><span class="o">|</span>
</span><span class="line"><span class="sc">?&gt;</span>   <span class="n">count</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class="line"><span class="sc">?&gt;</span>     <span class="no">Event</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">trigger</span><span class="p">:</span> <span class="n">trigger</span><span class="p">)</span><span class="o">.</span><span class="n">tap</span><span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">article</span><span class="o">=</span> <span class="n">article</span><span class="p">;</span> <span class="n">e</span><span class="o">.</span><span class="n">save!</span> <span class="p">}</span>
</span><span class="line"><span class="sc">?&gt;</span>   <span class="k">end</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:edit</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">,</span> <span class="ss">:view</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">}</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Event</span><span class="o">.</span><span class="n">count</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="mi">13</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Event</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:trigger</span><span class="p">)</span><span class="o">.</span><span class="n">count</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;edit&quot;</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">,</span> <span class="s2">&quot;view&quot;</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-1">16 - 覆盖关联关系</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Car</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:owner</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:previous_owner</span><span class="p">,</span> <span class="n">class_name</span><span class="p">:</span> <span class="s2">&quot;Owner&quot;</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">owner</span><span class="o">=</span><span class="p">(</span><span class="n">new_owner</span><span class="p">)</span>
</span><span class="line">    <span class="nb">self</span><span class="o">.</span><span class="n">previous_owner</span> <span class="o">=</span> <span class="n">owner</span>
</span><span class="line">    <span class="k">super</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>car更改 owner 时，如果有了 new_owner，就把原 owner 赋给 previous_owner，注意要加上 super</p>

<h6 id="section-2">17 - 构造示例数据</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, name: &quot;James&quot;, email: &quot;</span>
</span><span class="line"><span class="err">￼￼￼￼￼￼￼</span><span class="n">james</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span><span class="s2">&quot;, ...&gt;</span>
</span><span class="line"><span class="s2">￼￼￼￼￼&gt;&gt; jeg2 = User.instantiate(&quot;</span><span class="nb">id</span><span class="s2">&quot; =&gt; 1, &quot;</span><span class="n">email</span><span class="s2">&quot; =&gt; &quot;</span>
</span><span class="line"><span class="err">￼￼￼￼</span><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, email: &quot;james@example.com&quot;&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">jeg2</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;James Edward Gray II&quot;</span>
</span><span class="line"><span class="err">￼￼￼￼</span><span class="o">=&gt;</span> <span class="s2">&quot;James Edward Gray II&quot;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">jeg2</span><span class="o">.</span><span class="n">save!</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="err">￼￼￼￼￼￼</span><span class="n">james</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span><span class="s2">&quot;, ...&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>伪造一条记录，并不是数据库中的真实数据，也不会把原有数据覆盖</p>

<h6 id="postgresql--string">18 - PostgreSQL 中使用无限制的 string</h6>

<p>去掉适配器中对 string 长度的限制，这个应该是 PostgreSQL 数据库的特性</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">module</span> <span class="nn">PsqlApp</span>
</span><span class="line">  <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class="line">    <span class="c1"># Switch to limitless strings</span>
</span><span class="line">    <span class="n">initializer</span> <span class="s2">&quot;postgresql.no_default_string_limit&quot;</span> <span class="k">do</span>
</span><span class="line">      <span class="no">ActiveSupport</span><span class="o">.</span><span class="n">on_load</span><span class="p">(</span><span class="ss">:active_record</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">        <span class="n">adapter</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">ConnectionAdapters</span><span class="o">::</span><span class="no">PostgreSQLAdapter</span>
</span><span class="line">        <span class="n">adapter</span><span class="o">::</span><span class="no">NATIVE_DATABASE_TYPES</span><span class="o">[</span><span class="ss">:string</span><span class="o">].</span><span class="n">delete</span><span class="p">(</span><span class="ss">:limit</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"> <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建 user 表，bio 字符串</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">user</span> <span class="n">bio</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">very_long_bio</span> <span class="o">=</span> <span class="s2">&quot;X&quot;</span> <span class="o">*</span> <span class="mi">10_000</span><span class="p">;</span> <span class="ss">:set</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="ss">:set</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">bio</span><span class="p">:</span> <span class="n">very_long_bio</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, bio:</span>
</span><span class="line"><span class="s2">&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span>
</span><span class="line"><span class="s2">XX...&quot;</span><span class="p">,</span> <span class="n">created_at</span><span class="p">:</span> <span class="s2">&quot;2012-04-14 23:02:08&quot;</span><span class="p">,</span>
</span><span class="line"><span class="n">updated_at</span><span class="p">:</span> <span class="s2">&quot;2012-04-14 23:02:08&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">bio</span><span class="o">.</span><span class="n">size</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="mi">10000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="postgresql-">19 - PostgreSQL 中使用全文搜索</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">article</span> <span class="n">subject</span> <span class="n">body</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>更改迁移文件，添加索引和 articles_search_update 触发器</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateArticles</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:articles</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:subject</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span>   <span class="ss">:body</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">column</span> <span class="ss">:search</span><span class="p">,</span> <span class="s2">&quot;tsvector&quot;</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">execute</span> <span class="o">&lt;&lt;-</span><span class="no">END_SQL</span>
</span><span class="line"><span class="sh">      CREATE INDEX articles_search_index</span>
</span><span class="line"><span class="sh">      ON articles USING gin(search);</span>
</span><span class="line"><span class="sh">      CREATE TRIGGER articles_search_update</span>
</span><span class="line"><span class="sh">      BEFORE INSERT OR UPDATE ON articles</span>
</span><span class="line"><span class="sh">      FOR EACH ROW EXECUTE PROCEDURE</span>
</span><span class="line"><span class="sh">      tsvector_update_trigger( search, &#39;pg_catalog.english&#39;, subject, body);</span>
</span><span class="line"><span class="no">    END_SQL</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Model 中添加 search 方法</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span>
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
</span><span class="line">    <span class="n">sql</span> <span class="o">=</span> <span class="n">sanitize_sql_array</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;plainto_tsquery(&#39;english&#39;, ?)&quot;</span><span class="p">,</span> <span class="n">query</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">    <span class="n">where</span><span class="p">(</span>
</span><span class="line">      <span class="s2">&quot;search @@ </span><span class="si">#{</span><span class="n">sql</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">    <span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span>
</span><span class="line">      <span class="s2">&quot;ts_rank_cd(search, </span><span class="si">#{</span><span class="n">sql</span><span class="si">}</span><span class="s2">) DESC&quot;</span>
</span><span class="line">    <span class="p">)</span>
</span><span class="line"><span class="k">end</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>PostgreSQL 数据库没用过，这段看例子吧</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">subject</span><span class="p">:</span> <span class="s2">&quot;Full Text Search&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id: 1, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">body</span><span class="p">:</span> <span class="s2">&quot;A stemmed search.&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id: 2, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">body</span><span class="p">:</span> <span class="s2">&quot;You won&#39;t find me!&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id: 3, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;search&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span><span class="o">.</span><span class="n">subject</span> <span class="o">||</span> <span class="n">a</span><span class="o">.</span><span class="n">body</span> <span class="p">}</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;Full Text Search&quot;</span><span class="p">,</span> <span class="s2">&quot;A stemmed search.&quot;</span><span class="o">]</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;stemming&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span><span class="o">.</span><span class="n">subject</span> <span class="o">||</span> <span class="n">a</span><span class="o">.</span><span class="n">body</span> <span class="p">}</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;A stemmed search.&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-3">21 - 每个用户使用不同的数据库</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">-</span> <span class="n">user_database</span><span class="o">.</span><span class="n">rb</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">connect_to_user_database</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class="line">  <span class="n">config</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">configurations</span><span class="o">[</span><span class="s2">&quot;development&quot;</span><span class="o">].</span><span class="n">merge</span><span class="p">(</span><span class="s2">&quot;database&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;db/</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">.sqlite3&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="n">config</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建 rake 任务：新增用户数据库和创建</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s2">&quot;user_database&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">namespace</span> <span class="ss">:db</span> <span class="k">do</span>
</span><span class="line">  <span class="n">desc</span> <span class="s2">&quot;Add a new user database&quot;</span>
</span><span class="line">  <span class="n">task</span> <span class="ss">:add</span> <span class="o">=&gt;</span> <span class="sx">%w[environment load_config]</span> <span class="k">do</span>
</span><span class="line">    <span class="nb">name</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;DB_NAME&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="nb">fail</span> <span class="s2">&quot;DB_NAME is required&quot;</span> <span class="p">}</span>
</span><span class="line">    <span class="n">connect_to_user_database</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class="line">    <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">namespace</span> <span class="ss">:migrate</span> <span class="k">do</span>
</span><span class="line">    <span class="n">desc</span> <span class="s2">&quot;Migrate all user databases&quot;</span>
</span><span class="line">    <span class="n">task</span> <span class="ss">:all</span> <span class="o">=&gt;</span> <span class="sx">%w[environment load_config]</span> <span class="k">do</span>
</span><span class="line">      <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">.</span><span class="n">verbose</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;VERBOSE&quot;</span><span class="p">,</span> <span class="s2">&quot;true&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;true&quot;</span>
</span><span class="line">      <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s2">&quot;db/*.sqlite3&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class="line">        <span class="k">next</span> <span class="k">if</span> <span class="n">file</span> <span class="o">==</span> <span class="s2">&quot;db/test.sqlite3&quot;</span>
</span><span class="line">        <span class="n">connect_to_user_database</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s2">&quot;.sqlite3&quot;</span><span class="p">))</span>
</span><span class="line">        <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migrator</span><span class="o">.</span><span class="n">migrate</span><span class="p">(</span>
</span><span class="line">          <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migrator</span><span class="o">.</span><span class="n">migrations_paths</span><span class="p">,</span>
</span><span class="line">          <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">].</span><span class="n">to_i</span>
</span><span class="line">        <span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">migration</span><span class="o">|</span>
</span><span class="line">          <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;SCOPE&quot;</span><span class="o">].</span><span class="n">blank?</span> <span class="o">||</span> <span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;SCOPE&quot;</span><span class="o">]</span> <span class="o">==</span> <span class="n">migration</span><span class="o">.</span><span class="n">scope</span><span class="p">)</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行几个rake 任务创建不同的数据库</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">user</span> <span class="nb">name</span>
</span><span class="line"><span class="err">$</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:add</span> <span class="no">DB_NAME</span><span class="o">=</span><span class="n">ruby_rogues</span>
</span><span class="line"><span class="err">$</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:add</span> <span class="no">DB_NAME</span><span class="o">=</span><span class="n">grays</span>
</span><span class="line"><span class="err">$</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate:all</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrating</span> <span class="o">==================================</span>
</span><span class="line"><span class="o">--</span> <span class="n">create_table</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
</span><span class="line">   <span class="o">-&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mo">000</span><span class="mi">8</span><span class="n">s</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrated</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mo">000</span><span class="mi">8</span><span class="n">s</span><span class="p">)</span> <span class="o">=========================</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrating</span> <span class="o">==================================</span>
</span><span class="line"><span class="o">--</span> <span class="n">create_table</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
</span><span class="line">   <span class="o">-&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0007</span><span class="n">s</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrated</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mo">000</span><span class="mi">8</span><span class="n">s</span><span class="p">)</span> <span class="o">=========================</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建几条记录，为不同的数据库创建不同的数据</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">connect_to_user_database</span><span class="p">(</span><span class="s2">&quot;ruby_rogues&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::ConnectionAdapters::ConnectionPool...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Chuck&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, name: &quot;Chuck&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Josh&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 2, name: &quot;Josh&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Avdi&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 3, name: &quot;Avdi&quot;, ...&gt;</span>
</span><span class="line"><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">connect_to_user_database</span><span class="p">(</span><span class="s2">&quot;grays&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::ConnectionAdapters::ConnectionPool...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;James&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, name: &quot;James&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Dana&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 2, name: &quot;Dana&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Summer&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 3, name: &quot;Summer&quot;, ...&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>ApplicationController 里面添加 before_filter 根据登陆的二级域名判断连接哪个数据库</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">protect_from_forgery</span>
</span><span class="line">  <span class="n">before_filter</span> <span class="ss">:connect_to_database</span>
</span><span class="line"><span class="kp">private</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">connect_to_database</span>
</span><span class="line">    <span class="n">connect_to_user_database</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">subdomains</span><span class="o">.</span><span class="n">first</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>中场休息，未完待续。。。内容真心多啊，不过有用的不多</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你可能错过的 Rails 技巧(一)]]></title>
    <link href="http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-1.html/"/>
    <updated>2012-08-30T11:22:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-1</id>
    <content type="html"><![CDATA[<p>记得前段时间 RailsConf2012 之后看过一个不错的pdf，<a href="https://speakerdeck.com/u/jeg2/p/10-things-you-didnt-know-rails-could-do">10 things you didn’t know rails could do</a></p>

<p>说是10个，但是给出了42个实例，这几天抽空又回味了下，料很多，写的很好，顺便总结学习下</p>

<p>Pass 掉第一个 <a href="http://fridayhug.com">fridayhug</a>，我们是开心拥抱每一天
<!--more--></p>

<h6 id="rails-app">1 - 最小的rails app</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="sx">%w(action_controller/railtie coderay markaby)</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;</span><span class="nb">method</span><span class="p">(</span><span class="ss">:require</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">run</span> <span class="no">TheSmallestRailsApp</span> <span class="o">||=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Rails</span><span class="o">::</span><span class="no">Application</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">secret_token</span> <span class="o">=</span> <span class="n">routes</span><span class="o">.</span><span class="n">append</span> <span class="p">{</span>
</span><span class="line">    <span class="n">root</span> <span class="n">to</span><span class="p">:</span> <span class="nb">proc</span> <span class="p">{</span>
</span><span class="line">      <span class="o">[</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;Content-Type&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;text/html&quot;</span><span class="p">},</span> <span class="o">[</span><span class="no">Markaby</span><span class="o">::</span><span class="no">Builder</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span>
</span><span class="line">        <span class="n">title</span> <span class="vi">@title</span> <span class="o">=</span> <span class="s2">&quot;The Smallest Rails App&quot;</span>
</span><span class="line">        <span class="n">h3</span> <span class="s2">&quot;I am </span><span class="si">#@title</span><span class="s2">!&quot;</span>
</span><span class="line">        <span class="nb">p</span> <span class="s2">&quot;Here is my source code:&quot;</span>
</span><span class="line">        <span class="n">div</span> <span class="p">{</span> <span class="no">CodeRay</span><span class="o">.</span><span class="n">scan_file</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="n">line_numbers</span><span class="p">:</span> <span class="ss">:table</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line">        <span class="nb">p</span> <span class="p">{</span> <span class="n">a</span> <span class="s2">&quot;Make me smaller&quot;</span><span class="p">,</span> <span class="n">href</span><span class="p">:</span> <span class="s2">&quot;//goo.gl/YdRpy&quot;</span> <span class="p">}</span>
</span><span class="line">      <span class="p">}</span><span class="o">]]</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span><span class="o">.</span><span class="n">to_s</span>
</span><span class="line">  <span class="kp">initialize</span><span class="o">!</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="todo">2 - 提醒功能 TODO</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class="line">  <span class="c1"># TODO:  Make it possible to create new users.</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="c1"># FIXME: Should token really  be accessible?</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:bil</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:token</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;%</span><span class="c1"># OPTIMIZE: Paginate this listing. %&gt;</span>
</span><span class="line"><span class="o">&lt;%=</span> <span class="n">render</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行 <code>rake notes</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">controllers</span><span class="o">/</span><span class="n">users_controller</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">2</span><span class="o">]</span> <span class="o">[</span><span class="no">TODO</span><span class="o">]</span> <span class="no">Make</span> <span class="n">it</span> <span class="n">possible</span> <span class="n">to</span> <span class="n">create</span> <span class="kp">new</span> <span class="n">users</span><span class="o">.</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">user</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">2</span><span class="o">]</span> <span class="o">[</span><span class="no">FIXME</span><span class="o">]</span> <span class="no">Should</span> <span class="n">token</span> <span class="n">really</span> <span class="n">be</span> <span class="n">accessible?</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">/</span><span class="n">articles</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">erb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">1</span><span class="o">]</span> <span class="o">[</span><span class="no">OPTIMIZE</span><span class="o">]</span> <span class="no">Paginate</span> <span class="n">this</span> <span class="n">listing</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>查看单独的 TODO / FIXME / OPTIMIZE </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rake</span> <span class="n">notes</span><span class="ss">:todo</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">controllers</span><span class="o">/</span><span class="n">users_controller</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">2</span><span class="o">]</span> <span class="no">Make</span> <span class="n">it</span> <span class="n">possible</span> <span class="n">to</span> <span class="n">create</span> <span class="kp">new</span> <span class="n">users</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以自定义提醒名称</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span>
</span><span class="line">  <span class="c1"># JEG2: Add that code from your blog here.</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>不过需要敲一长串，可以alias个快捷键</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rake</span> <span class="n">notes</span><span class="ss">:custom</span> <span class="no">ANNOTATION</span><span class="o">=</span><span class="no">JEG2</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">article</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">4</span><span class="o">]</span><span class="no">Add</span> <span class="n">that</span> <span class="n">code</span> <span class="n">from</span> <span class="n">your</span> <span class="n">blog</span> <span class="n">here</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="rails-c">3 - 沙箱模式执行 rails c</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">c</span> <span class="o">--</span><span class="n">sandbox</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>沙箱模式会有回滚事务机制，对数据库的操作在退出之前都会自动回滚到之前未修改的数据</p>

<h6 id="rails-c--rails-helper-">4 - 在 rails c 控制台中使用 rails helper 方法</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">helper</span><span class="o">.</span><span class="n">number_to_currency</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="s2">&quot;$100.00&quot;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">helper</span><span class="o">.</span><span class="n">time_ago_in_words</span><span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="n">days</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="s2">&quot;3 days&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="thin--webrick">5 - 开发模式用 thin 代替 webrick</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class="line">  <span class="n">gem</span> <span class="s1">&#39;thin&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">rails</span> <span class="n">s</span> <span class="n">thin</span> <span class="o">/</span> <span class="n">thin</span> <span class="n">start</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section">6 - 允许自定义配置</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">-</span> <span class="n">lib</span><span class="o">/</span><span class="n">custom</span><span class="o">/</span><span class="n">railtie</span><span class="o">.</span><span class="n">rb</span>
</span><span class="line">
</span><span class="line"> <span class="k">module</span> <span class="nn">Custom</span>
</span><span class="line">   <span class="k">class</span> <span class="nc">Railtie</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Railtie</span>
</span><span class="line">     <span class="n">config</span><span class="o">.</span><span class="n">custom</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">OrderedOptions</span><span class="o">.</span><span class="n">new</span>
</span><span class="line">   <span class="k">end</span>
</span><span class="line"> <span class="k">end</span>
</span><span class="line">
</span><span class="line"> <span class="o">-</span> <span class="n">config</span><span class="o">/</span><span class="n">application</span><span class="o">.</span><span class="n">rb</span>
</span><span class="line">
</span><span class="line"> <span class="n">require_relative</span> <span class="s2">&quot;../lib/custom/railtie&quot;</span>
</span><span class="line">
</span><span class="line"> <span class="k">module</span> <span class="nn">Blog</span>
</span><span class="line">   <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class="line">     <span class="c1"># ...</span>
</span><span class="line">     <span class="n">config</span><span class="o">.</span><span class="n">custom</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="mi">42</span>
</span><span class="line">   <span class="k">end</span>
</span><span class="line"> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="keep-funny">7 - keep funny</h6>

<p>作者给出了个介绍 ruby 以及一些相关 blog的网站 <a href="http://www.rubydramas.com">rubydramas</a>，搞笑的是这个网站右上角标明 </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Powered</span> <span class="n">by</span> <span class="no">PHP</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>用 <a href="http://isitrails.com">isitrails.com</a> 检查了下，果然不是用 rails 做的，这个应该是作者分享 ppt 过程中的一个小插曲吧</p>

<h6 id="section-1">8 -理解简写的迁移文件</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resources</span> <span class="n">user</span> <span class="nb">name</span><span class="ss">:string</span> <span class="n">email</span><span class="ss">:string</span> <span class="n">token</span><span class="ss">:string</span> <span class="n">bio</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>字段会被默认为 string 属性，查看了下 <a href="https://github.com/rails/rails/blob/master/railties/lib/rails/generators/generated_attribute.rb#LC55">源码</a>，果然有初始化定义</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resources</span> <span class="n">user</span> <span class="nb">name</span> <span class="n">email</span> <span class="n">token</span><span class="ss">:string</span><span class="p">{</span><span class="mi">6</span><span class="p">}</span> <span class="n">bio</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会生成用样的 migration 文件</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:email</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:token</span><span class="p">,</span> <span class="ss">:limit</span> <span class="o">=&gt;</span> <span class="mi">6</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:bio</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="migration-">9 - 给 migration 添加索引</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">user</span> <span class="nb">name</span><span class="ss">:index</span> <span class="n">email</span><span class="ss">:uniq</span> <span class="n">token</span><span class="ss">:string</span><span class="p">{</span><span class="mi">6</span><span class="p">}</span> <span class="n">bio</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会生成 name 和 email 的索引，同时限定 email 唯一</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:email</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:token</span><span class="p">,</span> <span class="ss">:limit</span> <span class="o">=&gt;</span> <span class="mi">6</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:bio</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="n">add_index</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:name</span>
</span><span class="line">    <span class="n">add_index</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:unique</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-2">10 - 添加关联关系</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">article</span> <span class="n">user</span><span class="ss">:references</span> <span class="n">subject</span> <span class="n">body</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会自动关联生成对应的 belongs_to 和 外键，并添加索引</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateArticles</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:articles</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">references</span> <span class="ss">:user</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:subject</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:body</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">add_index</span> <span class="ss">:articles</span><span class="p">,</span> <span class="ss">:user_id</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>未完待续。。。太长了，还是分期吧</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Seo]]></title>
    <link href="http://Bigcircle.github.com/blog/add-seo-to-octopress.html/"/>
    <updated>2012-08-29T21:50:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/add-seo-to-octopress</id>
    <content type="html"><![CDATA[<p>用 Google 大婶搜索了下 Octopress 可以定制的内容，发现可以定制的东西真的还蛮多的，也基本都是平常能看得的几个功能，比如下面几个：</p>

<ul>
  <li><a href="http://tinyxd.me/blog/2012/07/09/add-douban-aside/">给octopress博客添加豆瓣侧边栏</a> </li>
  <li><a href="http://caok.github.com/blog/2012/06/24/install-octopress-to-write-blog/">添加新浪微博侧边栏</a>
<!--more--></li>
  <li><a href="http://log4d.com/2012/05/tag-cloud/">给octopress加上标签云</a></li>
  <li><a href="http://shanewfx.github.com/blog/2012/08/13/improve-blog-theme/">添加about，友情链接</a></li>
</ul>

<p>不如我一向遵循 <code>less is more, more is less</code> 的原则，不想把 blog 弄的太臃肿，而且这些功能对我也基本用处不大，没有微博上碎嘴的习惯，豆瓣上也只去电影区看影评，tag云感觉和category重复，友链暂时也没有，等等。先存个链接，说不定什么时候就想加上。。</p>

<p>目前先保持简洁的风格，稍微做下 seo 优化，过程参考 <a href="http://www.yatishmehta.in/seo-for-octopress">这篇</a></p>

<h5 id="meta-data-description">添加 meta data description</h5>

<p>文章生产时默认会生成 layout, title, date, comments, categories 这几项，如果多添加2个选项 ‘keywords’, ‘description’，会在 generate 文章的时候自动生成相应的 meta 标签</p>

<p>如果文章 header 写成这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">layout: post
</span><span class="line">title: &quot;SEO for Octopress&quot;
</span><span class="line">date: 2012-04-22 09:55
</span><span class="line">comments: true
</span><span class="line">categories: [seo,octopress]
</span><span class="line">keywords: seo,octopress,heroku
</span><span class="line">description: How to optimize Octopress for SEO,Heroku
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>生成的post head标签中会生成</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;title&gt;</span>SEO for Octopress <span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;author&quot;</span> <span class="na">content=</span><span class="s">&quot;Yatish Mehta&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span> <span class="na">content=</span><span class="s">&quot;How to optimize Octopress for SEO&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;seo,octopress&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果不想每次都得手动添加，可以修改 Rakefile - new_post task任务</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;layout: post&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;title: </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">title</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/&amp;/</span><span class="p">,</span><span class="s1">&#39;&amp;amp;&#39;</span><span class="p">)</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;date: </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d %H:%M&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;comments: true&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;categories: &quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;keywords: &quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;description: &quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="meta-data">主页的 meta data</h5>

<p>上面的方法只能给每个 post 生成对应的 meta标签，如果要给主页添加 meta 标签，修改 source/_includes/head.html，添加以下内容</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="n">meta</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="n">content</span><span class="o">=</span><span class="s2">&quot;{{ site.author }}&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">capture</span> <span class="n">description</span> <span class="sx">%}{% if page.description %}</span><span class="p">{{</span> <span class="n">page</span><span class="o">.</span><span class="n">description</span> <span class="p">}}{</span><span class="o">%</span> <span class="k">elsif</span> <span class="n">site</span><span class="o">.</span><span class="n">description</span> <span class="sx">%}{{ site.description }</span><span class="p">}{</span><span class="o">%</span><span class="k">else</span><span class="sx">%}{{ content | raw_content }</span><span class="p">}{</span><span class="o">%</span> <span class="n">endif</span> <span class="sx">%}{% endcapture %}</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">meta</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="n">content</span><span class="o">=</span><span class="s2">&quot;{{ description | strip_html | condense_spaces | truncate:150 }}&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">keywords</span> <span class="sx">%}&lt;meta name=&quot;keywords&quot; content=&quot;{{ page.keywords }</span><span class="p">}</span><span class="s2">&quot;&gt;{%else%}&lt;meta name=&quot;</span><span class="n">keywords</span><span class="s2">&quot; content=&quot;</span><span class="p">{{</span> <span class="n">site</span><span class="o">.</span><span class="n">keywords</span> <span class="p">}}</span><span class="s2">&quot;&gt;{% endif %}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这段内容其实已经被引入了 Octopress 源码里面了，所以只需要在 _config.yml 文件中填充全局的 keywords 和 description, 比如这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">description</span><span class="p">:</span> <span class="no">Tips</span><span class="p">,</span> <span class="n">tricks</span><span class="p">,</span> <span class="ow">and</span> <span class="n">hacks</span> <span class="n">on</span> <span class="no">Ruby</span> <span class="n">on</span> <span class="no">Rails</span> <span class="n">development</span><span class="o">.</span>
</span><span class="line"><span class="n">keywords</span><span class="p">:</span> <span class="n">ruby</span><span class="p">,</span><span class="n">ruby</span> <span class="n">on</span> <span class="n">rails</span><span class="p">,</span><span class="n">salesforce</span><span class="p">,</span><span class="n">gem</span><span class="p">,</span><span class="n">web</span> <span class="n">development</span><span class="p">,</span><span class="no">Ajax</span><span class="p">,</span><span class="no">SEO</span><span class="p">,</span><span class="n">scraping</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样 /blog 主页就会自动生成对应的 meta</p>

<h5 id="section">指向单独的域名</h5>

<p>有时候你的域名可能同时对带 www 前缀和不带前缀同时有效，这种情况有可能会影响网站的 page rank，你需要把其中的一个作为主域名，重定向另一个指向这个域名</p>

<p>以上只是一些简单的 seo 技巧，本着有总比没有强点的原则稍加修改就OK了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译Textmate]]></title>
    <link href="http://Bigcircle.github.com/blog/compile-textmate.html/"/>
    <updated>2012-08-28T23:43:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/compile-textmate</id>
    <content type="html"><![CDATA[<p>前段时间 <a href="http://macromates.com/">Textmate</a> 开源着实让大家大吃一斤，论坛上，Twitter，包括微博上也都是各种转发，谈论。   </p>

<p>Textmate 无须多作介绍，知道的应该都知道。号称能够和 Emacs Vim 并称的神器，当然是在 Mac 上和 Ruby 界，很多编译库都是系统依赖的，作者可能也没想移植到 linux/windows 下，所以没造成大火的局面，不过美金也赚的差不多了</p>

<!--more-->

<p>我从做开发伊始就一直用的 Sublime Text 2，也是一个大量借鉴 Textmate 理念和功能的产品，易用性相当不错，也有很多现成的包可以用，跨平台，不爽的是快捷键不能跨，windows下快捷键得另改，好在现在已经不需要切到 windows 了，也就少了这个烦恼。上次在 v2ex 看到有人发编译后的app，感觉编译应该不是很难。以前一直想试用下，但是version 1下的汉字显示实在是不行，现在升级到版本2了貌似解决了这个问题，就尝试着编译个尝尝鲜，看和 ST2 哪个更好用</p>

<p>Github 上托管地址 <a href="https://github.com/textmate/textmate">Here</a></p>

<h5 id="section">安装编译所需工具</h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="n">ragel</span> <span class="n">boost</span> <span class="n">multimarkdown</span> <span class="n">hg</span> <span class="n">ninja</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>boost 源码放在 sourceforge 上，下载可能需要挂代理，而且速度也很慢 <br />
ninja 最近才新加到 brew 的 Formula 里面，如果安装提示没有的话需要 brew update 下</p>

<h5 id="pgrep-pkill">查看是否有 pgrep pkill</h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">which</span> <span class="n">pgrep</span> <span class="n">pkill</span>
</span><span class="line"><span class="cp"># 如果没有的话需要安装 proctools</span>
</span><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="n">proctools</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="clang-32--40-">需要clang 3.2 / 4.0 版本</h5>

<p>一般安装了 xcode 都已经安装好了 clang，直接查看版本</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">clang</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line">
</span><span class="line"><span class="n">Apple</span> <span class="n">clang</span> <span class="n">version</span> <span class="mf">4.0</span> <span class="p">(</span><span class="n">tags</span><span class="o">/</span><span class="n">Apple</span><span class="o">/</span><span class="n">clang</span><span class="o">-</span><span class="mf">421.0.60</span><span class="p">)</span> <span class="p">(</span><span class="n">based</span> <span class="n">on</span> <span class="n">LLVM</span> <span class="mf">3.1</span><span class="n">svn</span><span class="p">)</span>
</span><span class="line"><span class="nl">Target:</span> <span class="n">x86_64</span><span class="o">-</span><span class="n">apple</span><span class="o">-</span><span class="n">darwin12</span><span class="mf">.1.0</span>
</span><span class="line"><span class="n">Thread</span> <span class="n">model</span><span class="o">:</span> <span class="n">posix</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp"># 没有的话安装 llvm 套件</span>
</span><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="o">--</span><span class="n">HEAD</span> <span class="n">llvm</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">clang</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="start-compile">start compile</h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="o">:</span><span class="c1">//github.com/textmate/textmate.git</span>
</span><span class="line"><span class="n">cd</span> <span class="n">textmate</span>
</span><span class="line"><span class="n">git</span> <span class="n">submodule</span> <span class="n">update</span> <span class="o">--</span><span class="n">init</span>
</span><span class="line"><span class="p">.</span><span class="o">/</span><span class="n">configure</span> <span class="o">&amp;&amp;</span> <span class="n">ninja</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>作者用 ninja 取代了 make 进行编译和安装</p>

<p>编译完了图标居然变成了菊花。。以前的图标差不多成为了一个标志，实在是理解不能。。</p>

<p>生成的 app 文件位于</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="o">~/</span><span class="n">build</span><span class="o">/</span><span class="n">TextMate</span><span class="o">/</span><span class="n">Applications</span><span class="o">/</span><span class="n">TextMate</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>图标就是那朵粉嫩的菊花。。难看死了</p>

<p>最后贴上一张芙蓉照</p>

<p><img src="http://m1.img.libdd.com/farm5/2012/0829/00/00A980D9C6A159F9467E71EFCE4485420E266C05049E_1190_714.PNG" alt="" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails view select 方法学习]]></title>
    <link href="http://Bigcircle.github.com/blog/explain-select-on-rails-hepler.html/"/>
    <updated>2012-08-28T10:52:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/explain-select-on-rails-hepler</id>
    <content type="html"><![CDATA[<p>开始几篇都是扯些闲蛋，从这篇开始多写点技术方面学习的东西，多谈点实际，少谈点主义，做只勤劳的小蜜蜂</p>

<p>rails的actionview提供了简单的select方法生产表单选择项，根据 <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html">Api</a> 指示，用法如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="n">object</span><span class="p">,</span> <span class="nb">method</span><span class="p">,</span> <span class="n">choices</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">html_options</span> <span class="o">=</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->
<ul>
  <li>object是指select选项所修饰的目标对象，通常是一个Model对象</li>
  <li>method是目标对象的属性（方法）名</li>
  <li>choices可以是任何可枚举的对象，数组，Hash或者是包含了选择框的数据库查询结果</li>
  <li>options选项</li>
  <li>html_options是html相关选项</li>
</ul>

<p>include_blank 会显示值为空的默认选项，prompt 会给个提示选择，比如提示 Select One. <br />
例如对于  @post.person_id =&gt; 2  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="s2">&quot;post&quot;</span><span class="p">,</span> <span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="no">Person</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="o">[</span> <span class="nb">p</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="nb">p</span><span class="o">.</span><span class="n">id</span> <span class="o">]</span> <span class="p">},</span> <span class="p">{</span><span class="ss">:include_blank</span> <span class="o">=&gt;</span> <span class="s1">&#39;None&#39;</span><span class="p">})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;post[person_id]&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">&gt;</span><span class="no">None</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;1&quot;&gt;David&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;2&quot;</span> <span class="n">selected</span><span class="o">=</span><span class="s2">&quot;selected&quot;</span><span class="o">&gt;</span><span class="no">Sam</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;3&quot;&gt;Tobias&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/select&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>index =&gt; nil 不显示空选项或提示项，直接显示第一个值</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="s2">&quot;album[]&quot;</span><span class="p">,</span> <span class="s2">&quot;genre&quot;</span><span class="p">,</span> <span class="sx">%w[rap rock country]</span><span class="p">,</span> <span class="p">{},</span> <span class="p">{</span> <span class="ss">:index</span> <span class="o">=&gt;</span> <span class="kp">nil</span> <span class="p">})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;album[][genre]&quot;</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;album__genre&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;rap&quot;</span><span class="o">&gt;</span><span class="n">rap</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;rock&quot;&gt;rock&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;country&quot;</span><span class="o">&gt;</span><span class="n">country</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">&lt;/se</span><span class="n">lect</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>:disabled =&gt; value 设置一个单独的值或者Prco对象 html标签属性为disable</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="s2">&quot;post&quot;</span><span class="p">,</span> <span class="s2">&quot;category&quot;</span><span class="p">,</span> <span class="no">Post</span><span class="o">::</span><span class="no">CATEGORIES</span><span class="p">,</span> <span class="p">{</span><span class="ss">:disabled</span> <span class="o">=&gt;</span> <span class="s1">&#39;restricted&#39;</span><span class="p">})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;post[category]&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span><span class="o">&gt;&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option&gt;joke&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span><span class="o">&gt;</span><span class="n">poem</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option disabled=&quot;disabled&quot;&gt;restricted&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/select&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当用到collection_select时，可以鉴定一个Proc对象是否disable</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">collection_select</span><span class="p">(</span><span class="ss">:post</span><span class="p">,</span> <span class="ss">:category_id</span><span class="p">,</span> <span class="no">Category</span><span class="o">.</span><span class="n">all</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="p">{</span><span class="ss">:disabled</span> <span class="o">=&gt;</span> <span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">category</span><span class="o">|</span> <span class="n">category</span><span class="o">.</span><span class="n">archived?</span> <span class="p">}})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;post[category_id]&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;1&quot;</span> <span class="n">disabled</span><span class="o">=</span><span class="s2">&quot;disabled&quot;</span><span class="o">&gt;</span><span class="mi">2008</span> <span class="n">stuff</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;2&quot; disabled=&quot;disabled&quot;&gt;Christmas&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;3&quot;</span><span class="o">&gt;</span><span class="no">Jokes</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;4&quot;&gt;Poems&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/select&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>html_option 里面还可以写各种js事件，比如这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="ss">:person</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="no">Persion</span><span class="o">.</span><span class="n">all</span><span class="p">,</span> <span class="p">{</span><span class="ss">:onchange</span> <span class="o">=&gt;</span> <span class="s1">&#39;doSomething()&#39;</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="selecttaghttpapirubyonrailsorgclassesactionviewhelpersformtaghelperhtmlmethod-i-selecttag"><a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html#method-i-select_tag">select_tag</a></h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">select_tag</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">option_tags</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>option =&gt; {:multiple, :disable, :include_blank, :prompt} 
后三个和select里面用法一样，mutiple 允许同时传递多个值，相当于一个多选框</p>

<p>option_tags 可以自己手写几个option标签，或者用现成的方法，其实就是option标签的helper方法，Api 中的几个 <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_for_select">例子</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">options_for_select</span><span class="p">(</span><span class="n">container</span><span class="p">,</span> <span class="n">selected</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">options_from_collection_for_select</span><span class="p">(</span><span class="n">collection</span><span class="p">,</span> <span class="n">value_method</span><span class="p">,</span> <span class="n">text_method</span><span class="p">,</span> <span class="n">selected</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="collectionselecthttpapirubyonrailsorgclassesactionviewhelpersformoptionshelperhtmlmethod-i-collectionselect"><a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_select">collection_select</a></h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">collection_select</span><span class="p">(</span><span class="n">object</span><span class="p">,</span> <span class="nb">method</span><span class="p">,</span> <span class="n">collection</span><span class="p">,</span> <span class="n">value_method</span><span class="p">,</span> <span class="n">text_method</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">html_options</span> <span class="o">=</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>collect_select 比 select 多了2个选项，value_method 和 text_method 分别表示 collection 你想选择的对应字段，相当于 select + options_from_collection_for_select 的组合，大致功能其实和 select 差不多</p>

<p>一篇老外5年前写的介绍这几个 select 的 <a href="http://shiningthrough.co.uk/Select-helper-methods-in-Ruby-on-Rails">文章</a>，rails 的中文文档还是太少了。</p>

<p>剩下几个出场率太低的helper</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">grouped_collection_select</span><span class="p">(</span><span class="n">object</span><span class="p">,</span> <span class="nb">method</span><span class="p">,</span> <span class="n">collection</span><span class="p">,</span> <span class="n">group_method</span><span class="p">,</span> <span class="n">group_label_method</span><span class="p">,</span> <span class="n">option_key_method</span><span class="p">,</span> <span class="n">option_value_method</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">html_options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class="line">
</span><span class="line"><span class="n">grouped_options_for_select</span><span class="p">(</span><span class="n">grouped_options</span><span class="p">,</span> <span class="n">selected_key</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">prompt</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">option_groups_from_collection_for_select</span><span class="p">(</span><span class="n">collection</span><span class="p">,</span> <span class="n">group_method</span><span class="p">,</span> <span class="n">group_label_method</span><span class="p">,</span> <span class="n">option_key_method</span><span class="p">,</span> <span class="n">option_value_method</span><span class="p">,</span> <span class="n">selected_key</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>grouped_collection_select用法和 collection_select 差不多，只是会生成 optgroup 标签来标识二级选项</li>
  <li>grouped_options_for_select 也是一样，比 options_for_select 多一层 optgroup 标签</li>
  <li>option_groups_from_collection_for_select 同options_from_collection_for_select，都只是在原有基础上修改了下</li>
</ul>

<p>Rails 源码在此，有兴趣的可以拜读下 <a href="https://github.com/rails/rails/blob/27c8debdc6b242c845a279187205a2b057e18469/actionpack/lib/action_view/helpers/form_options_helper.rb#L156">Here</a></p>

<p>用 select 的好处就是书写简洁，可以配合js生产联动查询，比如说最常用的省市查询 <br />
不过对于不熟悉语法的人可能读起来就不如直接 select &gt; option 直接明了，需要花时间去明白什么意思，各有利弊吧</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修改Octopress主题样式]]></title>
    <link href="http://Bigcircle.github.com/blog/modify-octopress-style-and-color.html/"/>
    <updated>2012-08-27T19:17:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/modify-octopress-style-and-color</id>
    <content type="html"><![CDATA[<p>默认的Octopress已经烂大街了，第一眼可能看着还行，看多了加上别人的都是这个主题，总想自己搞个，不过想把大的框架做的好看真的很难，于是就在原有基础上随便修修补补，能看就行</p>

<p>主要修改了以下几个方面：
<!-- more --></p>

<blockquote>
  <ul>
    <li>默认隐藏侧边栏，添加上class之后会挤到下面，看着也凑合，就没去掉</li>
    <li>整体颜色以 <code>#2697e3</code> 和 <code>lightblue</code> 为主，看着统一一点 </li>
    <li>所有背景统一为一个背景</li>
    <li>去掉各种边边框框，让样式尽量简单一点</li>
    <li>修改引用gist代码和普通代码的高亮和样式</li>
  </ul>
</blockquote>

<p>整体框架基本忠于原作，等什么时候看到好看的样式再折腾</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给Octopress添加分类列表]]></title>
    <link href="http://Bigcircle.github.com/blog/add-category-list-for-octopress.html/"/>
    <updated>2012-08-27T11:24:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/add-category-list-for-octopress</id>
    <content type="html"><![CDATA[<p>Octopress可定制的功能很多，可以在侧边栏添加分类列表，最近评论，Twitter/Weibo，tags云 或者自己能想到的差不多都能定制，就看网上能不能找到现成的或者自己能不能写了。 <br />
为了使界面简洁点，就只添加了一个分类列表
<!-- more --></p>

<ul>
  <li>新建分类列表 source/_inclide/custom/asides/category_list.html</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="o">&lt;</span><span class="nx">section</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Categories</span><span class="o">&lt;</span><span class="err">/h1&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="nx">ul</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;categories&quot;</span><span class="o">&gt;</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="nx">category_list</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">  <span class="o">&lt;</span><span class="err">/ul&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="err">/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>新建插件： plugins/category_list_tag.rb</li>
</ul>

<div><script src="https://gist.github.com/3485442.js?file=category_list_tag.rb"></script>
<noscript><pre><code>module Jekyll
  class CategoryListTag &lt; Liquid::Tag
    def render(context)
      html = &quot;&quot;
      categories = context.registers[:site].categories.keys
      categories.sort.each do |category|
        posts_in_category = context.registers[:site].categories[category].size
        category_dir = context.registers[:site].config['category_dir']
        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
        html &lt;&lt; &quot;&lt;li class='category'&gt;&lt;a href='http://Bigcircle.github.com/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n&quot;
      end
      html
    end
  end
end

Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)</code></pre></noscript></div>

<ul>
  <li> 更改配置 _config.yml</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span class="l-Scalar-Plain">default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">asides/category_list.html</span><span class="p-Indicator">,</span> <span class="nv">asides/recent_posts.html</span><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>同时把侧边栏默认显示在最下面，保留可以在侧面打开的功能，页面布局看起来就简单多了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac设置goagent开机自启动]]></title>
    <link href="http://Bigcircle.github.com/blog/start-goagent-automatically-when-boot-in-mac.html/"/>
    <updated>2012-08-25T12:19:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/start-goagent-automatically-when-boot-in-mac</id>
    <content type="html"><![CDATA[<p>每次开机都得手动开启goagent，首先打开iTerm再输入，虽然平时很多时间都在跟终端打交道，也定义了快捷键go简单输入，但还是觉得麻烦，占了一个标签页不说，还时不时掉线，这个就无法忍了    <br />
搜索了下自动开启的方法，都是一些 linux 下的方法，比如说这两篇关键字靠前的</p>

<!--more-->

<ul>
  <li><a href="http://keating.iteye.com/blog/1463521">开机自动启动GoAgent</a></li>
  <li><a href="http://adelzhang.blogspot.com/2011/10/ubuntugoagent.html">ubuntu下goagent开机自启动</a></li>
</ul>

<p>用linux的同学可以参考下，对症下药，应该问题不大，不过这些方法在Mac下用不了，启动文件存放位置方法和linux还是有所不同的，那么有没有在Mac下自启动的简单方法呢，答案当然是有的，过程也不复杂                                   <br />
用过 <a href="http://mxcl.github.com/homebrew/">Homebrew</a> (Mac下的一个包管理器) 的同学都会觉得这个工具很方便，相当于linux上的apt-get和yum，方便大家下载安装各种需要很多依赖的东西，可能有时候依赖包还不是很完善，但是差不多已经取代Macports成为Mac上最好用的包管理器了，没有用的建议装一个(和port只能2选1)</p>

<p>如果你安装过mysql/mongo这类可以有开机启动项的软件，在安装完之后会有一大堆提示，比如这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">To</span> <span class="n">launch</span> <span class="n">on</span> <span class="n">startup</span><span class="o">:</span>
</span><span class="line"><span class="o">*</span> <span class="k">if</span> <span class="n">this</span> <span class="n">is</span> <span class="n">your</span> <span class="n">first</span> <span class="n">install</span><span class="o">:</span>
</span><span class="line"><span class="n">mkdir</span> <span class="o">-</span><span class="n">p</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span>
</span><span class="line"><span class="n">cp</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">Cellar</span><span class="o">/</span><span class="n">mysql</span><span class="o">/</span><span class="mf">5.5.25</span><span class="n">a</span><span class="o">/</span><span class="n">homebrew</span><span class="p">.</span><span class="n">mxcl</span><span class="p">.</span><span class="n">mysql</span><span class="p">.</span><span class="n">plist</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span><span class="o">/</span>
</span><span class="line"><span class="n">launchctl</span> <span class="n">load</span> <span class="o">-</span><span class="n">w</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span><span class="o">/</span><span class="n">homebrew</span><span class="p">.</span><span class="n">mxcl</span><span class="p">.</span><span class="n">mysql</span><span class="p">.</span><span class="n">plist</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="k">if</span> <span class="n">this</span> <span class="n">is</span> <span class="n">an</span> <span class="n">upgrade</span> <span class="n">and</span> <span class="n">you</span> <span class="n">already</span> <span class="n">have</span> <span class="n">the</span> <span class="n">homebrew</span><span class="p">.</span><span class="n">mxcl</span><span class="p">.</span><span class="n">mysql</span><span class="p">.</span><span class="n">plist</span> <span class="n">loaded</span><span class="o">:</span>
</span><span class="line"><span class="n">launchctl</span> <span class="n">unload</span> <span class="o">-</span><span class="n">w</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span><span class="o">/</span><span class="n">homebrew</span><span class="p">.</span><span class="n">mxcl</span><span class="p">.</span><span class="n">mysql</span><span class="p">.</span><span class="n">plist</span>
</span><span class="line"><span class="n">cp</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">Cellar</span><span class="o">/</span><span class="n">mysql</span><span class="o">/</span><span class="mf">5.5.25</span><span class="n">a</span><span class="o">/</span><span class="n">homebrew</span><span class="p">.</span><span class="n">mxcl</span><span class="p">.</span><span class="n">mysql</span><span class="p">.</span><span class="n">plist</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span><span class="o">/</span>
</span><span class="line"><span class="n">launchctl</span> <span class="n">load</span> <span class="o">-</span><span class="n">w</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span><span class="o">/</span><span class="n">homebrew</span><span class="p">.</span><span class="n">mxcl</span><span class="p">.</span><span class="n">mysql</span><span class="p">.</span><span class="n">plist</span>
</span><span class="line">
</span><span class="line"><span class="n">You</span> <span class="n">may</span> <span class="n">also</span> <span class="n">need</span> <span class="n">to</span> <span class="n">edit</span> <span class="n">the</span> <span class="n">plist</span> <span class="n">to</span> <span class="n">use</span> <span class="n">the</span> <span class="n">correct</span> <span class="s">&quot;UserName&quot;</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个就是提示你怎么设置开机启动，brew已经预先把启动文件都写好了，你只需要copy过去，设置启动就Ok了。~/Library/LaunchAgents 下存放用户登陆之后的启动服务，具体补课可以参考 <a href="http://kenwublog.com/mac-os-launchd-tuning">这篇</a>  <br />
有人做了个dmg包和goagent源码配合使用，把那个app设置为开机启动也很方便，位于 <code>系统偏好设置 &gt; 用户与群组 &gt; 登陆项</code> 参考 <a href="http://dharmasong.net/2011/11/449.html">这</a>，这个应该是不爱折腾的最简单的方法</p>

<p>下面开始小折腾的方法，也很简单</p>

<ul>
  <li>新建一个plist文件，比如说叫 com.google.goagent.plist，输入以下内容</li>
</ul>

<div><script src="https://gist.github.com/3461688.js?file=com.google.goagent.plist"></script>
<noscript><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;dict&gt;
  &lt;key&gt;Label&lt;/key&gt;
  &lt;string&gt;com.google.goagent&lt;/string&gt;
  &lt;key&gt;ProgramArguments&lt;/key&gt;
  &lt;array&gt;
    &lt;string&gt;/usr/local/python&lt;/string&gt;
    &lt;string&gt;/Users/yourname/goagent/local/proxy.py&lt;/string&gt;
  &lt;/array&gt;
  &lt;key&gt;RunAtLoad&lt;/key&gt;
  &lt;true/&gt;
  &lt;key&gt;KeepAlive&lt;/key&gt;
  &lt;true/&gt;
  &lt;UserName&gt;dayuan&lt;/UserName&gt;
  &lt;key&gt;WorkingDirectory&lt;/key&gt;
  &lt;string&gt;/Users/yourname/goagent/local&lt;/string&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</code></pre></noscript></div>

<p>代码很简单，书写要规范。设置RunAtLoad和KeepAlive为true，试用了一天感觉良好</p>

<ul>
  <li>接下来敲几个字就over了</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">cp</span> <span class="n">com</span><span class="p">.</span><span class="n">google</span><span class="p">.</span><span class="n">goagent</span><span class="p">.</span><span class="n">plist</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span>
</span><span class="line"><span class="n">launchctl</span> <span class="n">load</span> <span class="o">-</span><span class="n">w</span> <span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">LaunchAgents</span><span class="o">/</span><span class="n">com</span><span class="p">.</span><span class="n">google</span><span class="p">.</span><span class="n">goagent</span><span class="p">.</span><span class="n">plist</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样下次开机的时候goagent就已经自动启动了，总结起来就是三步: <br />
写一个启动文件 —— copy到对应目录 —— 设为启动</p>

<p>默认开启8087端口</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">lsof</span> <span class="o">-</span><span class="n">i</span><span class="o">:</span><span class="mi">8087</span>
</span><span class="line"><span class="n">Python</span> <span class="n">xxxxxx</span> <span class="n">TCP</span> <span class="n">localhost</span><span class="o">:</span><span class="mi">8087</span> <span class="p">(</span><span class="n">LISTEN</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>用Chrome或者Firefox用proxy switch已经配置好的同学可以直接打开敏感词测试啦</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[集中注意力]]></title>
    <link href="http://Bigcircle.github.com/blog/how-to-focus-your-attention.html/"/>
    <updated>2012-08-23T10:20:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/how-to-focus-your-attention</id>
    <content type="html"><![CDATA[<p>今天一早来上班还是跟往常一样，打开一大堆该看要看想看的东西，不知不觉半个小时过去了，都没注意一眨眼就10点了。好吧，开始码代码啦，敲了会又不自觉切到Chrome看看，QQ不时跳出个信息，刚集中的注意力一下突然感觉又没了，这种感觉自从开始工作就一直困扰着我，为什么工作时这么难去集中注意力呢，我想这可能跟大学几年养成的不好的习惯有关，很少有激情去做一件事，也很少集中注意力在一件事情上(除了WoW)，这也就造成了目前这种不好的局面
<!--more--></p>

<p>于是打开万能的Google大婶，搜索敏感词，找到一大堆相应答案，针对自己的情况，相应总结下，也作为以后工作的准则，让每天时间花的稍微充实先，自勉！！</p>

<p><strong>排除干扰：</strong> 很多时候都会被各种提醒打断，看到新奇的Blog也会不自觉的多看一会，以后工作时间除了休闲一律关掉QQ(有单独的信息手机会提示)，这样以前用的很多调出信息这个动作就几乎退出快捷键了。看网页即看即关，尽量少出现以前同时开30+网页的情况，迅速回到工作状态</p>

<p><strong>明确目标：</strong> 很多时候做着做着就不知道该做什么了，不自觉就切到Chrome上了，以后开始时都预先在笔记本上确定今天任务是什么，包括工作完成后应该加的学习任务，趁现在学习热情高昂多学点</p>

<p><strong>规划时间：</strong> 确定完任务目标之后评估下大概完成时间，一个存在于意识中的时限能忘记琐碎的小事从而提升工作速度，同时也可避免拖延和耽搁，也有利于合理规划工作安排</p>

<p><strong>多看窗外：</strong> 这一年最大的问题就是视力下降严重，虽然还是不需要戴眼镜，但是感觉到眼睛比以前特别容易疲劳，眼中的小黑点也不时转悠。刚好公司又是很大的落地窗，可以很方便地眺望近处和远方的高楼大厦。。(被包围，没办法)，让眼睛可以从液晶屏的围剿中舒缓一会</p>

<p><strong>多运动：</strong> 上大学后就很少运动了，估计目前身体已经连亚健康都不如了，饱满的精神需要充沛的体能，健康的身体做支撑，以前在这方面做的太少了，虽然时常也经常想多运动运动，但是一到行动就懒得不行，现在床上还依然摆着一堆N长时间没洗的衣服。。懒是个大问题</p>

<p>其实就是一个习惯的培养过程，好的习惯对于生活和工作都是很有好处</p>

<p>培养习惯，从今天开始，从现在开始。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac升级内存手记，高清大图(12P)]]></title>
    <link href="http://Bigcircle.github.com/blog/modify-mac-to-8g-memory.html/"/>
    <updated>2012-08-21T20:58:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/modify-mac-to-8g-memory</id>
    <content type="html"><![CDATA[<p>月初新入手Mac 2012新款 <a href="http://store.apple.com/cn/browse/home/shop_mac/family/macbook_pro/select">MD103</a> 作为未来N年主力开发机，虽说新版 Retina 屏是极好的，无奈同时极好的价格，还是下次吧。(可恨的同学在第二天就入手了视网膜版，羡慕嫉妒恨啊！)<br />
主要是已经习惯Mac开发的便捷和Linux各种不爽，同时也就省了系统层面的瞎折腾，关于Mac的好处，小总结了下，有以下几点
<!--more--></p>

<ul>
  <li>系统牛X，Unix 内核，环境易搭，工具丰富 ，稳定性安全性高，开发首选</li>
  <li>外形拉轰，think different 理念，适合与众不同的人。。</li>
  <li>操作快捷，内置各种快捷键，借助 Alfred / QuickSilver 可以做到全盘快捷键</li>
  <li>装软件方便，很多dmg包打开即用，win7下很多常用软件都有原装品/替代品 </li>
  <li>待机时间长，广告号称7小时，虽说目前Mountain Lion在待机方面可能比预期的短点，但4～5个小时还是没有问题的，相对于普通pc的2个小时强太多了，相信下个补丁应该能在待机时间方面优化优化</li>
  <li>用很长时间不用重装系统，也没有处理磁盘碎片的烦恼，不用时盖上盖即可，一个月不关机是常事</li>
</ul>

<p>当然缺点也是有的，特别是对于已经习惯windows的同学来说，这里就不罗列啦。。</p>

<p>标配的内存才4G，根据一年开发经验来说肯定是不够用的，Chrome多开几个网页，终端运行几个差不多就满了，要是用Xcode这类巨占内存的东西那就什么都别开了，所以说升到8G刻不容缓。。当然16G必须是极好的，但是价格要贵很多，想想8G怎么也够了，还是一切从简吧。</p>

<p>先来张全景图，刚开包</p>

<p><img src="http://m3.img.libdd.com/farm5/90/8B1399A8265164466811344338418D5A_1280_960.jpg" alt="" /></p>

<p>内存条 4G*2 ,三星金条，据说兼容性最好，双通道的优势比 8G＊1 要好，不过差距不大，各种电商均有售，我是在京东上买的，主要是可以送到家门口。。。懒。。</p>

<p><img src="http://m2.img.libdd.com/farm5/173/50E3E8D65DCAAEB6D4B9FC5A2A6302AD_1280_960.jpg" alt="" /></p>

<p>拆机工具，45＊1 , pro 的是ph000 ,剩下的可以拆拆 iphone 什么的。。淘宝有售</p>

<p><img src="http://m3.img.libdd.com/farm4/193/4A44B3C6119B728FB8C0C0D36A1B5CC1_1280_960.jpg" alt="" /></p>

<p>开拆。背面一大踹各种认证标明不是国行，买的港版，显示 Assembled in China, 比国行便宜2k+</p>

<p><img src="http://m3.img.libdd.com/farm5/124/2FCF6C74233D9BBF6D7F5399A2CA587C_1280_960.jpg" alt="" /></p>

<p>全景图 光驱，硬盘，电池，主板，风扇，散热设计主要在尾部和键盘(键盘表面也是散热之一，所以键盘感觉到热很正常)</p>

<p><img src="http://m2.img.libdd.com/farm5/138/769D5738C7518F51008FF24EE6BD448A_1280_960.jpg" alt="" /></p>

<p>主板来张特写，精密仪器啊，密密麻麻</p>

<p><img src="http://m1.img.libdd.com/farm4/24/B1CA8203D0000DA2FEFF8F8BC7DB3B18_1280_960.jpg" alt="" /></p>

<p>拆下来的原装内存 现代牌 2G*2</p>

<p><img src="http://m1.img.libdd.com/farm5/31/BC98EDCE869C1939C46F8718487CF01F_1280_960.jpg" alt="" /></p>

<p>三星和原装对比，短了一截，当时有点吓着了，内存包装都拆了，退货都没得退。
好在除了个头不一样，规格还算一样的，插还是可以插进去的，只是比大块头费点劲</p>

<p><img src="http://m1.img.libdd.com/farm5/216/BFC0726FC23BFCDCFFABFFEE891643D8_1280_960.jpg" alt="" /></p>

<p>插完之后的特写，稍微短了一点，不过无伤大雅</p>

<p><img src="http://m3.img.libdd.com/farm4/196/F4B2D58192AD8453E14C8D2DD8A13CC4_1280_960.jpg" alt="" /></p>

<p>再次开机，显示为8G内存，证明兼容性尚可，没问题</p>

<p><img src="http://m3.img.libdd.com/farm5/197/D96443C0F518BDF817B178BC4AB9F4C5_586_268.PNG" alt="" /></p>

<p>最后来张 Logo和键盘照</p>

<p><img src="http://m1.img.libdd.com/farm5/215/31861739FCDD63D99B1DBCAC7EE8EBD7_1280_960.jpg" alt="" />
<img src="http://m3.img.libdd.com/farm4/72/2F8D4889C36D8B995B93E10654F95D48_1280_960.jpg" alt="" /></p>

<hr />

<p>本来准备同时把光驱拆了装个128G SSD，但是又要1K大洋，暂时对速度上也没有多大追求，还是等有钱了再折腾吧，有在帝都的同学想借工具可以联系我，免费借用加拆机指导哦。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给github page绑定域名]]></title>
    <link href="http://Bigcircle.github.com/blog/bind-domain-with-github-page.html/"/>
    <updated>2012-08-20T16:26:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/bind-domain-with-github-page</id>
    <content type="html"><![CDATA[<p>今天突然感觉写点东西应该有个小域名，刚好github page的域名绑定服务so easy，遂去买了个绑上。
域名基本上大家都推荐<a href="http://www.godaddy.com">Godaddy</a> or <a href="http://www.name.com">Name</a>，大厂商牌子响。有碍于 Godaddy 繁琐的购买流程，决定还是去Name买，省心省事，过程也不是很麻烦</p>

<h5 id="section">大概流程如下：</h5>
<!-- more -->
<ul>
  <li>注册Name账户，可以用google授权登陆，登陆之后会给你发封邮件告知登陆账户(gmail邮箱)和密码</li>
  <li>挑选自己心仪的域名，购买多少就看自己钱包了，差不多了到 checkout 页面准备结算</li>
  <li>可以用paypal或者直接用支持visa/mastercard的双币信用卡支付。我是现申请的paypal账号，绑定自己的招行信用卡。(招行信用卡各种好用，强烈推荐去办张2W额度的!!当然我的额度只有5k,不过支付十几美金还是可以的)，没有申请的同学网上申请的例子一大把，不要怕弄错了，其实过程很简单</li>
  <li>申请好paypal，绑定完信用卡之后回到刚才的checkout页面，如果没有手抖多点了几个域名就可以支付了，选择paypal选项，要求输入基本信息，输入之，会跳转到paypal页面，又是验证信息，正确输入。(注意:扣钱是不需要你输入信用卡密码的，所以在支付之前一定要确认好)</li>
  <li>确认完了就会自动扣款，马上手机短信就来了，扣钱很是快捷，这样你想要的域名就到手了。</li>
</ul>

<p>接下来就是解析DNS到自己的github page上</p>

<ul>
  <li>进入 Name 账户 « account « your domain « DNS Record Management . 账户设置里面右边有一大堆选择框，选择这个进入就会看到一个添加 Record Type的下拉框，默认就是A，继续把 github page ip写到 Record Answer 里面，Add Record，其他都不用填，这部分OK啦</li>
  <li>在项目代码下/source目录下创建CNAME文件，添入刚注册的域名，push到github上，静候DNS生效，差不多十几分钟就OK了</li>
</ul>

<p>本来想贴几张图的，但是懒病又犯了。好在过程比较简单，图暂省</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[免去sudo时输入密码]]></title>
    <link href="http://Bigcircle.github.com/blog/use-sudo-without-password.html/"/>
    <updated>2012-08-20T14:16:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/use-sudo-without-password</id>
    <content type="html"><![CDATA[<p>经常敲命令的同学肯定会遇到需要root权限的问题，为了安全考虑大部分情况下千万不要在root权限下操作，否则会遇到各种难缠的问题，sudo 就是为解决这个问题产生的。</p>

<h3 id="section">为什么不想敲密码</h3>
<!-- more -->
<ul>
  <li>程序员往往都是很懒的，很多代码的产生就是为了方便懒惰的程序员</li>
  <li>输入密码很麻烦，很费时。(好吧，其实也花不了多长时间。。)</li>
  <li>能方便设置一些启动项，特别是一个项目启动项很多，为了懒就写一个启动脚本</li>
  <li>自己的系统自己用，没必要像在服务器上对权限要求那么严格</li>
  <li>当然也有忘记root密码的情况。。</li>
</ul>

<h3 id="section-1">怎么做</h3>
<p>其实很简单，只需要小修改 /etc/sudoers 这个文件就可以了。
默认情况的权限是这样的</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">root <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span> ALL
</span><span class="line">%admin <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span> ALL
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>意思是root用户和admin群组的用户都能执行所有命令，当然也是需要输入password的
修改如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 修改amdin组都不用输入密码</span>
</span><span class="line">%admin <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span> NOPASSWD: NOPASSWD ALL
</span><span class="line"><span class="c"># 只是想让 marine 用户输入sudo不需要密码</span>
</span><span class="line">marine <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span> NOPASSWD: ALL
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当然可定制丰富的权限要求，不过那样还不如不设置，统一要求输入密码得了。</p>

<h3 id="section-2">一个好用的小技巧</h3>
<p>有时候当我们输入了一大串命令后敲下去发现需要写sudo，这个时候不得不找回上个命令，然后回到命令开头，然后加上sudo空格，稍微有点麻烦，可以用以下2个小方法</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># !! 表示上次执行的命令</span>
</span><span class="line">sudo !!
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>或者用zsh的同学可以自定义个命令绑定快捷键，比如这样:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo-command-line<span class="o">()</span> <span class="o">{</span>
</span><span class="line">  <span class="o">[[</span> -z <span class="nv">$BUFFER</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> zle up-history
</span><span class="line">  <span class="o">[[</span> <span class="nv">$BUFFER</span> !<span class="o">=</span> sudo<span class="se">\ </span>* <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nv">BUFFER</span><span class="o">=</span><span class="s2">&quot;sudo $BUFFER&quot;</span>
</span><span class="line">    zle end-of-line
</span><span class="line"><span class="o">}</span>
</span><span class="line">zle -N sudo-command-line
</span><span class="line">bindkey <span class="s2">&quot;\e\e&quot;</span> sudo-command-line
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>定义快捷键: 连续按2个ESC自动在前面添加sudo，非常方便快捷</p>

<p>前段时间看了个介绍 <a href="http://www.commandlinefu.com/commands/browse/sort-by-votes">linux命令的网站</a>，有很多实用方便的快捷键，大家有兴趣可以去淘几个</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初识Octopress]]></title>
    <link href="http://Bigcircle.github.com/blog/chu-shi-octopress.html/"/>
    <updated>2012-08-16T00:37:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/chu-shi-octopress</id>
    <content type="html"><![CDATA[<p>其实久仰 Octopress 大名已久，只是一直懒得弄，最近找工作顺便搭个 Blog 开始写点所学所想。
折腾了下 Jekyll，也是需要自己去折腾主题，先拿 Octopress 用着，等什么时候闲点再把主题修修</p>

<h3 id="octopress">octopress</h3>
<!-- more -->

<p>基于 Jekyll 和 github-page 的一套静态 blog 系统，可以通过 theme/plugin 定制自己喜欢的功能/样式，采用markdown编写，让写作从此简单。深受各大DS欢迎，也是伸手党的最爱，当然也为我等小折腾提供了便利，不用再考虑什么托管，样式，域名等一大堆繁琐的东西。下面把这次配置过程简单总结下，也为可能需要的朋友提供下指引，都是重复造轮子，就看大家喜欢哪款了。</p>

<h6 id="rvm--ruby">安装 rvm &amp; ruby</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">curl -L https://get.rvm.io | bash -s stable
</span><span class="line"><span class="c"># 我用的 zsh ,根据自身情况换成 .bash_profile</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;</span>
</span><span class="line"><span class="s2"># RVM</span>
</span><span class="line"><span class="s2">[[ -s &#39;/Users/`whoami`/.rvm/scripts/rvm&#39; ]] &amp;&amp; source &#39;/Users/`whoami`/.rvm/scripts/rvm&#39;</span>
</span><span class="line"><span class="s2">[[ -s &#39;$HOME/.rvm/scripts/rvm&#39; ]] &amp;&amp; . &#39;$HOME/.rvm/scripts/rvm&quot;</span> &gt;&gt; ~/.zshrc
</span><span class="line"><span class="nb">source</span> ~/.zshrc				<span class="c"># 使刚才配置生效</span>
</span><span class="line">rvm install 1.9.3
</span><span class="line">rvm use 1.9.3 --default			<span class="c"># rvm安装1.9.3版本ruby，并默认使用该版本</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="octopress-">复制 Octopress 到本地</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">git clone git clone git://github.com/imathis/octopress.git myblog
</span><span class="line"><span class="nb">cd </span>myblog
</span><span class="line">bundle install				<span class="c"># 安装所需 gem</span>
</span><span class="line">rake install				<span class="c"># 安装默认主题</span>
</span><span class="line">rake preview				<span class="c"># 本地预览, http://localhost:4000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="github">部署到 github</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">rake setup_github_pages
</span><span class="line"><span class="c"># 按提示输入 github 上对应仓库，注意替换 your_name，此时会建立一个 origin 远程仓库，对应你项目目录下的 master 分支</span>
</span><span class="line">git@github.com:your_username/your_username.github.com.git
</span><span class="line">rake generate				<span class="c"># 将所有内容生成静态文件</span>
</span><span class="line">rake deploy 				<span class="c"># 部署到github上</span>
</span><span class="line">
</span><span class="line"><span class="c"># 创建 source 分支 用于保存作文和配置文件</span>
</span><span class="line">git add .
</span><span class="line">git commit -m <span class="s1">&#39;create source branch&#39;</span>
</span><span class="line">git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>OK，到此大概流程差不多就这样了，大家可能会遇到各种问题，这个时候 Google娘 就是你最好的帮手了。
不知不觉已经夜深人静了，明天把 Disqus 加上就可以留个小言啦。</p>

]]></content>
  </entry>
  
</feed>
