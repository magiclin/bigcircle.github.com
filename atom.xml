<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hi, I’m dayuan]]></title>
  <link href="http://Bigcircle.github.com/atom.xml" rel="self"/>
  <link href="http://Bigcircle.github.com/"/>
  <updated>2013-01-03T17:13:35+08:00</updated>
  <id>http://Bigcircle.github.com/</id>
  <author>
    <name><![CDATA[bigcircle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用ruby 构建 api 之 grape]]></title>
    <link href="http://Bigcircle.github.com/blog/yong-ruby-gou-jian-api-1.html/"/>
    <updated>2013-01-03T17:08:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/yong-ruby-gou-jian-api-1</id>
    <content type="html"><![CDATA[<p>这几天看几篇文章介绍api的好处，刚好api也是我们业务中一块很重要的部分</p>

<p>— 参考
1. <a href="http://www.ctocio.com/ccnews/3512.html">为什么所有企业都需要API</a>
2. <a href="http://tech2ipo.com/56814">API利无穷，公司都该提供</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的2012]]></title>
    <link href="http://Bigcircle.github.com/blog/wo-de-2012.html/"/>
    <updated>2012-12-31T22:44:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/wo-de-2012</id>
    <content type="html"><![CDATA[<p>安全度过世界末日，又到一年总结时，马上就要跨年了，就把总结留在2012吧</p>

<p>去年，世界局势风云变换，不过都跟我没多大关系，虽然按照蝴蝶效应来说，可能是我不经意间的一个屁助推奥巴马连任美国总统，左右了世界局势。   <br />
去年，换了一个新地方，换了一份新工作，换了一套新装备，换了一批新朋友，换了一种新生活。
<!--more--></p>

<p>离开待了5年的天津，离开了毕业之后的第一家公司，虽然并非我愿。可能真的是不喜欢压抑的环境，不喜欢寂静的周边，不喜欢志趣不同的人们，不过还是要感谢给了我机会的老大，感谢亦师亦友的宏哥，感谢推荐我的好同学攀哥，还有好小弟好基友普哥，让我在毕业后的第一份工作留下许多美好回忆。每个人都会对未来充满恐惧，这是一种对生活的惰性，如果不能勇敢的迈出去，可能就会被生活困定在原地，不过当时做出离开的决定的时候，似乎并没有这种恐惧，更多的是一种自由，瞬间感觉轻松了很多。现在回想起来应该感谢那份续约，让我能做出一些改变，恰巧是这些改变，给未来带来了更多积极的变化。</p>

<p>来到了一直向往的北京，虽然和天津隔的很近，上学时候也来了不下十几次，但是真正融入这个城市的生活还是和游玩时的感受完全不一样。以前总感觉北京到处都是风景名胜，交通方便，待遇不错，生活舒适，待一段时间之后就变成了林立的大厦，拥挤的人群，高昂的消费和单调的生活，似乎和在天津差别不大，身边的人也不是想向中的全国的人才都集中到了北京的那种，也有很多混日子的，不思进取的，得过且过的，不过那是他们的人生，不是我能左右得了的，希望他们过得好。</p>

<p>花重金打造了自己的工作平台(其实也就买了台macbook和一个filco的机械键盘及各种周边败家的东西)，毕竟在mac下工作了一年时间，已经非常喜欢这种unix编程环境和mac系统各种简洁便利的开发工具，工欲善其事，必先利其器嘛，作为一个专业码农，这点投入还是很值得的。接着开始找工作，由于自己平时爱倒腾，接触到的知识比较多，又深入学习了下ruby元编程，所以面试都很顺利，短时间就拿到了4个offer，但后来接到csdn面试通知，本来以为面的挺好的，但是很长时间没有通知我情况到底怎么样，期间给我offer的公司陆续要求给答复，由于当时想进一个大点的公司，做的时间长一点，就把这几个都推了，后来又被csdn通知说很遗憾balabala，可能觉得我缺少经验同时不会php(因为一个php系统需要用rails改写)，前后浪费了一个多月的时间。接着就来到了现在这家公司，公司规模虽然不大，但是技术部有个牛人坐台，虽然只比我大2岁，差距远不止2年，从初中就开始玩电脑的人伤不起啊。一个人负责带领ios，andriod开发，同时兼作运维和后端api开发的工作，熟练或者精通以下语言：
o-c，java，python，ruby，erlang，lua，c，shell，lisp。看着这份榜单我就不说什么了，免得他看到会骄傲的。套用最近看的 facebook 出来的前华人技术经理王淮的话：只和牛人合作。虽然这很理想化，但是拒绝平庸, 不要屈就的态度还是蛮值得肯定的。</p>

<p>顺便吐槽下我们渣一样的大学计算机教育。c -&gt; c++ -&gt; java -&gt; c# 的语言选择和教学顺序，每门半年不到的教学时间，老师照本宣科的教学方式，培养流水线IT民工的教学理念，还有我们这些学生懒散的学习都态度(囧)，还都是在现在看起来无比坑的 windows 下进行的，试问这样的教育制度和方式下能出来几个有用或者说能用的学生，或许有人说你自己不好好学还怪教育制度，但是身为整个流水线上产生的产品，对于身边同学的能力素质还是有一个清晰的认识的，大家能力都不差，差的是自制力。可能又有人要唱反调了，说自己不控制自己，不努力学习怪谁，但问题是这个基数太庞大了，这种情况下只能从制度上去预防，去挽救，不然教出来的95%都是次品，那这种教育的意义何在呢。各种培训机构的火爆也从侧面印证了教育的失败，很多人出来之后还是什么都不会，而且基础薄弱，相当于在学校白浪费了4年宝贵的青春时光，一想到我那匆匆流逝的大学时光，就忍不住要Fxxk，对自己和这个可恶的制度。</p>

<p>2013年的太阳几个小时后就要升起来了(不知道会不会下雪。。)，新的一年里，有很多这半年没有实现的目标需要去实现，还有一些新的目标，大概有以下几个方面，记下作为以后的参照：</p>

<ol>
  <li>系统学习下 Rails 源码，争取能全部看懂，同时写一个 owning my rails</li>
  <li>开始参与一些开源项目，在没有弄出比较NB的项目之前先积极参与</li>
  <li>多参加一些社区的活动，帮助新手更快入门ruby</li>
  <li>至少再学2门语言，开阔下视野，理解下不同语言下的各种编程模式</li>
  <li>多锻炼，不然过几年身体没法看了</li>
</ol>

<p>最后说一下感情生活…………</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修改 GC 参数提高 Ruby 性能]]></title>
    <link href="http://Bigcircle.github.com/blog/improve-ruby-performance.html/"/>
    <updated>2012-11-15T15:50:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/improve-ruby-performance</id>
    <content type="html"><![CDATA[<p>最近看到有人提到最新的 ruby-patch 对性能有个很大的优化，不知是真是假，参考了老外一篇对 rvm 升级的<a href="http://astrails.com/blog/2012/11/13/rvm-install-patched-ruby-for-faster-rails-startup">介绍</a>，在本机上测试了下，感觉没什么大的变化，可能本机性能比生产环境要好很多，这点小的优化在单次测试中体现不出来，但在服务器上可能就有很大的性能提升。在此介绍下，希望能提供点帮助</p>

<ul>
  <li>更新 rvm 到最新版本获取最新的 patch</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rvm</span> <span class="n">get</span> <span class="n">head</span>
</span><span class="line"><span class="n">rvm</span> <span class="n">install</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span> <span class="o">--</span><span class="n">patch</span> <span class="n">falcon</span> <span class="o">-</span><span class="n">n</span> <span class="n">falcon</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->
<p>如果直接给 1.9.3 打补丁可能会爆 <code>Patch 'falcon' not found</code> 的错误，这是因为 falcon 补丁还没有支持到最新的 ruby 版本，需要在本地找到支持的最新版本</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">➜</span> <span class="n">ls</span> <span class="vg">$rvm_path</span><span class="o">/</span><span class="n">patches</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">/*/*</span><span class="n">falcon</span><span class="o">*</span> <span class="o">|</span> <span class="n">sort</span>
</span><span class="line"><span class="sr">/Users/</span><span class="n">dayuan</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">patches</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">/</span><span class="n">p0</span><span class="o">/</span><span class="n">falcon</span><span class="o">.</span><span class="n">patch</span>
</span><span class="line"><span class="sr">/Users/</span><span class="n">dayuan</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">patches</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">/</span><span class="n">p125</span><span class="o">/</span><span class="n">falcon</span><span class="o">.</span><span class="n">patch</span>
</span><span class="line"><span class="sr">/Users/</span><span class="n">dayuan</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">patches</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">/</span><span class="n">p194</span><span class="o">/</span><span class="n">falcon</span><span class="o">.</span><span class="n">diff</span>
</span><span class="line"><span class="sr">/Users/</span><span class="n">dayuan</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">patches</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">/</span><span class="n">p286</span><span class="o">/</span><span class="n">falcon</span><span class="o">.</span><span class="n">diff</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到最新的补丁支持到p286版本，刚好本地原装的就是这个版本</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">➜</span> <span class="n">rvm</span> <span class="n">install</span> <span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p286</span> <span class="o">--</span><span class="n">patch</span> <span class="n">falcon</span> <span class="o">-</span><span class="n">n</span> <span class="n">falcon</span>
</span><span class="line"><span class="c1"># 安装完之后会重新编译一个ruby版本，而不是把原有版本覆盖</span>
</span><span class="line"><span class="err">➜</span> <span class="n">ls</span> <span class="o">~</span><span class="sr">/.rvm/</span><span class="n">rubies</span>
</span><span class="line"><span class="n">default</span> <span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">7</span><span class="o">-</span><span class="n">p370</span>  <span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span>  <span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p286</span><span class="o">-</span><span class="n">falcon</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>接着修改 GC 参数，添加到 .bashrc / .zshrc 中</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">export</span> <span class="no">RUBY_HEAP_MIN_SLOTS</span><span class="o">=</span><span class="mi">1000000</span>
</span><span class="line"><span class="n">export</span> <span class="no">RUBY_HEAP_FREE_MIN</span><span class="o">=</span><span class="mi">500000</span>
</span><span class="line"><span class="n">export</span> <span class="no">RUBY_HEAP_SLOTS_INCREMENT</span><span class="o">=</span><span class="mi">1000000</span>
</span><span class="line"><span class="n">export</span> <span class="no">RUBY_HEAP_SLOTS_GROWTH_FACTOR</span><span class="o">=</span><span class="mi">1</span>
</span><span class="line"><span class="n">export</span> <span class="no">RUBY_GC_MALLOC_LIMIT</span><span class="o">=</span><span class="mi">100000000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>GC参数设置，具体解释看 <a href="http://bbs.chinaunix.net/thread-3661069-1-1.html">这篇</a>，ruby 默认的GC参数都太小，上面的参数是 REE 官方建议的参数</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="no">RUBY_HEAP_MIN_SLOTS</span>             <span class="o">=&gt;</span> <span class="s1">&#39;初始堆大小，默认10000，越大需要占用的内存越多&#39;</span>
</span><span class="line">  <span class="no">RUBY_HEAP_FREE_MIN</span>              <span class="o">=&gt;</span> <span class="s1">&#39;GC后可用的heap slot的最小值，默认4096，如果太小，就会按照下面2个参数分配新栈&#39;</span>
</span><span class="line">  <span class="no">RUBY_HEAP_SLOTS_INCREMENT</span>       <span class="o">=&gt;</span> <span class="s1">&#39;当Ruby需要开辟一片新的堆栈所需的数，默认是10000&#39;</span>
</span><span class="line">  <span class="no">RUBY_HEAP_SLOTS_GROWTH_FACTOR</span>   <span class="o">=&gt;</span> <span class="s1">&#39;当ruby需要新的堆栈的时候， 此参数做为一个乘数被用来计算这片新的堆栈的大小&#39;</span>
</span><span class="line">  <span class="no">RUBY_GC_MALLOC_LIMIT</span>            <span class="o">=&gt;</span> <span class="s1">&#39;允许不触发GC而分配的C数据结构的最大值，默认8000000 byte，设置的太低就会触发垃圾回收&#39;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>看下 37single 和 twitter 的参数设置，差距上差不多</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="mi">37</span><span class="n">signals</span>
</span><span class="line"><span class="no">RUBY_HEAP_MIN_SLOTS</span><span class="o">=</span><span class="mi">600000</span>
</span><span class="line"><span class="no">RUBY_GC_MALLOC_LIMIT</span><span class="o">=</span><span class="mi">59000000</span>
</span><span class="line"><span class="no">RUBY_HEAP_FREE_MIN</span><span class="o">=</span><span class="mi">100000</span>
</span><span class="line">
</span><span class="line"><span class="n">twitter</span>
</span><span class="line"><span class="no">RUBY_HEAP_MIN_SLOTS</span><span class="o">=</span><span class="mi">500000</span>
</span><span class="line"><span class="no">RUBY_HEAP_SLOTS_INCREMENT</span><span class="o">=</span><span class="mi">250000</span>
</span><span class="line"><span class="no">RUBY_HEAP_SLOTS_GROWTH_FACTOR</span><span class="o">=</span><span class="mi">1</span>
</span><span class="line"><span class="no">RUBY_GC_MALLOC_LIMIT</span><span class="o">=</span><span class="mi">50000000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>接下来测试下执行情况</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rvm</span> <span class="n">use</span> <span class="n">default</span>
</span><span class="line"><span class="n">time</span> <span class="sb">`which rails`</span> <span class="n">runner</span> <span class="s2">&quot;puts :OK&quot;</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="sb">`which rails`</span> <span class="n">runner</span> <span class="s2">&quot;puts :OK&quot;</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">57</span><span class="n">s</span> <span class="n">user</span> <span class="mi">0</span><span class="o">.</span><span class="mo">04</span><span class="n">s</span> <span class="nb">system</span> <span class="mi">99</span><span class="o">%</span> <span class="n">cpu</span> <span class="mi">0</span><span class="o">.</span><span class="mi">610</span> <span class="n">total</span>
</span><span class="line">
</span><span class="line"><span class="n">rvm</span> <span class="n">use</span> <span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p286</span><span class="o">-</span><span class="n">falcon</span>
</span><span class="line"><span class="n">time</span> <span class="sb">`which rails`</span> <span class="n">runner</span> <span class="s2">&quot;puts :OK&quot;</span>
</span><span class="line"><span class="sb">`which rails`</span> <span class="n">runner</span> <span class="s2">&quot;puts :OK&quot;</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">14</span><span class="n">s</span> <span class="n">user</span> <span class="mi">0</span><span class="o">.</span><span class="mo">02</span><span class="n">s</span> <span class="nb">system</span> <span class="mi">98</span><span class="o">%</span> <span class="n">cpu</span> <span class="mi">0</span><span class="o">.</span><span class="mi">163</span> <span class="n">total</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到执行时间从 0.610s 到 0.163s 提升了300%。。。。虽然是毫秒级别的，但这个提示貌似有点凶猛，等什么时候修改到生产环境测试下是不是效率提示真的有这么大</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[服务器上搭建redis环境]]></title>
    <link href="http://Bigcircle.github.com/blog/setup-redis-on-server.html/"/>
    <updated>2012-11-13T16:19:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/setup-redis-on-server</id>
    <content type="html"><![CDATA[<p>在 Centos 上搭一个redis服务，本来准备直接 yum 安装，看了下攻略发现编译更简单，顺便可以自定义下配置文件，做下小笔记，以备后用</p>

<ul>
  <li>先去主页下个最新版本 http://redis.io/download</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">cd</span> <span class="sr">/usr/</span><span class="n">local</span> <span class="o">&amp;&amp;</span> <span class="n">wget</span> <span class="n">http</span><span class="ss">:/</span><span class="o">/</span><span class="n">redis</span><span class="o">.</span><span class="n">googlecode</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">files</span><span class="o">/</span><span class="n">redis</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
</span><span class="line"><span class="n">tar</span> <span class="n">zxvf</span> <span class="n">redis</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span> <span class="o">&amp;&amp;</span> <span class="n">cd</span> <span class="n">redis</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">4</span>
</span><span class="line"><span class="c1"># make 会把功能创建到 src 目录下，make install 会将几个服务命令copy到 /usr/local/bin下</span>
</span><span class="line"><span class="n">make</span> <span class="o">&amp;&amp;</span> <span class="n">make</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<ul>
  <li>自带工具</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># make install 之后会创建4个命令行公交</span>
</span><span class="line"><span class="n">redis</span><span class="o">-</span><span class="n">server</span> <span class="c1"># 顾名思义就是启动服务用的，一般后面应该跟上 path/to/redis.conf</span>
</span><span class="line"><span class="n">redis</span><span class="o">-</span><span class="n">cli</span>    <span class="c1"># 命令行操作工具,交互操作就靠这个了。据说可以用 telnet 根据其纯文本协议进行操作，没有试过</span>
</span><span class="line"><span class="n">redis</span><span class="o">-</span><span class="n">benchmark</span> <span class="c1"># redis性能测试，测试redis在你的系统及你的配置下的读写性能，启动redis服务器之后直接 redis-benchmark，会依次测试 GET SET INCR LPUSH 等操作的执行速度和每秒请求数</span>
</span><span class="line"><span class="n">redis</span><span class="o">-</span><span class="n">check</span><span class="o">-</span><span class="n">aof</span> <span class="c1"># 用于日志检查和恢复，检查 .aof 文件</span>
</span><span class="line"><span class="n">redis</span><span class="o">-</span><span class="n">check</span><span class="o">-</span><span class="n">dump</span> <span class="c1"># 用于redis数据文件检查，检查 .rdb 文件</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>查看是否正常安装</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">which</span> <span class="n">redis</span><span class="o">-</span><span class="n">server</span>
</span><span class="line"><span class="c1"># 或者启动服务，正常启动表示ok</span>
</span><span class="line"><span class="n">src</span><span class="o">/</span><span class="n">redis</span><span class="o">-</span><span class="n">server</span> <span class="n">redis</span><span class="o">.</span><span class="n">conf</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>修改配置文件</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">cp</span> <span class="n">redis</span><span class="o">.</span><span class="n">conf</span> <span class="sr">/etc/</span><span class="n">redis</span><span class="o">.</span><span class="n">conf</span>
</span><span class="line"><span class="c1"># 修改 daemonize 属性，以便启动时直接后台启动</span>
</span><span class="line"><span class="n">daemonize</span> <span class="n">yes</span>
</span><span class="line"><span class="c1"># 目前还没有涉及到参数优化，设置个后台就可以了。具体参数优化可以参考 </span>
</span><span class="line"><span class="c1"># http://simon-zzm.blog.163.com/blog/static/888095222011911478186/</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>创建启动服务</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># 自带的有一个 utils/install_server.sh 脚步创建启动服务，但是创建时会报错</span>
</span><span class="line"><span class="c1"># 看了下是176行创建链接的 update-rc.d 命令是ubuntu/debian中的，在 centos 中是没有的，</span>
</span><span class="line"><span class="c1"># 而且它创建的各种目录也不符合习惯，还是自己写</span>
</span><span class="line">
</span><span class="line"><span class="c1"># 创建db目录和log目录</span>
</span><span class="line"><span class="sr">/usr/s</span><span class="n">bin</span><span class="o">/</span><span class="n">useradd</span> <span class="n">redis</span>
</span><span class="line"><span class="n">mkdir</span> <span class="o">-</span><span class="nb">p</span> <span class="sr">/var/</span><span class="n">lib</span><span class="o">/</span><span class="n">redis</span>
</span><span class="line"><span class="n">mkdir</span> <span class="o">-</span><span class="nb">p</span> <span class="sr">/var/</span><span class="n">log</span><span class="o">/</span><span class="n">redis</span>
</span><span class="line"><span class="n">chown</span> <span class="n">redis</span><span class="o">.</span><span class="n">redis</span> <span class="sr">/var/</span><span class="n">lib</span><span class="o">/</span><span class="n">redis</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>创建启动脚本 /etc/init.d/redis</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">PATH</span><span class="o">=</span><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="ss">:/</span><span class="n">sbin</span><span class="ss">:/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="ss">:/</span><span class="n">bin</span>
</span><span class="line">
</span><span class="line"><span class="no">REDISPORT</span><span class="o">=</span><span class="mi">6379</span>
</span><span class="line"><span class="no">EXEC</span><span class="o">=</span><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">redis</span><span class="o">-</span><span class="n">server</span>
</span><span class="line"><span class="no">REDIS_CLI</span><span class="o">=</span><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">redis</span><span class="o">-</span><span class="n">cli</span>
</span><span class="line">
</span><span class="line"><span class="no">PIDFILE</span><span class="o">=</span><span class="sr">/var/</span><span class="n">run</span><span class="o">/</span><span class="n">redis</span><span class="o">.</span><span class="n">pid</span>
</span><span class="line"><span class="no">CONF</span><span class="o">=</span><span class="s2">&quot;/etc/redis.conf&quot;</span>
</span><span class="line">
</span><span class="line"><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> <span class="k">in</span>
</span><span class="line">    <span class="n">start</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span> <span class="o">[</span> <span class="o">-</span><span class="n">f</span> <span class="vg">$PIDFILE</span> <span class="o">]</span>
</span><span class="line">        <span class="k">then</span>
</span><span class="line">                <span class="n">echo</span> <span class="s2">&quot;$PIDFILE exists, process is already running or crashed&quot;</span>
</span><span class="line">        <span class="k">else</span>
</span><span class="line">                <span class="n">echo</span> <span class="s2">&quot;Starting Redis server...&quot;</span>
</span><span class="line">                <span class="vg">$EXEC</span> <span class="vg">$CONF</span>
</span><span class="line">        <span class="n">fi</span>
</span><span class="line">        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$?&quot;</span><span class="o">=</span><span class="s2">&quot;0&quot;</span> <span class="o">]</span>
</span><span class="line">        <span class="k">then</span>
</span><span class="line">              <span class="n">echo</span> <span class="s2">&quot;Redis is running...&quot;</span>
</span><span class="line">        <span class="n">fi</span>
</span><span class="line">        <span class="p">;;</span>
</span><span class="line">    <span class="n">stop</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="o">-</span><span class="n">f</span> <span class="vg">$PIDFILE</span> <span class="o">]</span>
</span><span class="line">        <span class="k">then</span>
</span><span class="line">                <span class="n">echo</span> <span class="s2">&quot;$PIDFILE does not exist, process is not running&quot;</span>
</span><span class="line">        <span class="k">else</span>
</span><span class="line">                <span class="no">PID</span><span class="o">=</span><span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="vg">$PIDFILE</span><span class="p">)</span>
</span><span class="line">                <span class="n">echo</span> <span class="s2">&quot;Stopping ...&quot;</span>
</span><span class="line">                <span class="vg">$REDIS_CLI</span> <span class="o">-</span><span class="nb">p</span> <span class="vg">$REDISPORT</span> <span class="no">SHUTDOWN</span>
</span><span class="line">                <span class="k">while</span> <span class="o">[</span> <span class="o">-</span><span class="n">x</span> <span class="err">$</span><span class="p">{</span><span class="no">PIDFILE</span><span class="p">}</span> <span class="o">]</span>
</span><span class="line">               <span class="k">do</span>
</span><span class="line">                    <span class="n">echo</span> <span class="s2">&quot;Waiting for Redis to shutdown ...&quot;</span>
</span><span class="line">                    <span class="nb">sleep</span> <span class="mi">1</span>
</span><span class="line">                <span class="n">done</span>
</span><span class="line">                <span class="n">echo</span> <span class="s2">&quot;Redis stopped&quot;</span>
</span><span class="line">        <span class="n">fi</span>
</span><span class="line">        <span class="p">;;</span>
</span><span class="line">   <span class="n">restart</span><span class="o">|</span><span class="n">force</span><span class="o">-</span><span class="n">reload</span><span class="p">)</span>
</span><span class="line">        <span class="err">$</span><span class="p">{</span><span class="mi">0</span><span class="p">}</span> <span class="n">stop</span>
</span><span class="line">        <span class="err">$</span><span class="p">{</span><span class="mi">0</span><span class="p">}</span> <span class="n">start</span>
</span><span class="line">        <span class="p">;;</span>
</span><span class="line">  <span class="o">*</span><span class="p">)</span>
</span><span class="line">    <span class="n">echo</span> <span class="s2">&quot;Usage: /etc/init.d/redis {start|stop|restart|force-reload}&quot;</span> <span class="o">&gt;&amp;</span><span class="mi">2</span>
</span><span class="line">        <span class="nb">exit</span> <span class="mi">1</span>
</span><span class="line"><span class="n">esac</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>添加可执行权限</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="sr">/etc/ini</span><span class="n">t</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">redis</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>开启服务就可以使用啦</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="sr">/etc/ini</span><span class="n">t</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">redis</span> <span class="n">start</span>
</span><span class="line">
</span><span class="line"><span class="c1"># 查看开启进程</span>
</span><span class="line"><span class="n">ps</span> <span class="n">aux</span> <span class="o">|</span> <span class="n">grep</span> <span class="o">-</span><span class="n">v</span> <span class="n">grep</span> <span class="o">|</span> <span class="n">grep</span> <span class="n">redis</span>
</span><span class="line">
</span><span class="line"><span class="c1"># 进入命令行执行操作</span>
</span><span class="line"><span class="n">redis</span><span class="o">-</span><span class="n">cli</span>
</span><span class="line"><span class="n">redis</span> <span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="n">set</span> <span class="n">a</span> <span class="n">b</span>
</span><span class="line"><span class="no">OK</span>
</span><span class="line"><span class="n">redis</span> <span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="n">get</span> <span class="n">a</span>
</span><span class="line"><span class="s2">&quot;b&quot;</span>
</span><span class="line"><span class="n">redis</span> <span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>关于 redis 的用法，已经有位好心人翻译了最新的 <a href="http://redis.readthedocs.org/en/latest/">redis-commands</a>，可以下载一份离线版本作为手头资料查看</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 sublime 修改远程文件]]></title>
    <link href="http://Bigcircle.github.com/blog/use-sublime-to-modify-remote-file.html/"/>
    <updated>2012-11-09T11:18:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/use-sublime-to-modify-remote-file</id>
    <content type="html"><![CDATA[<p>遇到个特殊情况，服务器不能用 git 同步代码，如果遇到 bug 需要及时修复，可能一次更改不完善，需要改了再改。一般情况下我们都是在本地修改测试OK之后更新到服务器，不能在本地修改的情况下我们只能在服务器上直接修改了，但是对于一个不是很习惯用vim同时又很习惯sublime的猿来说就很淡腾了</p>

<p>如果能用sublime直接修改服务器上代码就好了，以前textmate就有过这样的先例，rmate就是创造出来做这个的，好在sublime很多时间都可以把textmate的东西直接拿过来用，rmate也不例外</p>

<ul>
  <li>装一个叫 rsub 的插件，直接在 install package里面搜就有</li>
  <li>开启本地端口转发，rsub 默认的是 52698</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">ssh</span> <span class="o">-</span><span class="n">R</span> <span class="mi">52698</span><span class="o">:</span><span class="n">localhost</span><span class="o">:</span><span class="mi">52698</span> <span class="n">user</span><span class="err">@</span><span class="n">remote_domain</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!-- more -->
<ul>
  <li>或者在 .ssh/config 中加入</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">host</span> <span class="n">remote_domain</span>
</span><span class="line">  <span class="n">RemoteForward</span> <span class="mi">52698</span> <span class="mf">127.0.0.1</span><span class="o">:</span><span class="mi">52698</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>登陆服务器 ssh user@123.456.78.90，添加rmate脚本</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">curl</span> <span class="n">https</span><span class="o">:</span><span class="c1">//raw.github.com/aurora/rmate/master/rmate &gt; rmate</span>
</span><span class="line"><span class="n">sudo</span> <span class="n">mv</span> <span class="n">rmate</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span>
</span><span class="line"><span class="n">sudo</span> <span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">rmate</span>
</span><span class="line">
</span><span class="line"><span class="cp"># 在 ~/.bash_profile里面定义快捷键</span>
</span><span class="line"><span class="n">alias</span> <span class="n">sl</span><span class="o">=</span><span class="err">&#39;</span><span class="n">sudo</span> <span class="n">rmate</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我一般比较懒，会开启我使用的用户免sudo输入密码，自用服务器上能省则省。。。但是可能会有安全问题，使用要慎重。接着就可以在服务器上打开需要修改的文件</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">sl</span> <span class="n">your_file</span><span class="p">.</span><span class="n">xx</span>
</span><span class="line"><span class="cp"># 如果遇到只读文件，可以添加 -f 参数修改</span>
</span><span class="line"><span class="n">sl</span> <span class="o">-</span><span class="n">f</span> <span class="n">your_file</span><span class="p">.</span><span class="n">xx</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>但是这样只能在服务上打开一个文件到本地修改，修改完之后会自动同步到服务器上，和用 vim 修改的唯一区别就是可以使用本地的编辑器了。功能有限，不能提供目录树修改，只是为习惯编辑器的同学提供另一种选择而已。大家还是应该努力深入自觉勤奋地学习vim啊！！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个好玩的东东--终端输出cow]]></title>
    <link href="http://Bigcircle.github.com/blog/a-funny-command-line-tool.html/"/>
    <updated>2012-09-25T16:15:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/a-funny-command-line-tool</id>
    <content type="html"><![CDATA[<p>昨天看到 <a href="https://github.com/busyloop/lolcat">lolcat</a>，本以为是 cat 的一个增强版，美化下输出什么的，搜了下才发现居然是用 ruby 写的，看了下源码，原来实现也很简单。代码虽少，版本号可不能少，已经迭代到42了，看来作者更新很勤快啊，还有一说是 42是宇宙的答案，或许作者为了获取最终的答案。先看下效果图</p>

<p><img src="http://Bigcircle.github.com/images/2012-09-25/1.png" /></p>

<p>安装方法也很简单</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="n">fortune</span>
</span><span class="line"><span class="n">gem</span> <span class="n">install</span> <span class="n">cowsay</span> <span class="n">lolcat</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->
<p>其中 fotrune 负责随机生成一句话，cowsay 随机生成一个图像，lolcat 彩色打印
多试了几次发现生成的图像还挺多，于是好奇是怎么生成这些图像的，去 gem 里面看了下原来是预先定义了十九个图像，还以为真是随机生成的。。上面这个小恶魔的模板是</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">module</span> <span class="nn">Cowsay</span>
</span><span class="line">  <span class="k">module</span> <span class="nn">Character</span>
</span><span class="line">
</span><span class="line">    <span class="k">class</span> <span class="nc">Daemon</span> <span class="o">&lt;</span> <span class="no">Base</span>
</span><span class="line">      <span class="k">def</span> <span class="nf">template</span>
</span><span class="line">        <span class="o">&lt;&lt;-</span><span class="no">TEMPLATE</span>
</span><span class="line"><span class="sh">   #{@thoughts}         ,        ,</span>
</span><span class="line"><span class="sh">    #{@thoughts}       /(        )`</span>
</span><span class="line"><span class="sh">     #{@thoughts}      \\ \\___   / |</span>
</span><span class="line"><span class="sh">            /- _  `-/  &#39;</span>
</span><span class="line"><span class="sh">           (/\\/ \\ \\   /\\</span>
</span><span class="line"><span class="sh">           / /   | `    \\</span>
</span><span class="line"><span class="sh">           O O   ) /    |</span>
</span><span class="line"><span class="sh">           `-^--&#39;`&lt;     &#39;</span>
</span><span class="line"><span class="sh">          (_.)  _  )   /</span>
</span><span class="line"><span class="sh">           `.___/`    /</span>
</span><span class="line"><span class="sh">             `-----&#39; /</span>
</span><span class="line"><span class="sh">&lt;----.     __ / __   \\</span>
</span><span class="line"><span class="sh">&lt;----|====O)))==) \\) /====</span>
</span><span class="line"><span class="sh">&lt;----&#39;    `--&#39; `.__,&#39; \\</span>
</span><span class="line"><span class="sh">             |        |</span>
</span><span class="line"><span class="sh">              \\       /</span>
</span><span class="line"><span class="sh">        ______( (_  / \\______</span>
</span><span class="line"><span class="sh">      ,&#39;  ,-----&#39;   |        \\</span>
</span><span class="line"><span class="sh">      `--{__________)        \\/</span>
</span><span class="line"><span class="no">        TEMPLATE</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样只需要随机调用这些文件就可以生成样式了。再次启用谷歌娘查了下，原来这个灵感来自于 Linux 下的一个同名的东西叫做 cowsay / cowthink，下下来看下这个是怎么实现的</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="n">cowthink</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>cowthink 其实就是在 cowsay 基础上封装了下，所以看 cowsay 就可以了</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">cd</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="no">Cellar</span><span class="o">/</span><span class="n">cowsay</span><span class="o">/</span><span class="mi">3</span><span class="o">.</span><span class="mo">03</span><span class="o">/</span>
</span><span class="line"><span class="n">find</span> <span class="n">share</span><span class="o">/</span><span class="n">cows</span> <span class="o">-</span><span class="nb">name</span> <span class="s1">&#39;*.cow&#39;</span> <span class="o">|</span> <span class="n">wc</span> <span class="o">-</span><span class="n">l</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个实现方式也是一样，先预设一些 cow，再随机输出，只不过这里面的 cow 多点，有46个，感兴趣的可以看下这里面还有哪些 cow</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">cowsay</span> <span class="o">-</span><span class="n">h</span>
</span><span class="line"><span class="no">Usage</span><span class="p">:</span> <span class="n">cowsay</span> <span class="o">[-</span><span class="n">bdgpstwy</span><span class="o">]</span> <span class="o">[-</span><span class="n">h</span><span class="o">]</span> <span class="o">[-</span><span class="n">e</span> <span class="n">eyes</span><span class="o">]</span> <span class="o">[-</span><span class="n">f</span> <span class="n">cowfile</span><span class="o">]</span>
</span><span class="line">          <span class="o">[-</span><span class="n">l</span><span class="o">]</span> <span class="o">[-</span><span class="n">n</span><span class="o">]</span> <span class="o">[-</span><span class="n">T</span> <span class="n">tongue</span><span class="o">]</span> <span class="o">[-</span><span class="n">W</span> <span class="n">wrapcolumn</span><span class="o">]</span> <span class="o">[</span><span class="n">message</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">cowsay</span> <span class="o">-</span><span class="n">by</span> <span class="o">-</span><span class="n">f</span> <span class="n">daemon</span> <span class="s1">&#39;hello world&#39;</span> <span class="o">|</span> <span class="n">lolcat</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[增强触控板之 Jitouch]]></title>
    <link href="http://Bigcircle.github.com/blog/enhance-your-touchpad.html/"/>
    <updated>2012-09-16T20:23:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/enhance-your-touchpad</id>
    <content type="html"><![CDATA[<p>试用了几天触控板，各种感觉舒爽，难怪苹果会单独出了一个，虽然预设了很多快捷手势，但是物无完物，人的贪心总是不足的，有了就想要更多，希望能够自定义熟悉顺手的快捷键，好在触控板出来已经快2年了，肯定有人已经想到了这点，而且已经这么做了，目前有2款比较好用的软件可以设置，分别是 Jitouch  和 Better Touch Tool，以后看网页就可以单手操作了</p>

<h5 id="jitouch">Jitouch</h5>

<p>Jitouch 可以用来增强 Magic Mouse 和 Trackpad 的手势，据说对 MM 的手势识别率相当高，不过暂时没有 MM，估计也不会买 MM 的我来说就无所谓了，能够支持触控板就 OK 了。</p>

<p>默认已经设好了一些快捷手势，都挺不错的，功能如下：</p>

<p><img src="http://Bigcircle.github.com/images/2012-09-16/1.png" /></p>

<!--more-->

<ul>
  <li>一个手指固定，另一个手指点击，左边点击是前一个标签，右边点击是后一个标签</li>
  <li>一个手指固定，一个手指上下滑动，可以挪动当前文件，相当于系统默认的三个手指挪动</li>
  <li>一个手指固定，另两个手指往上划，打开刚才关闭的标签</li>
  <li>一个手指固定，另两个手指往下划，退出当前应用</li>
  <li>两个手指固定，左边手指点击，刷新当前标签</li>
  <li>三个手指轻拍拍，在新标签中打开链接</li>
  <li>四根手指向右划，关闭当前标签</li>
</ul>

<p>还有很多可以定义的手势和操作，不过我还没怎么发掘出好用的</p>

<p><img src="http://Bigcircle.github.com/images/2012-09-16/2.png" /></p>

<p>Jitouch 识别率还是挺高的，和触控板配合起来用起来还是很爽的，<a href="http://soft.macx.cn/3788.htm">破解</a> 一般人我不告诉他
Better Touch Tool 我下下来试了下感觉和 jitouch 差不多，设置不如 jitouch 方便，简单用了下就卸了，专一用好一个就足够了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新装备之 Flico & Trackpad]]></title>
    <link href="http://Bigcircle.github.com/blog/intro-flico-and-touchpad.html/"/>
    <updated>2012-09-15T16:16:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/intro-flico-and-touchpad</id>
    <content type="html"><![CDATA[<p>前段时间入手 Mac 的同时顺便买了套罗技的无线键鼠，的确很小巧便宜，但是手感却惨不忍睹，打字变成了负担而不是享受，同时由于已经非常习惯 Mac 触控板那如丝般顺滑的手感，但是用自带的触控板一天下来胳膊会很疼，很是伤手腕。接着加上同事的怂恿，遂决定入手机械键盘和触控板以解放双手。其实之前就已经有目标了，所以购买过程非常快，也只是在买和不买之间犹豫了两天，对于目前很穷的我来说是笔大开销。。</p>

<p>键盘肯定 HHKB 和 realforce 是当之无愧的王者，那个价钱也让看到的人望而却步；低端的国产键盘胜在便宜，性价比高，缺点是做工较差，手感比正规的 chery 和 flico 还是要差很多的，加上比较钟爱小巧型的键盘，右侧数字键对我来说基本上没有出场机会，所以最终决定买个折衷的 flico 圣手2代 87无冲茶轴。之所以不买青轴，大家也知道它是办公室杀手，会导致在同事那声望冷淡甚至仇恨，加上可能还有点游戏的需求，茶轴这种兼顾性的设计还是比较适合我的</p>

<p>两件套购买过程没用到10分钟，淘宝上也就那么几家，选了家 tmall 信誉高点且最近成交量比较大的卖家无交流直接拍下，卖家也在拍下后不到一个小时就发货了，速度还是很迅速的。触控板看了下价格都差不多，于是直接去 apple 官网买了个了事。剩下的就是短暂的等待了，基本上第二天下午就都从上海发到了北京，顺风的速度一向令人满意</p>

<p>从表面上它是无刻板</p>

<p><img src="http://m1.img.libdd.com/farm5/2012/0915/16/56C4E8FC9F566DE1631ADCF2B50B8357999FCE663682_1280_960.jpg" alt="" /></p>

<!-- more -->

<p>其实刻度在侧面，这样键帽正面就不用刻了，给你一个干净的键帽</p>

<p><img src="http://m2.img.libdd.com/farm4/2012/0915/16/FAD97012362B8EA0B3014C03A0E9EBA2BC2BEE663682_1280_960.jpg" alt="" /></p>

<p>很大的触控板，目测体积应该有自带触控板的两倍，手指可以很舒服的展开</p>

<p><img src="http://m1.img.libdd.com/farm5/2012/0915/16/593AABC45A0F925D64363AD05924F475B89E17663682_1280_960.jpg" alt="" /></p>

<p>一张大合影，键盘是放在电脑上的，桌子小没办法，舒展不开</p>

<p><img src="http://m2.img.libdd.com/farm4/2012/0915/16/00C081036C3194F366C0B1CB0E6860DA1CA063663682_1280_960.jpg" alt="" /></p>

<p>手感超垃圾的罗技无线，一分钱一分货，还有鼠标一定要买大的啊</p>

<p><img src="http://m3.img.libdd.com/farm4/2012/0915/16/878B9586D08317B84FF9825D7837AA78F8B20B663682_1280_960.jpg" alt="" /></p>

<p>夜用朦胧版</p>

<p><img src="http://m1.img.libdd.com/farm5/2012/0915/16/87406260537C70E3B3D74F3B2818E9674A2375663682_1280_960.jpg" alt="" /></p>

<p>貌似这个分辨率看起来有点淡淡的模糊感，木办法，渣摄影技术，不及陈老师万分之一，有待提高</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iterm2 快捷键介绍]]></title>
    <link href="http://Bigcircle.github.com/blog/iterm2-keymaps.html/"/>
    <updated>2012-09-08T15:30:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/iterm2-keymaps</id>
    <content type="html"><![CDATA[<p>Mac 原来自带的终端工具 Terminal 不好用是出了名的，虽然最近几个版本苹果稍微做了些优化，功能上，可用性方面增强不少，无奈有个更好用的 Iterm2 摆在那，基本上也就没有多少出场机会了</p>

<p><a href="http://www.iterm2.com/">Iterm2</a>，经常使用终端的同学肯定早就切换到这个东东上了，开源免费，和 zsh 搭配差不多已经取代 Terminal + bash 成了 Mac 上终端工具的标准配置。</p>

<p>Iterm2 的优点：</p>

<ul>
  <li>兼容性好，远程服务器 vi 什么的低版本能很好兼容，Terminal 则会出问题</li>
  <li>支持 xterm-256 色，方便在终端中配置 vim/emacs 代码配色</li>
  <li>快捷键丰富，自带/自己定义都很方便</li>
  <li>分屏简单方便，可以根据自己需要同时搭配上 tmux，大屏用起来爽到爆</li>
</ul>

<p><a href="http://www.iterm2.com/#/section/documentation">官方文档</a> 有非常详细的介绍，先来看看自带有哪些很实用的功能/快捷键</p>

<!--more-->

<ol>
  <li>⌘ + 数字在各 tab 标签直接来回切换</li>
  <li>选择即复制 + 鼠标中键粘贴，这个很实用</li>
  <li>⌘ + f 所查找的内容会被自动复制</li>
  <li>⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏</li>
  <li>⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏</li>
  <li>ctrl + u 清空当前行，无论光标在什么位置</li>
  <li>输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令</li>
  <li>⌘ + shift + h 会列出剪切板历史</li>
  <li>可以在 <code>Preferences &gt; keys</code> 设置全局快捷键调出 iterm，这个也可以用过 Alfred 实现</li>
</ol>

<p>我常用的一些快捷键</p>

<ol>
  <li>⌘ + 1 / 2 左右 tab 之间来回切换，这个在 <a href="http://dayuan.im/blog/add-rvm-ruby-path-to-sublime-text-2.html/">前面</a> 已经介绍过了</li>
  <li>⌘← / ⌘→ 到一行命令最左边/最右边 ，这个功能同 C+a / C+e</li>
  <li>⌥← / ⌥→ 按单词前移/后移，相当与 C+f / C+b，其实这个功能在Iterm中已经预定义好了，⌥f / ⌥b，看个人习惯了</li>
  <li>好像就这几个。。囧</li>
</ol>

<p>设置方法如下</p>

<p><img src="http://m1.img.libdd.com/farm5/2012/0908/17/523CEF031371E3BC2A56926F002FA3E2E651F805049E_924_541.PNG" alt="" /></p>

<p>当然除了这些可以自定义的也不能忘了 linux 下那些好用的组合</p>

<ol>
  <li>C+a / C+e 这个几乎在哪都可以使用</li>
  <li>C+p / !! 上一条命令</li>
  <li>C+k 从光标处删至命令行尾 (本来 C+u 是删至命令行首，但iterm中是删掉整行)</li>
  <li>C+w A+d 从光标处删至字首/尾</li>
  <li>C+h C+d 删掉光标前后的自负</li>
  <li>C+y 粘贴至光标后</li>
  <li>C+r 搜索命令历史，这个较常用</li>
</ol>

<p>剩下一些不常用的就不介绍了，目前这几个差不多已经够用了，等什么时候去官方文档上看看发现更好的再来补充几个</p>

<p>关于备份，配置文件位于</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">~/Library/Preferences/com.googlecode.iterm2.plist</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以把这个文件备份下来，等下次换环境了直接导入也免得重新配置</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一些 Ruby 性能技巧]]></title>
    <link href="http://Bigcircle.github.com/blog/ruby-performance-tricks-you-should-know.html/"/>
    <updated>2012-09-04T19:57:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/ruby-performance-tricks-you-should-know</id>
    <content type="html"><![CDATA[<p>前两天看到这个 <a href="http://greyblake.com/blog/2012/09/02/ruby-perfomance-tricks/">ruby performance tricks</a> 作者总结的不错，但是很多人不喜欢看 e 文，刚好学习顺便翻译下
由于现在基本上都已经过渡到 1.9.3，测试数据均在 1.9.3 版本下测试</p>

<h6 id="rescue">不要在控制流中滥用rescue捕获异常</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Obj</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">with_condition</span>
</span><span class="line">    <span class="nb">respond_to?</span><span class="p">(</span><span class="ss">:mythical_method</span><span class="p">)</span> <span class="p">?</span> <span class="nb">self</span><span class="o">.</span><span class="n">mythical_method</span> <span class="p">:</span> <span class="kp">nil</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">with_rescue</span>
</span><span class="line">    <span class="nb">self</span><span class="o">.</span><span class="n">mythical_method</span>
</span><span class="line">  <span class="k">rescue</span> <span class="no">NoMethodError</span>
</span><span class="line">    <span class="kp">nil</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">obj</span> <span class="o">=</span> <span class="no">Obj</span><span class="o">.</span><span class="n">new</span>
</span><span class="line"><span class="n">N</span> <span class="o">=</span> <span class="mi">10_000_000</span>
</span><span class="line">
</span><span class="line"><span class="nb">puts</span> <span class="no">RUBY_DESCRIPTION</span>
</span><span class="line">
</span><span class="line"><span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="s2">&quot;rescue/condition&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">  <span class="n">rescue_report</span>     <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;rescue:&quot;</span><span class="p">)</span>    <span class="p">{</span> <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">obj</span><span class="o">.</span><span class="n">with_rescue</span>  <span class="p">}</span> <span class="p">}</span>
</span><span class="line">  <span class="n">condition_report</span>  <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;condition:&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">obj</span><span class="o">.</span><span class="n">with_if</span>      <span class="p">}</span> <span class="p">}</span>
</span><span class="line">  <span class="o">[</span><span class="n">rescue_report</span> <span class="o">/</span> <span class="n">condition_report</span><span class="o">]</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>跑分数据可以看出使用了rescue，性能损失超过43倍</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">ruby</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="n">p194</span> <span class="p">(</span><span class="mi">2012</span><span class="o">-</span><span class="mo">04</span><span class="o">-</span><span class="mi">20</span> <span class="n">revision</span> <span class="mi">35410</span><span class="p">)</span> <span class="o">[</span><span class="n">x86_64</span><span class="o">-</span><span class="n">linux</span><span class="o">]</span>
</span><span class="line">                        <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="k">rescue</span><span class="p">:</span>           <span class="mi">111</span><span class="o">.</span><span class="mi">530000</span>   <span class="mi">2</span><span class="o">.</span><span class="mi">650000</span> <span class="mi">114</span><span class="o">.</span><span class="mi">180000</span> <span class="p">(</span><span class="mi">115</span><span class="o">.</span><span class="mi">837103</span><span class="p">)</span>
</span><span class="line"><span class="n">condition</span><span class="p">:</span>          <span class="mi">2</span><span class="o">.</span><span class="mi">620000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">010000</span>   <span class="mi">2</span><span class="o">.</span><span class="mi">630000</span> <span class="p">(</span>  <span class="mi">2</span><span class="o">.</span><span class="mi">633154</span><span class="p">)</span>
</span><span class="line"><span class="k">rescue</span><span class="o">/</span><span class="n">condition</span><span class="p">:</span>  <span class="mi">42</span><span class="o">.</span><span class="mi">568702</span> <span class="mi">265</span><span class="o">.</span><span class="mo">000000</span>        <span class="no">NaN</span> <span class="p">(</span> <span class="mi">43</span><span class="o">.</span><span class="mi">991767</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>google 了下发现不光 Ruby 会有这个问题，C，C++，Java 中也都会有很大的性能问题，原因大概是因为异常捕获这个操作本身就很慢，<a href="http://www.simonecarletti.com/blog/2010/01/how-slow-are-ruby-exceptions/">这</a> 有一份比较详细的测试，对比使用 exception 在速度上的劣势。当然该捕捉的时候还是要捕捉的，只是不要滥用</p>

<h6 id="section">使用 « 拼接字符串</h6>

<p>这个tip可能大家都听过，估计平时也都是这么用的，为什么用 « 不要用 += 呢，看这个测试</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">N</span> <span class="o">=</span> <span class="mi">1000</span>
</span><span class="line"><span class="no">BASIC_LENGTH</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class="line">
</span><span class="line"><span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">factor</span><span class="o">|</span>
</span><span class="line">  <span class="n">length</span> <span class="o">=</span> <span class="no">BASIC_LENGTH</span> <span class="o">*</span> <span class="p">(</span><span class="mi">10</span> <span class="o">**</span> <span class="n">factor</span><span class="p">)</span>
</span><span class="line">  <span class="nb">puts</span> <span class="s2">&quot;_&quot;</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">LENGTH: </span><span class="si">#{</span><span class="n">length</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">
</span><span class="line">  <span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s1">&#39;+= VS &lt;&lt;&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">    <span class="n">concat_report</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;+=&quot;</span><span class="p">)</span>  <span class="k">do</span>
</span><span class="line">      <span class="n">str1</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class="line">      <span class="n">str2</span> <span class="o">=</span> <span class="s2">&quot;s&quot;</span> <span class="o">*</span> <span class="n">length</span>
</span><span class="line">      <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">str1</span> <span class="o">+=</span> <span class="n">str2</span> <span class="p">}</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="n">modify_report</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;&lt;&lt;&quot;</span><span class="p">)</span>  <span class="k">do</span>
</span><span class="line">      <span class="n">str1</span> <span class="o">=</span> <span class="s2">&quot;s&quot;</span>
</span><span class="line">      <span class="n">str2</span> <span class="o">=</span> <span class="s2">&quot;s&quot;</span> <span class="o">*</span> <span class="n">length</span>
</span><span class="line">      <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">str1</span> <span class="o">&lt;&lt;</span> <span class="n">str2</span> <span class="p">}</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="o">[</span><span class="n">concat_report</span> <span class="o">/</span> <span class="n">modify_report</span><span class="o">]</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>结果如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">LENGTH</span><span class="p">:</span> <span class="mi">10</span>
</span><span class="line">                 <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="o">+=</span>           <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">004671</span><span class="p">)</span>
</span><span class="line"><span class="o">&lt;&lt;</span>           <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">000176</span><span class="p">)</span>
</span><span class="line"><span class="o">+=</span> <span class="no">VS</span> <span class="o">&lt;&lt;</span>          <span class="no">NaN</span>        <span class="no">NaN</span>        <span class="no">NaN</span> <span class="p">(</span> <span class="mi">26</span><span class="o">.</span><span class="mi">508796</span><span class="p">)</span>
</span><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">LENGTH</span><span class="p">:</span> <span class="mi">100</span>
</span><span class="line">                 <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="o">+=</span>           <span class="mi">0</span><span class="o">.</span><span class="mo">020000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">020000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">022</span><span class="mi">995</span><span class="p">)</span>
</span><span class="line"><span class="o">&lt;&lt;</span>           <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">000226</span><span class="p">)</span>
</span><span class="line"><span class="o">+=</span> <span class="no">VS</span> <span class="o">&lt;&lt;</span>          <span class="no">Inf</span>        <span class="no">NaN</span>        <span class="no">NaN</span> <span class="p">(</span><span class="mi">101</span><span class="o">.</span><span class="mi">845829</span><span class="p">)</span>
</span><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">LENGTH</span><span class="p">:</span> <span class="mi">1000</span>
</span><span class="line">                 <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="o">+=</span>           <span class="mi">0</span><span class="o">.</span><span class="mi">270000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">120000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">390000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">390888</span><span class="p">)</span>
</span><span class="line"><span class="o">&lt;&lt;</span>           <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">001730</span><span class="p">)</span>
</span><span class="line"><span class="o">+=</span> <span class="no">VS</span> <span class="o">&lt;&lt;</span>          <span class="no">Inf</span>        <span class="no">Inf</span>        <span class="no">NaN</span> <span class="p">(</span><span class="mi">225</span><span class="o">.</span><span class="mi">920077</span><span class="p">)</span>
</span><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">LENGTH</span><span class="p">:</span> <span class="mi">10000</span>
</span><span class="line">                 <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="o">+=</span>           <span class="mi">3</span><span class="o">.</span><span class="mi">660000</span>   <span class="mi">1</span><span class="o">.</span><span class="mi">570000</span>   <span class="mi">5</span><span class="o">.</span><span class="mi">230000</span> <span class="p">(</span>  <span class="mi">5</span><span class="o">.</span><span class="mi">233861</span><span class="p">)</span>
</span><span class="line"><span class="o">&lt;&lt;</span>           <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">010000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">010000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">0150</span><span class="mi">99</span><span class="p">)</span>
</span><span class="line"><span class="o">+=</span> <span class="no">VS</span> <span class="o">&lt;&lt;</span>          <span class="no">Inf</span> <span class="mi">157</span><span class="o">.</span><span class="mo">000000</span>        <span class="no">NaN</span> <span class="p">(</span><span class="mi">346</span><span class="o">.</span><span class="mi">629692</span><span class="p">)</span>
</span><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">LENGTH</span><span class="p">:</span> <span class="mi">100000</span>
</span><span class="line">                 <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="o">+=</span>          <span class="mi">31</span><span class="o">.</span><span class="mi">270000</span>  <span class="mi">16</span><span class="o">.</span><span class="mi">990000</span>  <span class="mi">48</span><span class="o">.</span><span class="mi">260000</span> <span class="p">(</span> <span class="mi">48</span><span class="o">.</span><span class="mi">328511</span><span class="p">)</span>
</span><span class="line"><span class="o">&lt;&lt;</span>           <span class="mi">0</span><span class="o">.</span><span class="mo">050000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">050000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">100000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">105993</span><span class="p">)</span>
</span><span class="line"><span class="o">+=</span> <span class="no">VS</span> <span class="o">&lt;&lt;</span>   <span class="mi">625</span><span class="o">.</span><span class="mi">400000</span> <span class="mi">339</span><span class="o">.</span><span class="mi">800000</span>        <span class="no">NaN</span> <span class="p">(</span><span class="mi">455</span><span class="o">.</span><span class="mi">961373</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>从结果可以看出，字符串比较短时就差25倍，随着字符串长度的增加，性能差距也越来越大
为什么作用相同的操作性能方便差距这么大呢，看这个例子</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">str1</span> <span class="o">=</span> <span class="s2">&quot;first&quot;</span>
</span><span class="line"><span class="n">str2</span> <span class="o">=</span> <span class="s2">&quot;second&quot;</span>
</span><span class="line"><span class="n">str1</span><span class="o">.</span><span class="n">object_id</span>       <span class="c1"># =&gt; 16241320</span>
</span><span class="line">
</span><span class="line"><span class="n">str1</span> <span class="o">+=</span> <span class="n">str2</span>    <span class="c1"># str1 = str1 + str2</span>
</span><span class="line"><span class="n">str1</span><span class="o">.</span><span class="n">object_id</span>  <span class="c1"># =&gt; 16241240, id is changed</span>
</span><span class="line">
</span><span class="line"><span class="n">str1</span> <span class="o">&lt;&lt;</span> <span class="n">str2</span>
</span><span class="line"><span class="n">str1</span><span class="o">.</span><span class="n">object_id</span>  <span class="c1"># =&gt; 16241240, id is the same</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当使用 += 时会在内存中多复制一份原始字符串，生成 str1 + str2 临时object覆盖掉 str1, 因此操作完之后 str1 的 object_id 发生了变化，而 « 是直接在原 str1 上进行操作，操作完之后 object_id 没有发生变化</p>

<p>+= 还会导致内存中存在大量多余的string object，GC 触发垃圾回收也会消耗掉许多时间</p>

<h6 id="section-1">注意使用迭代</h6>

<p>假设你需要写个函数把数组转换成一个 hash, 就像这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">func</span><span class="p">(</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span><span class="p">)</span>  <span class="c1"># =&gt; {1 =&gt; 1, 2 =&gt; 2, 3 =&gt; 3}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>一个可以解决问题的做法</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</span><span class="line">  <span class="n">array</span><span class="o">.</span><span class="n">inject</span><span class="p">({})</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="p">,</span> <span class="n">e</span><span class="o">|</span> <span class="n">h</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">e</span> <span class="o">=&gt;</span> <span class="n">e</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个方法的时间复杂度是 O(n2)，当数组很大时速度会非常慢，稍作调整，时间复杂度 O(n)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</span><span class="line">  <span class="n">array</span><span class="o">.</span><span class="n">inject</span><span class="p">({})</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="p">,</span> <span class="n">e</span><span class="o">|</span> <span class="n">h</span><span class="o">[</span><span class="n">e</span><span class="o">]</span> <span class="o">=</span> <span class="n">e</span><span class="p">;</span> <span class="n">h</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>看下测试时间</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">n_func</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</span><span class="line">  <span class="n">array</span><span class="o">.</span><span class="n">inject</span><span class="p">({})</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="p">,</span> <span class="n">e</span><span class="o">|</span> <span class="n">h</span><span class="o">[</span><span class="n">e</span><span class="o">]</span> <span class="o">=</span> <span class="n">e</span><span class="p">;</span> <span class="n">h</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">n2_func</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</span><span class="line">  <span class="n">array</span><span class="o">.</span><span class="n">inject</span><span class="p">({})</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="p">,</span> <span class="n">e</span><span class="o">|</span> <span class="n">h</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">e</span> <span class="o">=&gt;</span> <span class="n">e</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="no">BASE_SIZE</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class="line">
</span><span class="line"><span class="mi">4</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">factor</span><span class="o">|</span>
</span><span class="line">  <span class="n">size</span>   <span class="o">=</span> <span class="no">BASE_SIZE</span> <span class="o">*</span> <span class="p">(</span><span class="mi">10</span> <span class="o">**</span> <span class="n">factor</span><span class="p">)</span>
</span><span class="line">  <span class="n">params</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.size</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class="line">  <span class="nb">puts</span> <span class="s2">&quot;_&quot;</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">SIZE: </span><span class="si">#{</span><span class="n">size</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">    <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;O(n)&quot;</span> <span class="p">)</span> <span class="p">{</span> <span class="n">n_func</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>  <span class="p">}</span>
</span><span class="line">    <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;O(n2)&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="n">n2_func</span><span class="p">(</span><span class="n">params</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>从时间上看虽然都消耗不大，但是还是有明显性能差距的，记住不要用迭代做大规模计算</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">SIZE</span><span class="p">:</span> <span class="mi">10</span>
</span><span class="line">                <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>        <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">000014</span><span class="p">)</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n2</span><span class="p">)</span>       <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">000033</span><span class="p">)</span>
</span><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">SIZE</span><span class="p">:</span> <span class="mi">100</span>
</span><span class="line">                <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>        <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">000043</span><span class="p">)</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n2</span><span class="p">)</span>       <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">001070</span><span class="p">)</span>
</span><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">SIZE</span><span class="p">:</span> <span class="mi">1000</span>
</span><span class="line">                <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>        <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">000347</span><span class="p">)</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n2</span><span class="p">)</span>       <span class="mi">0</span><span class="o">.</span><span class="mi">130000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">130000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">127638</span><span class="p">)</span>
</span><span class="line"><span class="n">____________________________________________________________</span>
</span><span class="line"><span class="no">SIZE</span><span class="p">:</span> <span class="mi">10000</span>
</span><span class="line">                <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>        <span class="mi">0</span><span class="o">.</span><span class="mo">020000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">020000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">01</span><span class="mi">9067</span><span class="p">)</span>
</span><span class="line"><span class="n">O</span><span class="p">(</span><span class="n">n2</span><span class="p">)</span>      <span class="mi">17</span><span class="o">.</span><span class="mi">850000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">080000</span>  <span class="mi">17</span><span class="o">.</span><span class="mi">930000</span> <span class="p">(</span> <span class="mi">17</span><span class="o">.</span><span class="mi">983827</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="method">使用　method!</h6>

<p>很多时候直接用 method 和 使用 method! 都在做同样的事，不同的是用 method! 不会重新复制一份副本，使用 method! 速度会快点</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">merge!</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</span><span class="line">  <span class="n">array</span><span class="o">.</span><span class="n">inject</span><span class="p">({})</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="p">,</span> <span class="n">e</span><span class="o">|</span> <span class="n">h</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="n">e</span> <span class="o">=&gt;</span> <span class="n">e</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">merge</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</span><span class="line">  <span class="n">array</span><span class="o">.</span><span class="n">inject</span><span class="p">({})</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="p">,</span> <span class="n">e</span><span class="o">|</span> <span class="n">h</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">e</span> <span class="o">=&gt;</span> <span class="n">e</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">N</span> <span class="o">=</span> <span class="mi">10_000</span>
</span><span class="line"><span class="n">array</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.N</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class="line">
</span><span class="line"><span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;merge!&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="n">merge!</span><span class="p">(</span><span class="n">array</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;merge&quot;</span><span class="p">)</span>  <span class="p">{</span> <span class="n">merge</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>  <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个差距有点大</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">             <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="n">merge!</span>       <span class="mi">0</span><span class="o">.</span><span class="mo">010000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">010000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mo">011370</span><span class="p">)</span>
</span><span class="line"><span class="n">merge</span>       <span class="mi">17</span><span class="o">.</span><span class="mi">710000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>  <span class="mi">17</span><span class="o">.</span><span class="mi">710000</span> <span class="p">(</span> <span class="mi">17</span><span class="o">.</span><span class="mi">840856</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-2">使用实例变量</h6>

<p>直接访问实例变量是通过 accessor 访问速度的2倍</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Metric</span>
</span><span class="line">  <span class="kp">attr_accessor</span> <span class="ss">:var</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">    <span class="vi">@n</span>   <span class="o">=</span> <span class="n">n</span>
</span><span class="line">    <span class="vi">@var</span> <span class="o">=</span> <span class="mi">22</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">run</span>
</span><span class="line">    <span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">      <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;@var&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="vi">@n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="vi">@var</span> <span class="p">}</span> <span class="p">}</span>
</span><span class="line">      <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;var&quot;</span> <span class="p">)</span> <span class="p">{</span> <span class="vi">@n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">var</span>  <span class="p">}</span> <span class="p">}</span>
</span><span class="line">      <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;@var =&quot;</span><span class="p">)</span>     <span class="p">{</span> <span class="vi">@n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="vi">@var</span> <span class="o">=</span> <span class="n">i</span>     <span class="p">}</span> <span class="p">}</span>
</span><span class="line">      <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;self.var =&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="vi">@n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="nb">self</span><span class="o">.</span><span class="n">var</span> <span class="o">=</span> <span class="n">i</span> <span class="p">}</span> <span class="p">}</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">metric</span> <span class="o">=</span> <span class="no">Metric</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">100_000_000</span><span class="p">)</span>
</span><span class="line"><span class="n">metric</span><span class="o">.</span><span class="n">run</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">             <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="vi">@var</span>         <span class="mi">6</span><span class="o">.</span><span class="mi">980000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">010000</span>   <span class="mi">6</span><span class="o">.</span><span class="mi">990000</span> <span class="p">(</span>  <span class="mi">7</span><span class="o">.</span><span class="mi">193725</span><span class="p">)</span>
</span><span class="line"><span class="n">var</span>         <span class="mi">13</span><span class="o">.</span><span class="mo">040000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>  <span class="mi">13</span><span class="o">.</span><span class="mo">040000</span> <span class="p">(</span> <span class="mi">13</span><span class="o">.</span><span class="mi">131711</span><span class="p">)</span>
</span><span class="line"><span class="vi">@var</span> <span class="o">=</span>       <span class="mi">7</span><span class="o">.</span><span class="mi">960000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">7</span><span class="o">.</span><span class="mi">960000</span> <span class="p">(</span>  <span class="mi">8</span><span class="o">.</span><span class="mi">242603</span><span class="p">)</span>
</span><span class="line"><span class="nb">self</span><span class="o">.</span><span class="n">var</span> <span class="o">=</span>  <span class="mi">14</span><span class="o">.</span><span class="mi">910000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">010000</span>  <span class="mi">14</span><span class="o">.</span><span class="mi">920000</span> <span class="p">(</span> <span class="mi">15</span><span class="o">.</span><span class="mi">960125</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-3">平行的任务速度比分开执行慢</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">N</span> <span class="o">=</span> <span class="mi">10_000_000</span>
</span><span class="line">
</span><span class="line"><span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s1">&#39;parallel&#39;</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">    <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class="line">      <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">20</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s1">&#39;consequentially&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">    <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class="line">      <span class="n">a</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class="line">      <span class="n">b</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>速度差距1倍以上，我平时就喜欢为了少写几行平行赋值，看来这个习惯要改下啦</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">                  <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="n">parallel</span>          <span class="mi">1</span><span class="o">.</span><span class="mi">900000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">1</span><span class="o">.</span><span class="mi">900000</span> <span class="p">(</span>  <span class="mi">1</span><span class="o">.</span><span class="mi">928063</span><span class="p">)</span>
</span><span class="line"><span class="n">consequentially</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">880000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">880000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">879675</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="definemethod--classeval">动态定义方法比较 define_method 和 class_eval</h6>

<p>在动态定义方法时是用 class_eval string 快还是 defing_method 快呢</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Metric</span>
</span><span class="line">  <span class="n">N</span> <span class="o">=</span> <span class="mi">1_000_000</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">class_eval_with_string</span>
</span><span class="line">    <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">      <span class="nb">class_eval</span><span class="p">(</span><span class="o">&lt;&lt;-</span><span class="no">eorb</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="sh">        def smeth_#{i}</span>
</span><span class="line"><span class="sh">          #{i}</span>
</span><span class="line"><span class="sh">        end</span>
</span><span class="line"><span class="no">      eorb</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">with_define_method</span>
</span><span class="line">    <span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">      <span class="n">define_method</span><span class="p">(</span><span class="s2">&quot;dmeth_</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">        <span class="n">i</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span><span class="p">(</span><span class="mi">22</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;class_eval with string&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="no">Metric</span><span class="o">.</span><span class="n">class_eval_with_string</span> <span class="p">}</span>
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;define_method&quot;</span><span class="p">)</span>          <span class="p">{</span> <span class="no">Metric</span><span class="o">.</span><span class="n">with_define_method</span>     <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="n">metric</span> <span class="o">=</span> <span class="no">Metric</span><span class="o">.</span><span class="n">new</span>
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;string method&quot;</span><span class="p">)</span>  <span class="p">{</span> <span class="no">Metric</span><span class="o">::</span><span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">metric</span><span class="o">.</span><span class="n">smeth_1</span> <span class="p">}</span> <span class="p">}</span>
</span><span class="line">  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;dynamic method&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="no">Metric</span><span class="o">::</span><span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">metric</span><span class="o">.</span><span class="n">dmeth_1</span> <span class="p">}</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>结果显示 define_method 比 class_eval string 快3倍以上，class_eval 虽然在方法生成上慢却应该优先使用，因为它生成的方法执行起来更快</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">                         <span class="n">user</span>     <span class="nb">system</span>      <span class="n">total</span>        <span class="n">real</span>
</span><span class="line"><span class="nb">class_eval</span> <span class="n">with</span> <span class="n">string</span> <span class="mi">219</span><span class="o">.</span><span class="mi">840000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">720000</span> <span class="mi">220</span><span class="o">.</span><span class="mi">560000</span> <span class="p">(</span><span class="mi">221</span><span class="o">.</span><span class="mi">933074</span><span class="p">)</span>
</span><span class="line"><span class="n">define_method</span>           <span class="mi">61</span><span class="o">.</span><span class="mi">280000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">240000</span>  <span class="mi">61</span><span class="o">.</span><span class="mi">520000</span> <span class="p">(</span> <span class="mi">62</span><span class="o">.</span><span class="mo">070</span><span class="mi">911</span><span class="p">)</span>
</span><span class="line"><span class="n">string</span> <span class="nb">method</span>            <span class="mi">0</span><span class="o">.</span><span class="mi">110000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">110000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">111433</span><span class="p">)</span>
</span><span class="line"><span class="n">dynamic</span> <span class="nb">method</span>           <span class="mi">0</span><span class="o">.</span><span class="mi">150000</span>   <span class="mi">0</span><span class="o">.</span><span class="mo">000000</span>   <span class="mi">0</span><span class="o">.</span><span class="mi">150000</span> <span class="p">(</span>  <span class="mi">0</span><span class="o">.</span><span class="mi">156537</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>不积跬步，无以至千里。虽然这些都是一些性能方面的小技巧，但累积多了也能对性能有很大的优化</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 技巧之 tap & try]]></title>
    <link href="http://Bigcircle.github.com/blog/rails-tricks-about-tap-and-try.html/"/>
    <updated>2012-09-03T14:38:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/rails-tricks-about-tap-and-try</id>
    <content type="html"><![CDATA[<p>tap 和 try 是 Rails 开发过程中两个很常用的方法，在调试和写出简洁代码上有着不错的发挥</p>

<p>从 tap 的 <a href="http://www.ruby-doc.org/core-1.9.3/Object.html#method-i-tap">Api</a> 可以看出，tap 是 Object 的 instance_method，传递 self 给一个 block，最后返回 self.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="n">p194</span> <span class="p">:</span><span class="mo">015</span> <span class="o">&gt;</span> <span class="no">Object</span><span class="o">.</span><span class="n">instance_methods</span><span class="o">.</span><span class="n">grep</span> <span class="sr">/tap/</span>
</span><span class="line"> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:tap</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">tap</span>		<span class="c1">#tap 源码实现</span>
</span><span class="line">  <span class="k">yield</span> <span class="nb">self</span>
</span><span class="line">  <span class="nb">self</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>用途一：调试</strong>。当你使用链式方法发生错误时，如果需要测试这个过程中哪出了问题，一般的做法是拆断这个方法，设置中间变量，接着测试中间变量是否正确，如果正确，则把变量换个地方继续测试，方法很长时就没法测了，当然 Ruby 为你想好了，有着优雅又简便的实现</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="sx">%w(x y z)</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">shift</span><span class="o">.</span><span class="n">upcase</span><span class="o">.</span><span class="n">next</span> <span class="c1"># =&gt; &quot;Y&quot;</span>
</span><span class="line">
</span><span class="line"><span class="sx">%w(x y z)</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">shift</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">p</span> <span class="n">x</span> <span class="p">}</span><span class="o">.</span><span class="n">upcase</span><span class="o">.</span><span class="n">next</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>输出每步的结果看看</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span>                <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;original: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class="line">  <span class="o">.</span><span class="n">to_a</span>                <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;array: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class="line">  <span class="o">.</span><span class="n">select</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">}</span> <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;evens: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class="line">  <span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">*</span><span class="n">x</span> <span class="p">}</span>     <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;squares: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<p><strong>用途二：简化代码</strong>。我们构建一个方法想返回一个 String / Array / Hash 之类结果，一般的做法是先定义一个变量，结果把运算结果赋值给这个变量，接着返回变量，用 tap 一步搞定，其实就是源码意思的实现</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">[].</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;abc&quot;</span><span class="p">}</span>
</span><span class="line"><span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="n">do_some_thing</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>try 可以让你调用对象方法时不用担心对象是nil并抛出异常，依旧先看源码(rails 3.2.8)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">try</span><span class="p">(</span><span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span>
</span><span class="line">  <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">empty?</span> <span class="o">&amp;&amp;</span> <span class="nb">block_given?</span>
</span><span class="line">    <span class="k">yield</span> <span class="nb">self</span>
</span><span class="line">  <span class="k">else</span>
</span><span class="line">    <span class="n">public_send</span><span class="p">(</span><span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span> <span class="k">if</span> <span class="nb">respond_to?</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">first</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">try</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class="line">  <span class="kp">nil</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>上面一个try是对 Object 的扩展，下面的是对 NilClass 的扩展，这就是为什么会nil不会抛出异常的原因，<a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/object/try.rb">源码</a> .
try 如果只接受 block 则传递 self 给 block，返回 block 执行后的结果，否则就执行
<a href="http://www.ruby-doc.org/core-1.9.3/Object.html#method-i-public_send">public_send</a>，public_send 与 send 的不同之处，public_send 只会 call public_method，看例子</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="vi">@person</span> <span class="o">&amp;&amp;</span> <span class="vi">@persion</span><span class="o">.</span><span class="n">name</span>
</span><span class="line"><span class="vi">@person</span> <span class="p">?</span> <span class="vi">@person</span><span class="o">.</span><span class="n">name</span> <span class="p">:</span> <span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>用 try 改写</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="vi">@person</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>
</span><span class="line"><span class="vi">@person</span><span class="o">.</span><span class="n">try</span> <span class="p">{</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">p</span><span class="o">.</span><span class="n">first_name</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="nb">p</span><span class="o">.</span><span class="n">last_name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>try 同样能接受参数、block，</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Person</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:find</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="vi">@people</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:collect</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="nb">p</span><span class="o">.</span><span class="n">name</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>通过源码可以看出 tap 和 try 两个小工具意思都非常明白，用起来也很简单方便，实乃居家简化好帮手</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 2 使用 RVM ]]></title>
    <link href="http://Bigcircle.github.com/blog/add-rvm-ruby-path-to-sublime-text-2.html/"/>
    <updated>2012-09-01T13:43:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/add-rvm-ruby-path-to-sublime-text-2</id>
    <content type="html"><![CDATA[<p>用 Sublime Text 2 的同学使用 rvm 时会发现内置的可执行 ruby build 不可用了或者还是默认执行系统自带的 ruby-1.8.7 版本，当执行的脚本中用到 1.9.2 新语法的时候可能会被错，这个时候就需要切换到 rvm 版本控制的 ruby</p>

<p>默认自带的 build 目录位于</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="o">~/</span><span class="n">Library</span><span class="o">/</span><span class="n">Application</span><span class="err">\</span> <span class="n">Support</span><span class="o">/</span><span class="n">Sublime</span><span class="err">\</span> <span class="n">Text</span><span class="err">\</span> <span class="mi">2</span><span class="o">/</span><span class="n">Packages</span><span class="o">/</span><span class="n">Ruby</span><span class="o">/</span><span class="n">Ruby</span><span class="p">.</span><span class="n">sublime</span><span class="o">-</span><span class="n">build</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>默认的配置是这样的</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="s">&quot;cmd&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s">&quot;ruby&quot;</span><span class="p">,</span> <span class="s">&quot;$file&quot;</span><span class="p">],</span>
</span><span class="line"><span class="s">&quot;file_regex&quot;</span><span class="o">:</span> <span class="s">&quot;^(...*?):([0-9]*):?([0-9]*)&quot;</span><span class="p">,</span>
</span><span class="line"><span class="s">&quot;selector&quot;</span><span class="o">:</span> <span class="s">&quot;source.ruby&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>切换到 rvm 只需要改 cmd - ruby 指向路径， -KU 增加对中文输出支持，当然文件类型也要求是 utf-8</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="s">&quot;cmd&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s">&quot;/Users/yourname/.rvm/bin/rvm-auto-ruby&quot;</span><span class="p">,</span> <span class="s">&quot;-KU&quot;</span><span class="p">,</span> <span class="s">&quot;$file&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>你也可以自己改成 rvm 默认的 default ruby</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">which</span> <span class="n">ruby</span>
</span><span class="line">
</span><span class="line"><span class="o">=&gt;</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">yourname</span><span class="o">/</span><span class="p">.</span><span class="n">rvm</span><span class="o">/</span><span class="n">rubies</span><span class="o">/</span><span class="n">ruby</span><span class="o">-</span><span class="mf">1.9.3</span><span class="o">-</span><span class="n">p194</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">ruby</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>默认执行快捷键是 <code>⌘ + b</code> / <code>F7</code>，可以自己定义成喜欢的按键</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="p">{</span> <span class="s">&quot;keys&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s">&quot;super+b&quot;</span><span class="p">],</span> <span class="s">&quot;command&quot;</span><span class="o">:</span> <span class="s">&quot;build&quot;</span> <span class="p">},</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如何构建不用语言的 build，参考 <a href="http://addyosmani.com/blog/custom-sublime-text-build-systems-for-popular-tools-and-languages/">这篇</a>，差不多列举全了，构造方式也很简单</p>

<hr />

<p>另外推荐个我最常用的快捷键</p>

<ul>
  <li>在打开的几个标签之间前后切换。当打开很多标签时，又不喜欢用鼠标点来点去的可以试下这个</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="p">{</span> <span class="s">&quot;keys&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s">&quot;super+1&quot;</span><span class="p">],</span> <span class="s">&quot;command&quot;</span><span class="o">:</span> <span class="s">&quot;prev_view&quot;</span> <span class="p">},</span>
</span><span class="line"><span class="p">{</span> <span class="s">&quot;keys&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s">&quot;super+2&quot;</span><span class="p">],</span> <span class="s">&quot;command&quot;</span><span class="o">:</span> <span class="s">&quot;next_view&quot;</span> <span class="p">},</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个快捷键同样适用于设置 Chrome/TotalFinder/iTerm 等能打开多标签的app，设置方式如下</p>

<p><img src="http://m2.img.libdd.com/farm4/2012/0901/15/57756B60A70B4B4D6BEE07D177C25C55C856F5189977_500_448.jpg" alt="" /></p>

<p>其他我定义的快捷键都在 <a href="https://github.com/Bigcircle/config/blob/master/sublime/User/Default%20(OSX).sublime-keymap">这</a>，有需要的可以去淘几个</p>

<p>工欲善其事，必先利其器，利用好工具可以给开发带来很大的便利，节省很多时间</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你可能错过的 Rails 技巧(四)]]></title>
    <link href="http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-4.html/"/>
    <updated>2012-08-31T14:47:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-4</id>
    <content type="html"><![CDATA[<p>这个系列完结篇，貌似内容挺多，但是实用的没几个</p>

<p>从阅读心里学来说，太长的篇幅容易让读者失去忍耐力，文章后面的内容就会草草略过，怎么感觉太长的系列写起来也让我失去忍耐力呢。。。继续忍耐，完结此篇</p>

<p>这篇 <a href="http://blog.plataformatec.com.br/2012/01/my-five-favorite-hidden-features-in-rails-3-2/">blog</a> 介绍了4个最喜欢的 Rails3.2 隐藏特性，这4条都在这个系列中，作者可能也是从这学来的吧</p>

<h6 id="render-any-object">31 - Render Any Object</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Event</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">to_partial_path</span>
</span><span class="line">    <span class="s2">&quot;events/</span><span class="si">#{</span><span class="n">trigger</span><span class="si">}</span><span class="s2">&quot;</span>  <span class="c1"># events/edit or events/view</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;%=</span> <span class="n">render</span> <span class="n">partial</span><span class="p">:</span> <span class="vi">@events</span><span class="p">,</span> <span class="n">as</span><span class="p">:</span> <span class="ss">:event</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><a href="http://edgeapi.rubyonrails.org/classes/ActiveModel/Conversion.html#method-i-to_partial_path">to_partial_path</a> 是 ActiveModel 內建的实例方法，返回一个和可识别关联对象路径的字符串，原文是这么说的，目前还没看明白这么用的目的在哪</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Returns</span> <span class="n">a</span> <span class="n">string</span> <span class="n">identifying</span> <span class="n">the</span> <span class="n">path</span> <span class="n">associated</span> <span class="n">with</span> <span class="n">the</span> <span class="n">object</span><span class="o">.</span>
</span><span class="line"><span class="no">ActionPack</span> <span class="n">uses</span> <span class="n">this</span> <span class="n">to</span> <span class="n">find</span> <span class="n">a</span> <span class="n">suitable</span> <span class="n">partial</span> <span class="n">to</span> <span class="n">represent</span> <span class="n">the</span> <span class="n">object</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="group-option">32 - 生成 group option</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="sx">%= select_tag( :grouped_menu, grouped_options_for_select(</span>
</span><span class="line"><span class="sx">  &quot;Group A&quot; =</span><span class="o">&gt;</span> <span class="sx">%w[One Two Three]</span><span class="p">,</span>
</span><span class="line">  <span class="s2">&quot;Group B&quot;</span> <span class="o">=&gt;</span> <span class="sx">%w[One Two Three]</span>
</span><span class="line"><span class="p">)</span> <span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个其实就是用到了 grouped_options_for_select ，我在前面的 <a href="http://dayuan.im/blog/explain-select-on-rails-hepler.html/">博文</a> 提到过这几个 select 的用法</p>

<!--more-->

<h6 id="form-">33 -定制你自己喜欢的 form 表单</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">LabeledFieldsWithErrors</span> <span class="o">&lt;</span> <span class="no">ActionView</span><span class="o">::</span><span class="no">Helpers</span><span class="o">::</span><span class="no">FormBuilder</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">errors_for</span><span class="p">(</span><span class="n">attribute</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="n">errors</span> <span class="o">=</span> <span class="n">object</span><span class="o">.</span><span class="n">errors</span><span class="o">[</span><span class="n">attribute</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">any?</span>
</span><span class="line">      <span class="vi">@template</span><span class="o">.</span><span class="n">content_tag</span><span class="p">(</span><span class="ss">:span</span><span class="p">,</span> <span class="n">errors</span><span class="o">.</span><span class="n">to_sentence</span><span class="p">,</span> <span class="n">class</span><span class="p">:</span> <span class="s2">&quot;error&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="nb">method</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="sr">%r{ \A (?&lt;labeled&gt;labeled_)?</span>
</span><span class="line"><span class="sr">              (?&lt;wrapped&gt;\w+?)</span>
</span><span class="line"><span class="sr">              (?&lt;with_errors&gt;_with_errors)? \z }x</span> <span class="o">=~</span> <span class="nb">method</span> <span class="ow">and</span>
</span><span class="line">       <span class="nb">respond_to?</span><span class="p">(</span><span class="n">wrapped</span><span class="p">)</span> <span class="ow">and</span> <span class="o">[</span><span class="n">labeled</span><span class="p">,</span> <span class="n">with_errors</span><span class="o">].</span><span class="n">any?</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:present?</span><span class="p">)</span>
</span><span class="line">      <span class="n">attribute</span><span class="p">,</span> <span class="n">tags</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="p">,</span> <span class="o">[</span> <span class="o">]</span>
</span><span class="line">      <span class="n">tags</span>           <span class="o">&lt;&lt;</span> <span class="n">label</span><span class="p">(</span><span class="n">attribute</span><span class="p">)</span> <span class="k">if</span> <span class="n">labeled</span><span class="o">.</span><span class="n">present?</span>
</span><span class="line">      <span class="n">tags</span>           <span class="o">&lt;&lt;</span> <span class="nb">send</span><span class="p">(</span><span class="n">wrapped</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class="line">      <span class="n">tags</span>           <span class="o">&lt;&lt;</span> <span class="n">errors_for</span><span class="p">(</span><span class="n">attribute</span><span class="p">)</span> <span class="k">if</span> <span class="n">with_errors</span><span class="o">.</span><span class="n">present?</span>
</span><span class="line">      <span class="n">tags</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="k">super</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>定义了几个不想去看懂的 method_missing 方法。。
修改 application.rb，添加配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="nb">require</span> <span class="s2">&quot;labeled_fields_with_errors&quot;</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">action_view</span><span class="o">.</span><span class="n">default_form_builder</span> <span class="o">=</span> <span class="no">LabeledFieldsWithErrors</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">action_view</span><span class="o">.</span><span class="n">field_error_proc</span>     <span class="o">=</span> <span class="o">-&gt;</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">_</span><span class="p">)</span> <span class="p">{</span> <span class="n">field</span> <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建 form 表单可以这样书写</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="sx">%= form_for @article do |f| %&gt;</span>
</span><span class="line"><span class="sx">  &lt;p&gt;&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span>
</span><span class="line">  <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="sx">%= f.labeled_text_field</span>
</span><span class="line"><span class="sx">  &lt;p&gt;&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field_with_errors</span>
</span><span class="line">  <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="sx">%= f.labeled_text_field_with_errors :subject %&gt;&lt;/p&gt;</span>
</span><span class="line"><span class="sx">  &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="sx">%&gt;</span>
</span><span class="line"><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>生成如下的 html 页面</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="n">input</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;article_subject&quot;</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;article[subject]&quot;</span> <span class="n">size</span><span class="o">=</span><span class="s2">&quot;30&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="sr">/&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="n">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&quot;article_subject&quot;</span><span class="o">&gt;</span><span class="no">Subject</span><span class="o">&lt;</span><span class="sr">/label&gt;</span>
</span><span class="line"><span class="sr">   &lt;input id=&quot;article_subject&quot; name=&quot;article[subject]&quot; size=&quot;30&quot; type=&quot;text&quot; value=&quot;&quot; /</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class="line"><span class="sr">&lt;p&gt;&lt;input id=&quot;article_subject&quot; name=&quot;article[subject]&quot; size=&quot;30&quot; type=&quot;text&quot; value=&quot;&quot; /</span><span class="o">&gt;</span>
</span><span class="line">   <span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;error&quot;</span><span class="o">&gt;</span><span class="n">can</span><span class="s1">&#39;t be blank&lt;/span&gt;&lt;/p&gt;</span>
</span><span class="line"><span class="s1">&lt;p&gt;&lt;label for=&quot;article_subject&quot;&gt;Subject&lt;/label&gt;</span>
</span><span class="line"><span class="s1">   &lt;input id=&quot;article_subject&quot; name=&quot;article[subject]&quot; size=&quot;30&quot; type=&quot;text&quot; value=&quot;&quot; /&gt;</span>
</span><span class="line"><span class="s1">   &lt;span class=&quot;error&quot;&gt;can&#39;</span><span class="n">t</span> <span class="n">be</span> <span class="n">blank</span><span class="o">&lt;</span><span class="sr">/span&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;!--</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span> <span class="o">--&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>不是很喜欢这种方式，反而把简单的html搞复杂了，让后来维护的人增加额外的学习成本</p>

<h6 id="inspire-theme-songs-about-your-work-">34 - Inspire theme songs about your work (再次暖场时刻)</h6>

<p>2011年 Farmhouse Conf 上主持人 Ron Evans 专门用口琴演奏了为大神 Tenderlove 写的歌 - <a href="http://www.confreaks.com/videos/529-farmhouseconf-ruby-hero-tenderlove">Ruby Hero Tenderlove! </a>，听了半天不知道唱的啥。。</p>

<p>想找下有没有美女 Rubist, 看了下貌似没有，都是大妈，这位 <a href="http://www.confreaks.com/videos/534-farmhouseconf-meghann-millard">Meghann Millard</a> 尚可远观，大姐装束妖娆，手握纸条，蚊蝇环绕，不时微笑，长的真有点像 gossip girl 里面的 Jenny Humphrey</p>

<h6 id="section">35 - 灵活的异常操作</h6>

<p>修改 application.rb 定义</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class="line"><span class="c1"># ...</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">exceptions_app</span> <span class="o">=</span> <span class="n">routes</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>每次有异常时路由都会被调用，你可以用下面的方法简单 render 404 页面</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">match</span> <span class="s2">&quot;/404&quot;</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s2">&quot;errors#not_found&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个例子也在开头提到的那篇博文里面，感兴趣可以去自己研究下</p>

<h6 id="sinatra-">36 - 给 Sinatra 添加路由</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">-</span> <span class="no">Gemfile</span>
</span><span class="line">
</span><span class="line"><span class="n">source</span> <span class="s1">&#39;https://rubygems.org&#39;</span>
</span><span class="line"><span class="c1"># ...</span>
</span><span class="line"><span class="n">gem</span> <span class="s2">&quot;resque&quot;</span><span class="p">,</span> <span class="nb">require</span><span class="p">:</span> <span class="s2">&quot;resque/server&quot;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">module</span> <span class="nn">AdminValidator</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">matches?</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nb">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s2">&quot;rack.session&quot;</span><span class="o">][</span><span class="s2">&quot;user_id&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">      <span class="n">current_user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
</span><span class="line">      <span class="n">current_user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:admin?</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="kp">false</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>挂载 Resque::Server 至 /admin/resque</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Blog</span><span class="o">::</span><span class="no">Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="nb">require</span> <span class="s2">&quot;admin_validator&quot;</span>
</span><span class="line">  <span class="n">constraints</span> <span class="no">AdminValidator</span> <span class="k">do</span>
</span><span class="line">    <span class="n">mount</span> <span class="no">Resque</span><span class="o">::</span><span class="no">Server</span><span class="p">,</span> <span class="n">at</span><span class="p">:</span> <span class="s2">&quot;/admin/resque&quot;</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个也没有试验，不清楚具体用法，sinatra 平时也基本不用</p>

<h6 id="csv">　37 - 导出CSV流</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">ArticlesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">index</span>
</span><span class="line">    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class="line">      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="k">do</span>
</span><span class="line">        <span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">      <span class="nb">format</span><span class="o">.</span><span class="n">csv</span> <span class="k">do</span>
</span><span class="line">        <span class="n">headers</span><span class="o">[</span><span class="s2">&quot;Content-Disposition&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="sx">%Q{attachment; filename=&quot;articles.csv&quot;}</span>
</span><span class="line">        <span class="nb">self</span><span class="o">.</span><span class="n">response_body</span> <span class="o">=</span> <span class="no">Enumerator</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">response</span><span class="o">|</span>
</span><span class="line">          <span class="n">csv</span>  <span class="o">=</span> <span class="no">CSV</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">response</span><span class="p">,</span> <span class="n">row_sep</span><span class="p">:</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class="line">          <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="sx">%w[Subject Created Status]</span>
</span><span class="line">          <span class="no">Article</span><span class="o">.</span><span class="n">find_each</span> <span class="k">do</span> <span class="o">|</span><span class="n">article</span><span class="o">|</span>
</span><span class="line">            <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="o">[</span> <span class="n">article</span><span class="o">.</span><span class="n">subject</span><span class="p">,</span>
</span><span class="line">                     <span class="n">article</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="ss">:long</span><span class="p">),</span>
</span><span class="line">                     <span class="n">article</span><span class="o">.</span><span class="n">status</span> <span class="o">]</span>
</span><span class="line">        <span class="err">￼￼</span>	<span class="k">end</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="c1"># ...</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>导出 csv 是很常用的功能，很多时候报表都需要，这个还是比较实用的</p>

<h6 id="do-some-work-in-the-background">38 - do some work in the background</h6>

<p>给 articles 添加文本类型 stats 字段</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="n">add_stats_to_articles</span> <span class="n">stats</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>添加一个计算 stats 方法 和 一个 after_create 方法，在创建一条记录后，会把 calculate_stats 添加到 Queue 队列，当队列中有任务时，后台创建一个线程执行该 job</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="n">serialize</span> <span class="ss">:stats</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">calculate_stats</span>
</span><span class="line">    <span class="n">words</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">    <span class="n">body</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/\S+/</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">word</span><span class="o">|</span> <span class="n">words</span><span class="o">[</span><span class="n">word</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span> <span class="p">}</span>
</span><span class="line">    <span class="nb">sleep</span> <span class="mi">10</span>  <span class="c1"># simulate a lot of work</span>
</span><span class="line">    <span class="nb">self</span><span class="o">.</span><span class="n">stats</span> <span class="o">=</span> <span class="p">{</span><span class="n">words</span><span class="p">:</span> <span class="n">words</span><span class="p">}</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="nb">require</span> <span class="s2">&quot;thread&quot;</span>
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">queue</span><span class="p">;</span> <span class="vi">@queue</span> <span class="o">||=</span> <span class="no">Queue</span><span class="o">.</span><span class="n">new</span> <span class="k">end</span>
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">thread</span>
</span><span class="line">    <span class="vi">@thread</span> <span class="o">||=</span> <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class="line">      <span class="k">while</span> <span class="n">job</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="n">pop</span>
</span><span class="line">        <span class="n">job</span><span class="o">.</span><span class="n">call</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="n">thread</span>  <span class="c1"># start the Thread</span>
</span><span class="line">
</span><span class="line">  <span class="n">after_create</span> <span class="ss">:add_stats</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">add_stats</span>
</span><span class="line">    <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">queue</span> <span class="o">&lt;&lt;</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">calculate_stats</span><span class="p">;</span> <span class="n">save</span> <span class="p">}</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>添加一条记录，10秒后会自动给该记录 stats 字段添加 words Hash</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">subject</span><span class="p">:</span> <span class="s2">&quot;Stats&quot;</span><span class="p">,</span> <span class="n">body</span><span class="p">:</span> <span class="s2">&quot;Lorem ipsum...&quot;</span><span class="p">);</span>
</span><span class="line"><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%H:%M:%S&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="s2">&quot;15:24:10&quot;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="o">[</span><span class="no">Article</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">stats</span><span class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%H:%M:%S&quot;</span><span class="p">)</span><span class="o">]</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="kp">nil</span><span class="p">,</span> <span class="s2">&quot;15:24:13&quot;</span><span class="o">]</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="o">[</span><span class="no">Article</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">stats</span><span class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%H:%M:%S&quot;</span><span class="p">)</span><span class="o">]</span>
</span><span class="line"><span class="o">=&gt;[</span><span class="p">{</span><span class="ss">:words</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;Lorem&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;ipsum&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">},</span> <span class="s2">&quot;15:24:26&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="rails-">39 - 用 Rails 生成静态站点</h6>

<p>修改 config/environment/development.rb</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Static</span><span class="o">::</span><span class="no">Application</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="c1"># Show full error reports and disable caching</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">consider_all_requests_local</span>       <span class="o">=</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">action_controller</span><span class="o">.</span><span class="n">perform_caching</span> <span class="o">=</span> <span class="o">!!</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;GENERATING_SITE&quot;</span><span class="o">]</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="c1"># Don&#39;t fallback to assets pipeline if a precompiled asset is missed</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">assets</span><span class="o">.</span><span class="n">compile</span> <span class="o">=</span> <span class="o">!</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;GENERATING_SITE&quot;</span><span class="o">]</span>
</span><span class="line">  <span class="c1"># Generate digests for assets URLs</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">assets</span><span class="o">.</span><span class="n">digest</span> <span class="o">=</span> <span class="o">!!</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;GENERATING_SITE&quot;</span><span class="o">]</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">protect_from_forgery</span>
</span><span class="line">  <span class="k">if</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;GENERATING_SITE&quot;</span><span class="o">]</span>
</span><span class="line">    <span class="n">after_filter</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span>
</span><span class="line">      <span class="n">c</span><span class="o">.</span><span class="n">cache_page</span><span class="p">(</span><span class="kp">nil</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="no">Zlib</span><span class="o">::</span><span class="no">BEST_COMPRESSION</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改 rake static:generate 任务</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s2">&quot;open-uri&quot;</span>
</span><span class="line"><span class="n">namespace</span> <span class="ss">:static</span> <span class="k">do</span>
</span><span class="line">  <span class="n">desc</span> <span class="s2">&quot;Generate a static copy of the site&quot;</span>
</span><span class="line">  <span class="n">task</span> <span class="ss">:generate</span> <span class="o">=&gt;</span> <span class="sx">%w[environment assets:precompile]</span> <span class="k">do</span>
</span><span class="line">    <span class="n">site</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;RSYNC_SITE_TO&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="nb">fail</span> <span class="s2">&quot;Must set RSYNC_SITE_TO&quot;</span> <span class="p">}</span>
</span><span class="line">    <span class="n">server</span> <span class="o">=</span> <span class="n">spawn</span><span class="p">(</span> <span class="p">{</span><span class="s2">&quot;GENERATING_SITE&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;true&quot;</span><span class="p">},</span>
</span><span class="line">                    <span class="s2">&quot;bundle exec rails s thin -p 3001&quot;</span> <span class="p">)</span>
</span><span class="line">    <span class="nb">sleep</span> <span class="mi">10</span>  <span class="c1"># FIXME: start when the server is up</span>
</span><span class="line">
</span><span class="line">    <span class="c1"># FIXME: improve the following super crude spider</span>
</span><span class="line">    <span class="n">paths</span> <span class="o">=</span> <span class="sx">%w[/]</span>
</span><span class="line">    <span class="n">files</span> <span class="o">=</span> <span class="o">[</span> <span class="o">]</span>
</span><span class="line">    <span class="k">while</span> <span class="n">path</span> <span class="o">=</span> <span class="n">paths</span><span class="o">.</span><span class="n">shift</span>
</span><span class="line">      <span class="n">files</span> <span class="o">&lt;&lt;</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;public&quot;</span><span class="p">,</span> <span class="n">path</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="sr">%r{/\z}</span><span class="p">,</span> <span class="s2">&quot;/index&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;.html&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="no">File</span><span class="o">.</span><span class="n">unlink</span><span class="p">(</span><span class="n">files</span><span class="o">.</span><span class="n">last</span><span class="p">)</span> <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span> <span class="n">files</span><span class="o">.</span><span class="n">last</span>
</span><span class="line">      <span class="n">files</span> <span class="o">&lt;&lt;</span> <span class="n">files</span><span class="o">.</span><span class="n">last</span> <span class="o">+</span> <span class="s2">&quot;.gz&quot;</span>
</span><span class="line">      <span class="no">File</span><span class="o">.</span><span class="n">unlink</span><span class="p">(</span><span class="n">files</span><span class="o">.</span><span class="n">last</span><span class="p">)</span> <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span> <span class="n">files</span><span class="o">.</span><span class="n">last</span>
</span><span class="line">      <span class="n">page</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;http://localhost:3001</span><span class="si">#{</span><span class="n">path</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">url</span><span class="o">|</span> <span class="n">url</span><span class="o">.</span><span class="n">read</span> <span class="p">}</span>
</span><span class="line">      <span class="n">page</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/&lt;a[^&gt;]+href=&quot;([^&quot;]+)&quot;/</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">        <span class="n">paths</span> <span class="o">&lt;&lt;</span> <span class="n">link</span><span class="o">.</span><span class="n">first</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;rsync -a public </span><span class="si">#{</span><span class="n">site</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="no">Process</span><span class="o">.</span><span class="n">kill</span><span class="p">(</span><span class="s2">&quot;INT&quot;</span><span class="p">,</span> <span class="n">server</span><span class="p">)</span>
</span><span class="line">    <span class="no">Process</span><span class="o">.</span><span class="n">wait</span><span class="p">(</span><span class="n">server</span><span class="p">)</span>
</span><span class="line">    <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;bundle exec rake assets:clean&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="n">files</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class="line">      <span class="no">File</span><span class="o">.</span><span class="n">unlink</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>生成到某个地方，去查看吧</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rake</span> <span class="n">static</span><span class="ss">:generate</span> <span class="no">RSYNC_SITE_TO</span><span class="o">=</span><span class="sr">/Users/</span><span class="n">james</span><span class="o">/</span><span class="no">Desktop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>后面几个都不感兴趣，没有测试，说好的42个，瞎扯了3个pass掉了，实在是吐血了</p>

<p>Over.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你可能错过的 Rails 技巧(三)]]></title>
    <link href="http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-3.html/"/>
    <updated>2012-08-31T09:55:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-3</id>
    <content type="html"><![CDATA[<p>中场休息时，去找了下 RailsConf 2012 的视频看了看，刚好看到关于 <a href="http://confreaks.com/videos/889-railsconf2012-ten-things-you-didn-t-know-rails-could-do">这篇</a> 的介绍，片子还挺长，41分钟，演讲者长相和声音都很不符合大家对 Rails 的认知，大家有兴趣的可以去听听</p>

<h6 id="section">21 - 自动写文件</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="no">Q_DIR</span> <span class="o">=</span> <span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span> <span class="o">+</span> <span class="s2">&quot;comment_queue&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">tap</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:mkpath</span><span class="p">)</span>
</span><span class="line">  <span class="n">after_save</span> <span class="ss">:queue_comment</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">queue_comment</span>
</span><span class="line">    <span class="no">File</span><span class="o">.</span><span class="n">atomic_write</span><span class="p">(</span><span class="no">Q_DIR</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2">.txt&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class="line">      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Article: </span><span class="si">#{</span><span class="n">article</span><span class="o">.</span><span class="n">subject</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;User:    </span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">      <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="n">body</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>找了下 <a href="http://api.rubyonrails.org/">Api</a> 是 Rails 对 Ruby 基础类的扩展</p>

<h6 id="hash">22 - 合并嵌套 Hash</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">nested</span><span class="p">:</span> <span class="p">{</span><span class="n">one</span><span class="p">:</span> <span class="mi">1</span><span class="p">}}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">nested</span><span class="p">:</span> <span class="p">{</span><span class="n">two</span><span class="p">:</span> <span class="mi">2</span><span class="p">})</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:nested</span><span class="o">=&gt;</span><span class="p">{</span><span class="ss">:two</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">}}</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">nested</span><span class="p">:</span> <span class="p">{</span><span class="n">one</span><span class="p">:</span> <span class="mi">1</span><span class="p">}}</span><span class="o">.</span><span class="n">deep_merge</span><span class="p">(</span><span class="n">nested</span><span class="p">:</span> <span class="p">{</span><span class="n">two</span><span class="p">:</span> <span class="mi">2</span><span class="p">})</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:nested</span><span class="o">=&gt;</span><span class="p">{</span><span class="ss">:one</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="ss">:two</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>主要是用到了 deep_merge 合并相同的 key
<!--more--></p>

<h6 id="hash-except">23 - Hash except</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="n">controller</span><span class="p">:</span> <span class="s2">&quot;home&quot;</span><span class="p">,</span> <span class="n">action</span><span class="p">:</span> <span class="s2">&quot;index&quot;</span><span class="p">,</span> <span class="n">from</span><span class="p">:</span> <span class="s2">&quot;Google&quot;</span><span class="p">}</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:controller</span><span class="o">=&gt;</span><span class="s2">&quot;home&quot;</span><span class="p">,</span> <span class="ss">:action</span><span class="o">=&gt;</span><span class="s2">&quot;index&quot;</span><span class="p">,</span> <span class="ss">:from</span><span class="o">=&gt;</span><span class="s2">&quot;Google&quot;</span><span class="p">}</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">params</span><span class="o">.</span><span class="n">except</span><span class="p">(</span><span class="ss">:controller</span><span class="p">,</span> <span class="ss">:action</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:from</span><span class="o">=&gt;</span><span class="s2">&quot;Google&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个方法经常会用到，可能用的人也很多</p>

<h6 id="add-defaultss-to-hash">24 - add defaultss to Hash</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">required</span><span class="p">:</span> <span class="kp">true</span><span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">optional</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:required</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">,</span> <span class="ss">:optional</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">}</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">required</span><span class="p">:</span> <span class="kp">true</span><span class="p">}</span><span class="o">.</span><span class="n">reverse_merge</span><span class="p">(</span><span class="n">optional</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:optional</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">,</span> <span class="ss">:required</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">}</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">required</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="n">optional</span><span class="p">:</span> <span class="kp">false</span><span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">optional</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:required</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">,</span> <span class="ss">:optional</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">}</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">required</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="n">optional</span><span class="p">:</span> <span class="kp">false</span><span class="p">}</span><span class="o">.</span><span class="n">reverse_merge</span><span class="p">(</span><span class="n">optional</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:optional</span><span class="o">=&gt;</span><span class="kp">false</span><span class="p">,</span> <span class="ss">:required</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这几个都是对 Hash 类的增强，merge 会替换原有相同 key 的值，但 reverse_merge 不会</p>

<p>从源码就可以看出，会事先 copy 一份 default hash</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">reverse_merge</span><span class="p">(</span><span class="n">other_hash</span><span class="p">)</span>
</span><span class="line">  <span class="k">super</span>
</span><span class="line">  <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">new_from_hash_copying_default</span><span class="p">(</span><span class="n">other_hash</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="stringvalue-">25 - String.value? 方法</h6>

<p>看下面的几个例子</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">env</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="s2">&quot;development&quot;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">env</span><span class="o">.</span><span class="n">test?</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="s2">&quot;magic&quot;</span><span class="o">.</span><span class="n">inquiry</span><span class="o">.</span><span class="n">magic?</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">article</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">first</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id: 1, ..., status: &quot;Draft&quot;&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">article</span><span class="o">.</span><span class="n">draft?</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">article</span><span class="o">.</span><span class="n">published?</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>env, “magic” 可以直接使用 value? 的方法，这个扩展是 String#inquiry 方法</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">inquiry</span>
</span><span class="line">  <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">StringInquirer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># 用method_missing 实现</span>
</span><span class="line"><span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">arguments</span><span class="p">)</span>
</span><span class="line">  <span class="k">if</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span><span class="o">[-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;?&quot;</span>
</span><span class="line">    <span class="nb">self</span> <span class="o">==</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="o">]</span>
</span><span class="line">  <span class="k">else</span>
</span><span class="line">    <span class="k">super</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>类型的一个例子，同样用到了 inquiry 方法</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="c1"># ...</span>
</span><span class="line">  <span class="no">STATUSES</span> <span class="o">=</span> <span class="sx">%w[Draft Published]</span>
</span><span class="line">  <span class="n">validates_inclusion_of</span> <span class="ss">:status</span><span class="p">,</span> <span class="k">in</span><span class="p">:</span> <span class="no">STATUSES</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="nb">method</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="nb">method</span> <span class="o">=~</span> <span class="sr">/\A</span><span class="si">#{</span><span class="no">STATUSES</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:downcase</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="si">}</span><span class="sr">\?\z/</span>
</span><span class="line">      <span class="n">status</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">inquiry</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">method</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="k">super</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-1">26 - 让你成为杂志的封面 （暖场之用）</h6>

<p>搞笑哥拿出了 DHH 当选 Linux journal 杂志封面的图片，会场也是哄堂大笑 ^.^</p>

<p><img src="http://www.rubyinside.com/wp-content/uploads/2006/05/dhh.png" alt="" /></p>

<h6 id="section-2">27 - 隐藏用户评论</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;!--</span> <span class="no">HTML</span> <span class="n">comments</span> <span class="n">stay</span> <span class="k">in</span> <span class="n">the</span> <span class="n">rendered</span> <span class="n">content</span> <span class="o">--&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sx">%# ERb comments do not %&gt;</span>
</span><span class="line"><span class="sx">&lt;h1&gt;Home Page&lt;/h1&gt;</span>
</span><span class="line"><span class="sx">#</span> <span class="err">生成的</span> <span class="n">html</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;!--</span> <span class="no">HTML</span> <span class="n">comments</span> <span class="n">stay</span> <span class="k">in</span> <span class="n">the</span> <span class="n">rendered</span> <span class="n">content</span> <span class="o">--&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Home</span> <span class="no">Page</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class="line"><span class="sr">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个一下没看懂。。试了下项目里面的代码，原来是隐藏的意思。。</p>

<h6 id="erb-">28 - 理解更短的 erb 语法</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># ...</span>
</span><span class="line"><span class="k">module</span> <span class="nn">Blog</span>
</span><span class="line">  <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class="line">
</span><span class="line">    <span class="c1"># Broken:  config.action_view.erb_trim_mode = &#39;%&#39;</span>
</span><span class="line">    <span class="no">ActionView</span><span class="o">::</span><span class="no">Template</span><span class="o">::</span><span class="no">Handlers</span><span class="o">::</span><span class="no">ERB</span><span class="o">.</span><span class="n">erb_implementation</span> <span class="o">=</span>
</span><span class="line">      <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ActionView</span><span class="o">::</span><span class="no">Template</span><span class="o">::</span><span class="no">Handlers</span><span class="o">::</span><span class="no">Erubis</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">        <span class="kp">include</span> <span class="o">::</span><span class="no">Erubis</span><span class="o">::</span><span class="no">PercentLineEnhancer</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="err">￼￼￼￼</span><span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接着在 view 页面替换用 % 表示原来 &lt;% if %&gt; &lt;% end %&gt;，有点像 slim</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="sx">% if </span><span class="n">current_user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:admin?</span><span class="p">)</span>
</span><span class="line">  <span class="o">&lt;%=</span> <span class="n">render</span> <span class="s2">&quot;edit_links&quot;</span> <span class="o">%&gt;</span>
</span><span class="line"><span class="o">%</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="block-">29 - 用 block 避免视图层赋值</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="n">table</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="sx">% @cart.products.each </span><span class="k">do</span> <span class="o">|</span><span class="n">product</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class="line"><span class="sx">    &lt;tr&gt;</span>
</span><span class="line">      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= product.name %&gt;&lt;/td&gt;</span>
</span><span class="line"><span class="sx">      &lt;td&gt;&lt;%=</span> <span class="n">number_to_currency</span> <span class="n">product</span><span class="o">.</span><span class="n">price</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class="line"><span class="sr">  &lt;% end %&gt;</span>
</span><span class="line"><span class="sr">  &lt;tr&gt;</span>
</span><span class="line"><span class="sr">    &lt;td&gt;Subtotal&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= number_to_currency @cart.total %&gt;&lt;/td&gt;</span>
</span><span class="line"><span class="sx">  &lt;/tr&gt;</span>
</span><span class="line"><span class="sx">  &lt;tr&gt;</span>
</span><span class="line"><span class="sx">    &lt;td&gt;Tax&lt;/td&gt;</span>
</span><span class="line"><span class="sx">    &lt;td&gt;&lt;%=</span> <span class="n">number_to_currency</span><span class="p">(</span><span class="n">tax</span> <span class="o">=</span> <span class="n">calculate_tax</span><span class="p">(</span><span class="vi">@cart</span><span class="o">.</span><span class="n">total</span><span class="p">))</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class="line"><span class="sr">  &lt;tr&gt;</span>
</span><span class="line"><span class="sr">    &lt;td&gt;Total&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;%=</span> <span class="n">number_to_currency</span><span class="p">(</span><span class="vi">@cart</span><span class="o">.</span><span class="n">total</span> <span class="o">+</span> <span class="n">tax</span><span class="p">)</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class="line"><span class="sr">&lt;/</span><span class="n">table</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>tax = calculate_tax(@cart.total)</code> 会先被赋值再被下面引用</p>

<p>用 block 重构下，把逻辑代码放到 helper 里面</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">module</span> <span class="nn">CartHelper</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">calculate_tax</span><span class="p">(</span><span class="n">total</span><span class="p">,</span> <span class="n">user</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">)</span>
</span><span class="line">    <span class="n">tax</span> <span class="o">=</span> <span class="no">TaxTable</span><span class="o">.</span><span class="n">for</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">calculate</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class="line">      <span class="k">yield</span> <span class="n">tax</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="n">tax</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="n">table</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="sx">% @cart.products.each </span><span class="k">do</span> <span class="o">|</span><span class="n">product</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class="line"><span class="sx">    &lt;tr&gt;</span>
</span><span class="line">      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= product.name %&gt;&lt;/td&gt;</span>
</span><span class="line"><span class="sx">      &lt;td&gt;&lt;%=</span> <span class="n">number_to_currency</span> <span class="n">product</span><span class="o">.</span><span class="n">price</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class="line"><span class="sr">  &lt;% end %&gt;</span>
</span><span class="line"><span class="sr">  &lt;tr&gt;</span>
</span><span class="line"><span class="sr">    &lt;td&gt;Subtotal&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= number_to_currency @cart.total %&gt;&lt;/td&gt;</span>
</span><span class="line"><span class="sx">  &lt;/tr&gt;</span>
</span><span class="line"><span class="sx">  &lt;% calculate_tax @cart.total do |tax| %&gt;</span>
</span><span class="line"><span class="sx">    &lt;tr&gt;</span>
</span><span class="line"><span class="sx">      &lt;td&gt;Tax&lt;/td&gt;</span>
</span><span class="line"><span class="sx">      &lt;td&gt;&lt;%=</span> <span class="n">number_to_currency</span> <span class="n">tax</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class="line"><span class="sr">    &lt;tr&gt;</span>
</span><span class="line"><span class="sr">      &lt;td&gt;Total&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class="line">      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;%=</span> <span class="n">number_to_currency</span><span class="p">(</span><span class="vi">@cart</span><span class="o">.</span><span class="n">total</span> <span class="o">+</span> <span class="n">tax</span><span class="p">)</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class="line"><span class="sr">  &lt;% end %&gt;</span>
</span><span class="line"><span class="sr">&lt;/</span><span class="n">table</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-3">30 - 同时生成多个标签</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Articles</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class="line"><span class="sr">  &lt;% @articles.each do |article| %&gt;</span>
</span><span class="line"><span class="sr">    &lt;%= content_tag_for(:div, article) do %&gt;</span>
</span><span class="line"><span class="sr">    &lt;h2&gt;&lt;%= article.subject %&gt;&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class="line"><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="sx">%= content_tag_for(:div, @articles) do |article| %&gt;</span>
</span><span class="line"><span class="sx">  &lt;h2&gt;&lt;%=</span> <span class="n">article</span><span class="o">.</span><span class="n">subject</span> <span class="sx">%&gt;&lt;/h2&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>content_tag_for 具体用法可以参考 <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/RecordTagHelper.html#method-i-content_tag_for">Api</a>，意思比较明白</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你可能错过的 Rails 技巧(二)]]></title>
    <link href="http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-2.html/"/>
    <updated>2012-08-30T21:39:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-2</id>
    <content type="html"><![CDATA[<p>接着上期说 <a href="http://dayuan.im/blog/10-things-you-didnt-know-rails-could-do-1.html/">你可能错过的 Rails 技巧(一)</a></p>

<h6 id="section">11 - 显示数据迁移记录</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate:status</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会输出 migration 的状态，这在解决迁移版本冲突的时候很有用</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">database</span><span class="p">:</span> <span class="n">db</span><span class="o">/</span><span class="n">development</span><span class="o">.</span><span class="n">sqlite3</span>
</span><span class="line">
</span><span class="line"> <span class="n">status</span>   <span class="no">Migration</span> <span class="no">ID</span>    <span class="no">Migration</span> <span class="no">Name</span>
</span><span class="line"> <span class="o">---------------------------------------</span>
</span><span class="line">   <span class="n">up</span>     <span class="mi">20120414155612</span>  <span class="no">Create</span> <span class="n">users</span>
</span><span class="line">   <span class="n">up</span>     <span class="mi">20120414160528</span>  <span class="no">Create</span> <span class="n">articles</span>
</span><span class="line">  <span class="n">down</span>    <span class="mi">20120414161355</span>  <span class="no">Create</span> <span class="n">comments</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="csv-">12 - 导入 csv 文件</h6>

<p>csv 文件内容如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Name</span><span class="p">,</span><span class="no">Email</span>
</span><span class="line"><span class="no">James</span><span class="p">,</span><span class="n">james</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span>
</span><span class="line"><span class="no">Dana</span><span class="p">,</span><span class="n">dana</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span>
</span><span class="line"><span class="no">Summer</span><span class="p">,</span><span class="n">summer</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建 rake 任务导入 users 表</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
</span><span class="line"><span class="n">namespace</span> <span class="ss">:users</span> <span class="k">do</span>
</span><span class="line">  <span class="n">desc</span> <span class="s2">&quot;Import users from a CSV file&quot;</span>
</span><span class="line">  <span class="n">task</span> <span class="ss">:import</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class="line">    <span class="n">path</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;CSV_FILE&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">      <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="o">*</span><span class="sx">%w[.. .. db data users.csv]</span><span class="p">)</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="no">CSV</span><span class="o">.</span><span class="n">foreach</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">headers</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="n">header_converters</span><span class="p">:</span> <span class="ss">:symbol</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">row</span><span class="o">|</span>
</span><span class="line">      <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">row</span><span class="o">.</span><span class="n">to_hash</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="csv">13 - 数据库中储存 csv</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span>  <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
</span><span class="line">  <span class="k">module</span> <span class="nn">CSVSerializer</span>
</span><span class="line">    <span class="kp">module_function</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">load</span><span class="p">(</span><span class="n">field</span><span class="p">);</span> <span class="n">field</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">parse_csv</span><span class="p">;</span> <span class="k">end</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">dump</span><span class="p">(</span><span class="n">object</span><span class="p">);</span> <span class="nb">Array</span><span class="p">(</span><span class="n">object</span><span class="p">)</span><span class="o">.</span><span class="n">to_csv</span><span class="p">;</span> <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="n">serialize</span> <span class="ss">:categories</span><span class="p">,</span> <span class="no">CSVSerializer</span>
</span><span class="line">
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span><span class="p">,</span> <span class="ss">:categories</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>serialize 用于在文本字段储存序列化的值，如序列，Hash，Array等，例如</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:preferences</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;background&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;black&quot;</span><span class="p">,</span> <span class="s2">&quot;display&quot;</span> <span class="o">=&gt;</span> <span class="n">large</span> <span class="p">})</span>
</span><span class="line"><span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">preferences</span> <span class="c1"># =&gt; { &quot;background&quot; =&gt; &quot;black&quot;, &quot;display&quot; =&gt; large }</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个例子中将 CSVSerializer to_csv序列化之后储存在 categories 这个文本类型字段中</p>

<h6 id="pluck-">14 - 用 pluck 查询</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="n">loading</span> <span class="n">development</span> <span class="n">environment</span><span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:email</span><span class="p">)</span>
</span><span class="line">  <span class="no">User</span> <span class="no">Load</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="n">email</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;james@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;dana@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;summer@example.com&quot;</span><span class="o">]</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span>
</span><span class="line">   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="n">email</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;james@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;dana@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;summer@example.com&quot;</span><span class="o">]</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span>
</span><span class="line">   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="no">DISTINCT</span> <span class="n">email</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;james@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;dana@example.com&quot;</span><span class="p">,</span> <span class="s2">&quot;summer@example.com&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>pluck 的实现方式其实也是 select 之后再 map</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">pluck</span><span class="p">(</span><span class="n">column_name</span><span class="p">)</span>
</span><span class="line">  <span class="n">column_name</span> <span class="o">=</span> <span class="n">column_name</span><span class="o">.</span><span class="n">to_s</span>
</span><span class="line">  <span class="n">klass</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">select_all</span><span class="p">(</span><span class="nb">select</span><span class="p">(</span><span class="n">column_name</span><span class="p">)</span><span class="o">.</span><span class="n">arel</span><span class="p">)</span><span class="o">.</span><span class="n">map!</span> <span class="k">do</span> <span class="o">|</span><span class="n">attributes</span><span class="o">|</span>
</span><span class="line">    <span class="n">klass</span><span class="o">.</span><span class="n">type_cast_attribute</span><span class="p">(</span><span class="n">attributes</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">first</span><span class="p">,</span> <span class="n">klass</span><span class="o">.</span><span class="n">initialize_attributes</span><span class="p">(</span><span class="n">attributes</span><span class="p">))</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="group-count">15 - 使用 group count</h6>

<p>创建 article 关联 model event</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">event</span> <span class="n">article</span><span class="ss">:belongs_to</span> <span class="n">triggle</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建3条 edit 记录和10条 view 记录。 Event.count 标明有13条记录，
group(:triggle).count 表示统计 triggle group 之后的数量，也可以用 count(:group =&gt; :trigger)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">article</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">last</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id:1, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">edit</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span> <span class="n">view</span><span class="p">:</span><span class="mi">10</span><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">trigger</span><span class="p">,</span> <span class="n">count</span><span class="o">|</span>
</span><span class="line"><span class="sc">?&gt;</span>   <span class="n">count</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class="line"><span class="sc">?&gt;</span>     <span class="no">Event</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">trigger</span><span class="p">:</span> <span class="n">trigger</span><span class="p">)</span><span class="o">.</span><span class="n">tap</span><span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">article</span><span class="o">=</span> <span class="n">article</span><span class="p">;</span> <span class="n">e</span><span class="o">.</span><span class="n">save!</span> <span class="p">}</span>
</span><span class="line"><span class="sc">?&gt;</span>   <span class="k">end</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:edit</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">,</span> <span class="ss">:view</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">}</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Event</span><span class="o">.</span><span class="n">count</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="mi">13</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Event</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:trigger</span><span class="p">)</span><span class="o">.</span><span class="n">count</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;edit&quot;</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">,</span> <span class="s2">&quot;view&quot;</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-1">16 - 覆盖关联关系</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Car</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:owner</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:previous_owner</span><span class="p">,</span> <span class="n">class_name</span><span class="p">:</span> <span class="s2">&quot;Owner&quot;</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">owner</span><span class="o">=</span><span class="p">(</span><span class="n">new_owner</span><span class="p">)</span>
</span><span class="line">    <span class="nb">self</span><span class="o">.</span><span class="n">previous_owner</span> <span class="o">=</span> <span class="n">owner</span>
</span><span class="line">    <span class="k">super</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>car更改 owner 时，如果有了 new_owner，就把原 owner 赋给 previous_owner，注意要加上 super</p>

<h6 id="section-2">17 - 构造示例数据</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, name: &quot;James&quot;, email: &quot;</span>
</span><span class="line"><span class="err">￼￼￼￼￼￼￼</span><span class="n">james</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span><span class="s2">&quot;, ...&gt;</span>
</span><span class="line"><span class="s2">￼￼￼￼￼&gt;&gt; jeg2 = User.instantiate(&quot;</span><span class="nb">id</span><span class="s2">&quot; =&gt; 1, &quot;</span><span class="n">email</span><span class="s2">&quot; =&gt; &quot;</span>
</span><span class="line"><span class="err">￼￼￼￼</span><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, email: &quot;james@example.com&quot;&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">jeg2</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;James Edward Gray II&quot;</span>
</span><span class="line"><span class="err">￼￼￼￼</span><span class="o">=&gt;</span> <span class="s2">&quot;James Edward Gray II&quot;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">jeg2</span><span class="o">.</span><span class="n">save!</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="err">￼￼￼￼￼￼</span><span class="n">james</span><span class="vi">@example</span><span class="o">.</span><span class="n">com</span><span class="s2">&quot;, ...&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>伪造一条记录，并不是数据库中的真实数据，也不会把原有数据覆盖</p>

<h6 id="postgresql--string">18 - PostgreSQL 中使用无限制的 string</h6>

<p>去掉适配器中对 string 长度的限制，这个应该是 PostgreSQL 数据库的特性</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">module</span> <span class="nn">PsqlApp</span>
</span><span class="line">  <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class="line">    <span class="c1"># Switch to limitless strings</span>
</span><span class="line">    <span class="n">initializer</span> <span class="s2">&quot;postgresql.no_default_string_limit&quot;</span> <span class="k">do</span>
</span><span class="line">      <span class="no">ActiveSupport</span><span class="o">.</span><span class="n">on_load</span><span class="p">(</span><span class="ss">:active_record</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">        <span class="n">adapter</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">ConnectionAdapters</span><span class="o">::</span><span class="no">PostgreSQLAdapter</span>
</span><span class="line">        <span class="n">adapter</span><span class="o">::</span><span class="no">NATIVE_DATABASE_TYPES</span><span class="o">[</span><span class="ss">:string</span><span class="o">].</span><span class="n">delete</span><span class="p">(</span><span class="ss">:limit</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"> <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建 user 表，bio 字符串</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">user</span> <span class="n">bio</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">very_long_bio</span> <span class="o">=</span> <span class="s2">&quot;X&quot;</span> <span class="o">*</span> <span class="mi">10_000</span><span class="p">;</span> <span class="ss">:set</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="ss">:set</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">bio</span><span class="p">:</span> <span class="n">very_long_bio</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, bio:</span>
</span><span class="line"><span class="s2">&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span>
</span><span class="line"><span class="s2">XX...&quot;</span><span class="p">,</span> <span class="n">created_at</span><span class="p">:</span> <span class="s2">&quot;2012-04-14 23:02:08&quot;</span><span class="p">,</span>
</span><span class="line"><span class="n">updated_at</span><span class="p">:</span> <span class="s2">&quot;2012-04-14 23:02:08&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">bio</span><span class="o">.</span><span class="n">size</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="mi">10000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="postgresql-">19 - PostgreSQL 中使用全文搜索</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">article</span> <span class="n">subject</span> <span class="n">body</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>更改迁移文件，添加索引和 articles_search_update 触发器</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateArticles</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:articles</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:subject</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span>   <span class="ss">:body</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">column</span> <span class="ss">:search</span><span class="p">,</span> <span class="s2">&quot;tsvector&quot;</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">execute</span> <span class="o">&lt;&lt;-</span><span class="no">END_SQL</span>
</span><span class="line"><span class="sh">      CREATE INDEX articles_search_index</span>
</span><span class="line"><span class="sh">      ON articles USING gin(search);</span>
</span><span class="line"><span class="sh">      CREATE TRIGGER articles_search_update</span>
</span><span class="line"><span class="sh">      BEFORE INSERT OR UPDATE ON articles</span>
</span><span class="line"><span class="sh">      FOR EACH ROW EXECUTE PROCEDURE</span>
</span><span class="line"><span class="sh">      tsvector_update_trigger( search, &#39;pg_catalog.english&#39;, subject, body);</span>
</span><span class="line"><span class="no">    END_SQL</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Model 中添加 search 方法</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span>
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
</span><span class="line">    <span class="n">sql</span> <span class="o">=</span> <span class="n">sanitize_sql_array</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;plainto_tsquery(&#39;english&#39;, ?)&quot;</span><span class="p">,</span> <span class="n">query</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">    <span class="n">where</span><span class="p">(</span>
</span><span class="line">      <span class="s2">&quot;search @@ </span><span class="si">#{</span><span class="n">sql</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">    <span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span>
</span><span class="line">      <span class="s2">&quot;ts_rank_cd(search, </span><span class="si">#{</span><span class="n">sql</span><span class="si">}</span><span class="s2">) DESC&quot;</span>
</span><span class="line">    <span class="p">)</span>
</span><span class="line"><span class="k">end</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>PostgreSQL 数据库没用过，这段看例子吧</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">subject</span><span class="p">:</span> <span class="s2">&quot;Full Text Search&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id: 1, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">body</span><span class="p">:</span> <span class="s2">&quot;A stemmed search.&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id: 2, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="n">body</span><span class="p">:</span> <span class="s2">&quot;You won&#39;t find me!&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;Article id: 3, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;search&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span><span class="o">.</span><span class="n">subject</span> <span class="o">||</span> <span class="n">a</span><span class="o">.</span><span class="n">body</span> <span class="p">}</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;Full Text Search&quot;</span><span class="p">,</span> <span class="s2">&quot;A stemmed search.&quot;</span><span class="o">]</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;stemming&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span><span class="o">.</span><span class="n">subject</span> <span class="o">||</span> <span class="n">a</span><span class="o">.</span><span class="n">body</span> <span class="p">}</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;A stemmed search.&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-3">21 - 每个用户使用不同的数据库</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">-</span> <span class="n">user_database</span><span class="o">.</span><span class="n">rb</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">connect_to_user_database</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class="line">  <span class="n">config</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">configurations</span><span class="o">[</span><span class="s2">&quot;development&quot;</span><span class="o">].</span><span class="n">merge</span><span class="p">(</span><span class="s2">&quot;database&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;db/</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">.sqlite3&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="n">config</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建 rake 任务：新增用户数据库和创建</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s2">&quot;user_database&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">namespace</span> <span class="ss">:db</span> <span class="k">do</span>
</span><span class="line">  <span class="n">desc</span> <span class="s2">&quot;Add a new user database&quot;</span>
</span><span class="line">  <span class="n">task</span> <span class="ss">:add</span> <span class="o">=&gt;</span> <span class="sx">%w[environment load_config]</span> <span class="k">do</span>
</span><span class="line">    <span class="nb">name</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;DB_NAME&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="nb">fail</span> <span class="s2">&quot;DB_NAME is required&quot;</span> <span class="p">}</span>
</span><span class="line">    <span class="n">connect_to_user_database</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class="line">    <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">namespace</span> <span class="ss">:migrate</span> <span class="k">do</span>
</span><span class="line">    <span class="n">desc</span> <span class="s2">&quot;Migrate all user databases&quot;</span>
</span><span class="line">    <span class="n">task</span> <span class="ss">:all</span> <span class="o">=&gt;</span> <span class="sx">%w[environment load_config]</span> <span class="k">do</span>
</span><span class="line">      <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">.</span><span class="n">verbose</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;VERBOSE&quot;</span><span class="p">,</span> <span class="s2">&quot;true&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;true&quot;</span>
</span><span class="line">      <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s2">&quot;db/*.sqlite3&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class="line">        <span class="k">next</span> <span class="k">if</span> <span class="n">file</span> <span class="o">==</span> <span class="s2">&quot;db/test.sqlite3&quot;</span>
</span><span class="line">        <span class="n">connect_to_user_database</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s2">&quot;.sqlite3&quot;</span><span class="p">))</span>
</span><span class="line">        <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migrator</span><span class="o">.</span><span class="n">migrate</span><span class="p">(</span>
</span><span class="line">          <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migrator</span><span class="o">.</span><span class="n">migrations_paths</span><span class="p">,</span>
</span><span class="line">          <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">].</span><span class="n">to_i</span>
</span><span class="line">        <span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">migration</span><span class="o">|</span>
</span><span class="line">          <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;SCOPE&quot;</span><span class="o">].</span><span class="n">blank?</span> <span class="o">||</span> <span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;SCOPE&quot;</span><span class="o">]</span> <span class="o">==</span> <span class="n">migration</span><span class="o">.</span><span class="n">scope</span><span class="p">)</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行几个rake 任务创建不同的数据库</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">user</span> <span class="nb">name</span>
</span><span class="line"><span class="err">$</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:add</span> <span class="no">DB_NAME</span><span class="o">=</span><span class="n">ruby_rogues</span>
</span><span class="line"><span class="err">$</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:add</span> <span class="no">DB_NAME</span><span class="o">=</span><span class="n">grays</span>
</span><span class="line"><span class="err">$</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate:all</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrating</span> <span class="o">==================================</span>
</span><span class="line"><span class="o">--</span> <span class="n">create_table</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
</span><span class="line">   <span class="o">-&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mo">000</span><span class="mi">8</span><span class="n">s</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrated</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mo">000</span><span class="mi">8</span><span class="n">s</span><span class="p">)</span> <span class="o">=========================</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrating</span> <span class="o">==================================</span>
</span><span class="line"><span class="o">--</span> <span class="n">create_table</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
</span><span class="line">   <span class="o">-&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0007</span><span class="n">s</span>
</span><span class="line"><span class="o">==</span>  <span class="no">CreateUsers</span><span class="p">:</span> <span class="n">migrated</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mo">000</span><span class="mi">8</span><span class="n">s</span><span class="p">)</span> <span class="o">=========================</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建几条记录，为不同的数据库创建不同的数据</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">connect_to_user_database</span><span class="p">(</span><span class="s2">&quot;ruby_rogues&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::ConnectionAdapters::ConnectionPool...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Chuck&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, name: &quot;Chuck&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Josh&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 2, name: &quot;Josh&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Avdi&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 3, name: &quot;Avdi&quot;, ...&gt;</span>
</span><span class="line"><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">connect_to_user_database</span><span class="p">(</span><span class="s2">&quot;grays&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::ConnectionAdapters::ConnectionPool...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;James&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 1, name: &quot;James&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Dana&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 2, name: &quot;Dana&quot;, ...&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Summer&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="c1">#&lt;User id: 3, name: &quot;Summer&quot;, ...&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>ApplicationController 里面添加 before_filter 根据登陆的二级域名判断连接哪个数据库</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">protect_from_forgery</span>
</span><span class="line">  <span class="n">before_filter</span> <span class="ss">:connect_to_database</span>
</span><span class="line"><span class="kp">private</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">connect_to_database</span>
</span><span class="line">    <span class="n">connect_to_user_database</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">subdomains</span><span class="o">.</span><span class="n">first</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>中场休息，未完待续。。。内容真心多啊，不过有用的不多</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你可能错过的 Rails 技巧(一)]]></title>
    <link href="http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-1.html/"/>
    <updated>2012-08-30T11:22:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/10-things-you-didnt-know-rails-could-do-1</id>
    <content type="html"><![CDATA[<p>记得前段时间 RailsConf2012 之后看过一个不错的pdf，<a href="https://speakerdeck.com/u/jeg2/p/10-things-you-didnt-know-rails-could-do">10 things you didn’t know rails could do</a></p>

<p>说是10个，但是给出了42个实例，这几天抽空又回味了下，料很多，写的很好，顺便总结学习下</p>

<p>Pass 掉第一个 <a href="http://fridayhug.com">fridayhug</a>，我们是开心拥抱每一天</p>

<h6 id="rails-app">1 - 最小的rails app</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="sx">%w(action_controller/railtie coderay markaby)</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;</span><span class="nb">method</span><span class="p">(</span><span class="ss">:require</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">run</span> <span class="no">TheSmallestRailsApp</span> <span class="o">||=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Rails</span><span class="o">::</span><span class="no">Application</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">secret_token</span> <span class="o">=</span> <span class="n">routes</span><span class="o">.</span><span class="n">append</span> <span class="p">{</span>
</span><span class="line">    <span class="n">root</span> <span class="n">to</span><span class="p">:</span> <span class="nb">proc</span> <span class="p">{</span>
</span><span class="line">      <span class="o">[</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;Content-Type&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;text/html&quot;</span><span class="p">},</span> <span class="o">[</span><span class="no">Markaby</span><span class="o">::</span><span class="no">Builder</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span>
</span><span class="line">        <span class="n">title</span> <span class="vi">@title</span> <span class="o">=</span> <span class="s2">&quot;The Smallest Rails App&quot;</span>
</span><span class="line">        <span class="n">h3</span> <span class="s2">&quot;I am </span><span class="si">#@title</span><span class="s2">!&quot;</span>
</span><span class="line">        <span class="nb">p</span> <span class="s2">&quot;Here is my source code:&quot;</span>
</span><span class="line">        <span class="n">div</span> <span class="p">{</span> <span class="no">CodeRay</span><span class="o">.</span><span class="n">scan_file</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="n">line_numbers</span><span class="p">:</span> <span class="ss">:table</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line">        <span class="nb">p</span> <span class="p">{</span> <span class="n">a</span> <span class="s2">&quot;Make me smaller&quot;</span><span class="p">,</span> <span class="n">href</span><span class="p">:</span> <span class="s2">&quot;//goo.gl/YdRpy&quot;</span> <span class="p">}</span>
</span><span class="line">      <span class="p">}</span><span class="o">]]</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span><span class="o">.</span><span class="n">to_s</span>
</span><span class="line">  <span class="kp">initialize</span><span class="o">!</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="todo">2 - 提醒功能 TODO</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class="line">  <span class="c1"># TODO:  Make it possible to create new users.</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="c1"># FIXME: Should token really  be accessible?</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:bil</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:token</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;%</span><span class="c1"># OPTIMIZE: Paginate this listing. %&gt;</span>
</span><span class="line"><span class="o">&lt;%=</span> <span class="n">render</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行 <code>rake notes</code>
<!--more--></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">controllers</span><span class="o">/</span><span class="n">users_controller</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">2</span><span class="o">]</span> <span class="o">[</span><span class="no">TODO</span><span class="o">]</span> <span class="no">Make</span> <span class="n">it</span> <span class="n">possible</span> <span class="n">to</span> <span class="n">create</span> <span class="kp">new</span> <span class="n">users</span><span class="o">.</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">user</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">2</span><span class="o">]</span> <span class="o">[</span><span class="no">FIXME</span><span class="o">]</span> <span class="no">Should</span> <span class="n">token</span> <span class="n">really</span> <span class="n">be</span> <span class="n">accessible?</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">/</span><span class="n">articles</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">erb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">1</span><span class="o">]</span> <span class="o">[</span><span class="no">OPTIMIZE</span><span class="o">]</span> <span class="no">Paginate</span> <span class="n">this</span> <span class="n">listing</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>查看单独的 TODO / FIXME / OPTIMIZE</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rake</span> <span class="n">notes</span><span class="ss">:todo</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">controllers</span><span class="o">/</span><span class="n">users_controller</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">2</span><span class="o">]</span> <span class="no">Make</span> <span class="n">it</span> <span class="n">possible</span> <span class="n">to</span> <span class="n">create</span> <span class="kp">new</span> <span class="n">users</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以自定义提醒名称</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span>
</span><span class="line">  <span class="c1"># JEG2: Add that code from your blog here.</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>不过需要敲一长串，可以alias个快捷键</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rake</span> <span class="n">notes</span><span class="ss">:custom</span> <span class="no">ANNOTATION</span><span class="o">=</span><span class="no">JEG2</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">article</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span>
</span><span class="line">  <span class="o">*</span> <span class="o">[</span> <span class="mi">4</span><span class="o">]</span><span class="no">Add</span> <span class="n">that</span> <span class="n">code</span> <span class="n">from</span> <span class="n">your</span> <span class="n">blog</span> <span class="n">here</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="rails-c">3 - 沙箱模式执行 rails c</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">c</span> <span class="o">--</span><span class="n">sandbox</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>沙箱模式会有回滚事务机制，对数据库的操作在退出之前都会自动回滚到之前未修改的数据</p>

<h6 id="rails-c--rails-helper-">4 - 在 rails c 控制台中使用 rails helper 方法</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class="line"><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">helper</span><span class="o">.</span><span class="n">number_to_currency</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="s2">&quot;$100.00&quot;</span>
</span><span class="line"><span class="o">&gt;&gt;</span> <span class="n">helper</span><span class="o">.</span><span class="n">time_ago_in_words</span><span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="n">days</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
</span><span class="line"><span class="o">=&gt;</span> <span class="s2">&quot;3 days&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="thin--webrick">5 - 开发模式用 thin 代替 webrick</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class="line">  <span class="n">gem</span> <span class="s1">&#39;thin&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">rails</span> <span class="n">s</span> <span class="n">thin</span> <span class="o">/</span> <span class="n">thin</span> <span class="n">start</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section">6 - 允许自定义配置</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">-</span> <span class="n">lib</span><span class="o">/</span><span class="n">custom</span><span class="o">/</span><span class="n">railtie</span><span class="o">.</span><span class="n">rb</span>
</span><span class="line">
</span><span class="line"> <span class="k">module</span> <span class="nn">Custom</span>
</span><span class="line">   <span class="k">class</span> <span class="nc">Railtie</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Railtie</span>
</span><span class="line">     <span class="n">config</span><span class="o">.</span><span class="n">custom</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">OrderedOptions</span><span class="o">.</span><span class="n">new</span>
</span><span class="line">   <span class="k">end</span>
</span><span class="line"> <span class="k">end</span>
</span><span class="line">
</span><span class="line"> <span class="o">-</span> <span class="n">config</span><span class="o">/</span><span class="n">application</span><span class="o">.</span><span class="n">rb</span>
</span><span class="line">
</span><span class="line"> <span class="n">require_relative</span> <span class="s2">&quot;../lib/custom/railtie&quot;</span>
</span><span class="line">
</span><span class="line"> <span class="k">module</span> <span class="nn">Blog</span>
</span><span class="line">   <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class="line">     <span class="c1"># ...</span>
</span><span class="line">     <span class="n">config</span><span class="o">.</span><span class="n">custom</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="mi">42</span>
</span><span class="line">   <span class="k">end</span>
</span><span class="line"> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="keep-funny">7 - keep funny</h6>

<p>作者给出了个介绍 ruby 以及一些相关 blog的网站 <a href="http://www.rubydramas.com">rubydramas</a>，搞笑的是这个网站右上角标明</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Powered</span> <span class="n">by</span> <span class="no">PHP</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>用 <a href="http://isitrails.com">isitrails.com</a> 检查了下，果然不是用 rails 做的，这个应该是作者分享 ppt 过程中的一个小插曲吧</p>

<h6 id="section-1">8 -理解简写的迁移文件</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resources</span> <span class="n">user</span> <span class="nb">name</span><span class="ss">:string</span> <span class="n">email</span><span class="ss">:string</span> <span class="n">token</span><span class="ss">:string</span> <span class="n">bio</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>字段会被默认为 string 属性，查看了下 <a href="https://github.com/rails/rails/blob/master/railties/lib/rails/generators/generated_attribute.rb#LC55">源码</a>，果然有初始化定义</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resources</span> <span class="n">user</span> <span class="nb">name</span> <span class="n">email</span> <span class="n">token</span><span class="ss">:string</span><span class="p">{</span><span class="mi">6</span><span class="p">}</span> <span class="n">bio</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会生成用样的 migration 文件</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:email</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:token</span><span class="p">,</span> <span class="ss">:limit</span> <span class="o">=&gt;</span> <span class="mi">6</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:bio</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="migration-">9 - 给 migration 添加索引</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">user</span> <span class="nb">name</span><span class="ss">:index</span> <span class="n">email</span><span class="ss">:uniq</span> <span class="n">token</span><span class="ss">:string</span><span class="p">{</span><span class="mi">6</span><span class="p">}</span> <span class="n">bio</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会生成 name 和 email 的索引，同时限定 email 唯一</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:email</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:token</span><span class="p">,</span> <span class="ss">:limit</span> <span class="o">=&gt;</span> <span class="mi">6</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:bio</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="n">add_index</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:name</span>
</span><span class="line">    <span class="n">add_index</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:unique</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h6 id="section-2">10 - 添加关联关系</h6>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">article</span> <span class="n">user</span><span class="ss">:references</span> <span class="n">subject</span> <span class="n">body</span><span class="ss">:text</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>会自动关联生成对应的 belongs_to 和 外键，并添加索引</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">CreateArticles</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">change</span>
</span><span class="line">    <span class="n">create_table</span> <span class="ss">:articles</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">references</span> <span class="ss">:user</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:subject</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:body</span>
</span><span class="line">      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">add_index</span> <span class="ss">:articles</span><span class="p">,</span> <span class="ss">:user_id</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class="line">  <span class="n">attr_accessible</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:subject</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>未完待续。。。太长了，还是分期吧</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Seo]]></title>
    <link href="http://Bigcircle.github.com/blog/add-seo-to-octopress.html/"/>
    <updated>2012-08-29T21:50:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/add-seo-to-octopress</id>
    <content type="html"><![CDATA[<p>用 Google 大婶搜索了下 Octopress 可以定制的内容，发现可以定制的东西真的还蛮多的，也基本都是平常能看得的几个功能，比如下面几个：</p>

<ul>
  <li><a href="http://tinyxd.me/blog/2012/07/09/add-douban-aside/">给octopress博客添加豆瓣侧边栏</a></li>
  <li><a href="http://caok.github.com/blog/2012/06/24/install-octopress-to-write-blog/">添加新浪微博侧边栏</a></li>
  <li><a href="http://log4d.com/2012/05/tag-cloud/">给octopress加上标签云</a></li>
  <li><a href="http://shanewfx.github.com/blog/2012/08/13/improve-blog-theme/">添加about，友情链接</a></li>
</ul>

<p>不如我一向遵循 <code>less is more, more is less</code> 的原则，不想把 blog 弄的太臃肿，而且这些功能对我也基本用处不大，没有微博上碎嘴的习惯，豆瓣上也只去电影区看影评，tag云感觉和category重复，友链暂时也没有，等等。先存个链接，说不定什么时候就想加上。。</p>

<p>目前先保持简洁的风格，稍微做下 seo 优化，过程参考 <a href="http://www.yatishmehta.in/seo-for-octopress">这篇</a></p>

<h5 id="meta-data-description">添加 meta data description</h5>

<p>文章生产时默认会生成 layout, title, date, comments, categories 这几项，如果多添加2个选项 ‘keywords’, ‘description’，会在 generate 文章的时候自动生成相应的 meta 标签
<!--more--></p>

<p>如果文章 header 写成这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">layout: post
</span><span class="line">title: &quot;SEO for Octopress&quot;
</span><span class="line">date: 2012-04-22 09:55
</span><span class="line">comments: true
</span><span class="line">categories: [seo,octopress]
</span><span class="line">keywords: seo,octopress,heroku
</span><span class="line">description: How to optimize Octopress for SEO,Heroku
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>生成的post head标签中会生成</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;title&gt;</span>SEO for Octopress <span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;author&quot;</span> <span class="na">content=</span><span class="s">&quot;Yatish Mehta&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span> <span class="na">content=</span><span class="s">&quot;How to optimize Octopress for SEO&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;seo,octopress&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果不想每次都得手动添加，可以修改 Rakefile - new_post task任务</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;layout: post&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;title: </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">title</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/&amp;/</span><span class="p">,</span><span class="s1">&#39;&amp;amp;&#39;</span><span class="p">)</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;date: </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d %H:%M&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;comments: true&quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;categories: &quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;keywords: &quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;description: &quot;</span>
</span><span class="line">  <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="meta-data">主页的 meta data</h5>

<p>上面的方法只能给每个 post 生成对应的 meta标签，如果要给主页添加 meta 标签，修改 source/_includes/head.html，添加以下内容</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="n">meta</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="n">content</span><span class="o">=</span><span class="s2">&quot;{{ site.author }}&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">capture</span> <span class="n">description</span> <span class="sx">%}{% if page.description %}</span><span class="p">{{</span> <span class="n">page</span><span class="o">.</span><span class="n">description</span> <span class="p">}}{</span><span class="o">%</span> <span class="k">elsif</span> <span class="n">site</span><span class="o">.</span><span class="n">description</span> <span class="sx">%}{{ site.description }</span><span class="p">}{</span><span class="o">%</span><span class="k">else</span><span class="sx">%}{{ content | raw_content }</span><span class="p">}{</span><span class="o">%</span> <span class="n">endif</span> <span class="sx">%}{% endcapture %}</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">meta</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="n">content</span><span class="o">=</span><span class="s2">&quot;{{ description | strip_html | condense_spaces | truncate:150 }}&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">keywords</span> <span class="sx">%}&lt;meta name=&quot;keywords&quot; content=&quot;{{ page.keywords }</span><span class="p">}</span><span class="s2">&quot;&gt;{%else%}&lt;meta name=&quot;</span><span class="n">keywords</span><span class="s2">&quot; content=&quot;</span><span class="p">{{</span> <span class="n">site</span><span class="o">.</span><span class="n">keywords</span> <span class="p">}}</span><span class="s2">&quot;&gt;{% endif %}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这段内容其实已经被引入了 Octopress 源码里面了，所以只需要在 _config.yml 文件中填充全局的 keywords 和 description, 比如这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">description</span><span class="p">:</span> <span class="no">Tips</span><span class="p">,</span> <span class="n">tricks</span><span class="p">,</span> <span class="ow">and</span> <span class="n">hacks</span> <span class="n">on</span> <span class="no">Ruby</span> <span class="n">on</span> <span class="no">Rails</span> <span class="n">development</span><span class="o">.</span>
</span><span class="line"><span class="n">keywords</span><span class="p">:</span> <span class="n">ruby</span><span class="p">,</span><span class="n">ruby</span> <span class="n">on</span> <span class="n">rails</span><span class="p">,</span><span class="n">salesforce</span><span class="p">,</span><span class="n">gem</span><span class="p">,</span><span class="n">web</span> <span class="n">development</span><span class="p">,</span><span class="no">Ajax</span><span class="p">,</span><span class="no">SEO</span><span class="p">,</span><span class="n">scraping</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样 /blog 主页就会自动生成对应的 meta</p>

<h5 id="section">指向单独的域名</h5>

<p>有时候你的域名可能同时对带 www 前缀和不带前缀同时有效，这种情况有可能会影响网站的 page rank，你需要把其中的一个作为主域名，重定向另一个指向这个域名</p>

<p>以上只是一些简单的 seo 技巧，本着有总比没有强点的原则稍加修改就OK了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译Textmate]]></title>
    <link href="http://Bigcircle.github.com/blog/compile-textmate.html/"/>
    <updated>2012-08-28T23:43:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/compile-textmate</id>
    <content type="html"><![CDATA[<p>前段时间 <a href="http://macromates.com/">Textmate</a> 开源着实让大家大吃一斤，论坛上，Twitter，包括微博上也都是各种转发，谈论。</p>

<p>Textmate 无须多作介绍，知道的应该都知道。号称能够和 Emacs Vim 并称的神器，当然是在 Mac 上和 Ruby 界，很多编译库都是系统依赖的，作者可能也没想移植到 linux/windows 下，所以没造成大火的局面，不过美金也赚的差不多了</p>

<p>我从做开发伊始就一直用的 Sublime Text 2，也是一个大量借鉴 Textmate 理念和功能的产品，易用性相当不错，也有很多现成的包可以用，跨平台，不爽的是快捷键不能跨，windows下快捷键得另改，好在现在已经不需要切到 windows 了，也就少了这个烦恼。上次在 v2ex 看到有人发编译后的app，感觉编译应该不是很难。以前一直想试用下，但是version 1下的汉字显示实在是不行，现在升级到版本2了貌似解决了这个问题，就尝试着编译个尝尝鲜，看和 ST2 哪个更好用</p>

<p>Github 上托管地址 <a href="https://github.com/textmate/textmate">Here</a></p>

<h5 id="section">安装编译所需工具</h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="n">ragel</span> <span class="n">boost</span> <span class="n">multimarkdown</span> <span class="n">hg</span> <span class="n">ninja</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>boost 源码放在 sourceforge 上，下载可能需要挂代理，而且速度也很慢
ninja 最近才新加到 brew 的 Formula 里面，如果安装提示没有的话需要 brew update 下</p>

<!--more-->

<h5 id="pgrep-pkill">查看是否有 pgrep pkill</h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">which</span> <span class="n">pgrep</span> <span class="n">pkill</span>
</span><span class="line"><span class="cp"># 如果没有的话需要安装 proctools</span>
</span><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="n">proctools</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="clang-32--40-">需要clang 3.2 / 4.0 版本</h5>

<p>一般安装了 xcode 都已经安装好了 clang，直接查看版本</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">clang</span> <span class="o">-</span><span class="n">v</span>
</span><span class="line">
</span><span class="line"><span class="n">Apple</span> <span class="n">clang</span> <span class="n">version</span> <span class="mf">4.0</span> <span class="p">(</span><span class="n">tags</span><span class="o">/</span><span class="n">Apple</span><span class="o">/</span><span class="n">clang</span><span class="o">-</span><span class="mf">421.0.60</span><span class="p">)</span> <span class="p">(</span><span class="n">based</span> <span class="n">on</span> <span class="n">LLVM</span> <span class="mf">3.1</span><span class="n">svn</span><span class="p">)</span>
</span><span class="line"><span class="nl">Target:</span> <span class="n">x86_64</span><span class="o">-</span><span class="n">apple</span><span class="o">-</span><span class="n">darwin12</span><span class="mf">.1.0</span>
</span><span class="line"><span class="n">Thread</span> <span class="n">model</span><span class="o">:</span> <span class="n">posix</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp"># 没有的话安装 llvm 套件</span>
</span><span class="line"><span class="n">brew</span> <span class="n">install</span> <span class="o">--</span><span class="n">HEAD</span> <span class="n">llvm</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">clang</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="start-compile">start compile</h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="o">:</span><span class="c1">//github.com/textmate/textmate.git</span>
</span><span class="line"><span class="n">cd</span> <span class="n">textmate</span>
</span><span class="line"><span class="n">git</span> <span class="n">submodule</span> <span class="n">update</span> <span class="o">--</span><span class="n">init</span>
</span><span class="line"><span class="p">.</span><span class="o">/</span><span class="n">configure</span> <span class="o">&amp;&amp;</span> <span class="n">ninja</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>作者用 ninja 取代了 make 进行编译和安装</p>

<p>编译完了图标居然变成了菊花。。以前的图标差不多成为了一个标志，实在是理解不能。。</p>

<p>生成的 app 文件位于</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="o">~/</span><span class="n">build</span><span class="o">/</span><span class="n">TextMate</span><span class="o">/</span><span class="n">Applications</span><span class="o">/</span><span class="n">TextMate</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>图标就是那朵粉嫩的菊花。。难看死了</p>

<p>最后贴上一张芙蓉照</p>

<p><img src="http://m1.img.libdd.com/farm5/2012/0829/00/00A980D9C6A159F9467E71EFCE4485420E266C05049E_1190_714.PNG" alt="" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails view select 方法学习]]></title>
    <link href="http://Bigcircle.github.com/blog/explain-select-on-rails-hepler.html/"/>
    <updated>2012-08-28T10:52:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/explain-select-on-rails-hepler</id>
    <content type="html"><![CDATA[<p>开始几篇都是扯些闲蛋，从这篇开始多写点技术方面学习的东西，多谈点实际，少谈点主义，做只勤劳的小蜜蜂</p>

<p>rails的actionview提供了简单的select方法生产表单选择项，根据 <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html">Api</a> 指示，用法如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="n">object</span><span class="p">,</span> <span class="nb">method</span><span class="p">,</span> <span class="n">choices</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">html_options</span> <span class="o">=</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>object是指select选项所修饰的目标对象，通常是一个Model对象</li>
  <li>method是目标对象的属性（方法）名</li>
  <li>choices可以是任何可枚举的对象，数组，Hash或者是包含了选择框的数据库查询结果</li>
  <li>options选项</li>
  <li>html_options是html相关选项</li>
</ul>

<p>include_blank 会显示值为空的默认选项，prompt 会给个提示选择，比如提示 Select One.
例如对于  @post.person_id =&gt; 2</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="s2">&quot;post&quot;</span><span class="p">,</span> <span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="no">Person</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="o">[</span> <span class="nb">p</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="nb">p</span><span class="o">.</span><span class="n">id</span> <span class="o">]</span> <span class="p">},</span> <span class="p">{</span><span class="ss">:include_blank</span> <span class="o">=&gt;</span> <span class="s1">&#39;None&#39;</span><span class="p">})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;post[person_id]&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">&gt;</span><span class="no">None</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;1&quot;&gt;David&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;2&quot;</span> <span class="n">selected</span><span class="o">=</span><span class="s2">&quot;selected&quot;</span><span class="o">&gt;</span><span class="no">Sam</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;3&quot;&gt;Tobias&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/select&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<p>index =&gt; nil 不显示空选项或提示项，直接显示第一个值</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="s2">&quot;album[]&quot;</span><span class="p">,</span> <span class="s2">&quot;genre&quot;</span><span class="p">,</span> <span class="sx">%w[rap rock country]</span><span class="p">,</span> <span class="p">{},</span> <span class="p">{</span> <span class="ss">:index</span> <span class="o">=&gt;</span> <span class="kp">nil</span> <span class="p">})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;album[][genre]&quot;</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;album__genre&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;rap&quot;</span><span class="o">&gt;</span><span class="n">rap</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;rock&quot;&gt;rock&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;country&quot;</span><span class="o">&gt;</span><span class="n">country</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">&lt;/se</span><span class="n">lect</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>:disabled =&gt; value 设置一个单独的值或者Prco对象 html标签属性为disable</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="s2">&quot;post&quot;</span><span class="p">,</span> <span class="s2">&quot;category&quot;</span><span class="p">,</span> <span class="no">Post</span><span class="o">::</span><span class="no">CATEGORIES</span><span class="p">,</span> <span class="p">{</span><span class="ss">:disabled</span> <span class="o">=&gt;</span> <span class="s1">&#39;restricted&#39;</span><span class="p">})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;post[category]&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span><span class="o">&gt;&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option&gt;joke&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span><span class="o">&gt;</span><span class="n">poem</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option disabled=&quot;disabled&quot;&gt;restricted&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/select&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当用到collection_select时，可以鉴定一个Proc对象是否disable</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">collection_select</span><span class="p">(</span><span class="ss">:post</span><span class="p">,</span> <span class="ss">:category_id</span><span class="p">,</span> <span class="no">Category</span><span class="o">.</span><span class="n">all</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="p">{</span><span class="ss">:disabled</span> <span class="o">=&gt;</span> <span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">category</span><span class="o">|</span> <span class="n">category</span><span class="o">.</span><span class="n">archived?</span> <span class="p">}})</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nb">select</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;post[category_id]&quot;</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;1&quot;</span> <span class="n">disabled</span><span class="o">=</span><span class="s2">&quot;disabled&quot;</span><span class="o">&gt;</span><span class="mi">2008</span> <span class="n">stuff</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;2&quot; disabled=&quot;disabled&quot;&gt;Christmas&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="n">option</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;3&quot;</span><span class="o">&gt;</span><span class="no">Jokes</span><span class="o">&lt;</span><span class="sr">/option&gt;</span>
</span><span class="line"><span class="sr">  &lt;option value=&quot;4&quot;&gt;Poems&lt;/o</span><span class="n">ption</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/select&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>html_option 里面还可以写各种js事件，比如这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">select</span><span class="p">(</span><span class="ss">:person</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="no">Persion</span><span class="o">.</span><span class="n">all</span><span class="p">,</span> <span class="p">{</span><span class="ss">:onchange</span> <span class="o">=&gt;</span> <span class="s1">&#39;doSomething()&#39;</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="selecttaghttpapirubyonrailsorgclassesactionviewhelpersformtaghelperhtmlmethod-i-selecttag"><a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html#method-i-select_tag">select_tag</a></h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">select_tag</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">option_tags</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>option =&gt; {:multiple, :disable, :include_blank, :prompt}
后三个和select里面用法一样，mutiple 允许同时传递多个值，相当于一个多选框</p>

<p>option_tags 可以自己手写几个option标签，或者用现成的方法，其实就是option标签的helper方法，Api 中的几个 <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_for_select">例子</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">options_for_select</span><span class="p">(</span><span class="n">container</span><span class="p">,</span> <span class="n">selected</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">options_from_collection_for_select</span><span class="p">(</span><span class="n">collection</span><span class="p">,</span> <span class="n">value_method</span><span class="p">,</span> <span class="n">text_method</span><span class="p">,</span> <span class="n">selected</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="collectionselecthttpapirubyonrailsorgclassesactionviewhelpersformoptionshelperhtmlmethod-i-collectionselect"><a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_select">collection_select</a></h5>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">collection_select</span><span class="p">(</span><span class="n">object</span><span class="p">,</span> <span class="nb">method</span><span class="p">,</span> <span class="n">collection</span><span class="p">,</span> <span class="n">value_method</span><span class="p">,</span> <span class="n">text_method</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">html_options</span> <span class="o">=</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>collect_select 比 select 多了2个选项，value_method 和 text_method 分别表示 collection 你想选择的对应字段，相当于 select + options_from_collection_for_select 的组合，大致功能其实和 select 差不多</p>

<p>一篇老外5年前写的介绍这几个 select 的 <a href="http://shiningthrough.co.uk/Select-helper-methods-in-Ruby-on-Rails">文章</a>，rails 的中文文档还是太少了。</p>

<p>剩下几个出场率太低的helper</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">grouped_collection_select</span><span class="p">(</span><span class="n">object</span><span class="p">,</span> <span class="nb">method</span><span class="p">,</span> <span class="n">collection</span><span class="p">,</span> <span class="n">group_method</span><span class="p">,</span> <span class="n">group_label_method</span><span class="p">,</span> <span class="n">option_key_method</span><span class="p">,</span> <span class="n">option_value_method</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">html_options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class="line">
</span><span class="line"><span class="n">grouped_options_for_select</span><span class="p">(</span><span class="n">grouped_options</span><span class="p">,</span> <span class="n">selected_key</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">prompt</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">option_groups_from_collection_for_select</span><span class="p">(</span><span class="n">collection</span><span class="p">,</span> <span class="n">group_method</span><span class="p">,</span> <span class="n">group_label_method</span><span class="p">,</span> <span class="n">option_key_method</span><span class="p">,</span> <span class="n">option_value_method</span><span class="p">,</span> <span class="n">selected_key</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>grouped_collection_select用法和 collection_select 差不多，只是会生成 optgroup 标签来标识二级选项</li>
  <li>grouped_options_for_select 也是一样，比 options_for_select 多一层 optgroup 标签</li>
  <li>option_groups_from_collection_for_select 同options_from_collection_for_select，都只是在原有基础上修改了下</li>
</ul>

<p>Rails 源码在此，有兴趣的可以拜读下 <a href="https://github.com/rails/rails/blob/27c8debdc6b242c845a279187205a2b057e18469/actionpack/lib/action_view/helpers/form_options_helper.rb#L156">Here</a></p>

<p>用 select 的好处就是书写简洁，可以配合js生产联动查询，比如说最常用的省市查询
不过对于不熟悉语法的人可能读起来就不如直接 select &gt; option 直接明了，需要花时间去明白什么意思，各有利弊吧</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修改Octopress主题样式]]></title>
    <link href="http://Bigcircle.github.com/blog/modify-octopress-style-and-color.html/"/>
    <updated>2012-08-27T19:17:00+08:00</updated>
    <id>http://Bigcircle.github.com/blog/modify-octopress-style-and-color</id>
    <content type="html"><![CDATA[<p>默认的Octopress已经烂大街了，第一眼可能看着还行，看多了加上别人的都是这个主题，总想自己搞个，不过想把大的框架做的好看真的很难，于是就在原有基础上随便修修补补，能看就行</p>

<p>主要修改了以下几个方面：</p>

<ul>
  <li>默认隐藏侧边栏，添加上class之后会挤到下面，看着也凑合，就没去掉</li>
  <li>整体颜色以 <code>#2697e3</code> 和 <code>lightblue</code> 为主，看着统一一点</li>
  <li>所有背景统一为一个背景</li>
  <li>去掉各种边边框框，让样式尽量简单一点</li>
  <li>修改引用gist代码和普通代码的高亮和样式</li>
</ul>

<p>整体框架基本忠于原作，等什么时候看到好看的样式再折腾
<!-- more --></p>
]]></content>
  </entry>
  
</feed>
